<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Anny Chang - F2E &amp; UI Designer</title>
  
  <subtitle>Design thinking is EVERYWHERE</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://annilla.github.io/"/>
  <updated>2017-12-02T16:00:00.000Z</updated>
  <id>http://annilla.github.io/</id>
  
  <author>
    <name>Anny Chang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Anny Chang&#39;s Portfolio - 作品集</title>
    <link href="http://annilla.github.io/3017/12/03/Portfolio/"/>
    <id>http://annilla.github.io/3017/12/03/Portfolio/</id>
    <published>3017-12-02T16:00:00.000Z</published>
    <updated>2017-12-02T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>My portfolio.</p><a id="more"></a><h1 id="Design-Collection"><a href="#Design-Collection" class="headerlink" title="Design Collection"></a>Design Collection</h1><h2 id="Behance-https-www-behance-net-annilla"><a href="#Behance-https-www-behance-net-annilla" class="headerlink" title="Behance: https://www.behance.net/annilla"></a>Behance: <a href="https://www.behance.net/annilla" target="_blank" rel="external">https://www.behance.net/annilla</a></h2><h1 id="Web-Collection"><a href="#Web-Collection" class="headerlink" title="Web Collection"></a>Web Collection</h1><table><thead><tr><th>作品</th><th>分類</th><th>連結</th></tr></thead><tbody><tr><td>網站</td><td>綜合</td><td><a href="https://www.juksy.com/" target="_blank" rel="external">JUKSY 街星</a></td></tr><tr><td>網頁</td><td>展覽</td><td><a href="https://www.juksy.com/events/avengersstation" target="_blank" rel="external">《復仇者聯盟》世界巡迴展</a></td></tr><tr><td>網頁</td><td>電影</td><td><a href="https://www.juksy.com/events/MMPR2017" target="_blank" rel="external">《金剛戰士》Power Rangers GO GO！</a></td></tr><tr><td>網頁</td><td>名人</td><td><a href="https://www.juksy.com/events/idareyoujune" target="_blank" rel="external">放肆越限 ● I Dare You</a> - 陳建州 &amp; 四葉草</td></tr><tr><td>網頁</td><td>名人</td><td><a href="https://www.juksy.com/events/dope2017may" target="_blank" rel="external">回家才DOPE ● Home Sweet Home</a> - 兄弟本色 &amp; 邵雨薇</td></tr><tr><td>網頁</td><td>名人</td><td><a href="https://www.juksy.com/events/northsouth2017April" target="_blank" rel="external">南北潮什麼 / From North to South</a> - 盧廣仲 &amp; 柯佳嬿</td></tr><tr><td>網頁</td><td>名人</td><td><a href="https://www.juksy.com/events/outofcontrol2017" target="_blank" rel="external">瘋面人物 / Out of control</a> - 許瑋甯 &amp; 吳慷仁</td></tr><tr><td>網頁</td><td>名人</td><td><a href="https://www.juksy.com/events/month1702valentine/" target="_blank" rel="external">我單故我在 Valentine, So what?</a> - 藍正龍</td></tr><tr><td>網頁</td><td>名人</td><td><a href="https://www.juksy.com/events/month1701F5reborn" target="_blank" rel="external">人生F5鍵 Reborn</a> - 瑤瑤</td></tr><tr><td>網頁</td><td>名人</td><td><a href="https://www.juksy.com/events/month1612waittoaction" target="_blank" rel="external">扳勢回潮　等不及的蓄勢待發！ Wait  to action</a> - 吳建豪</td></tr><tr><td>網頁</td><td>電影</td><td><a href="https://www.juksy.com/events/assassin2016creed" target="_blank" rel="external">刺客教條 12/28(三)跨年最強檔</a></td></tr><tr><td>網頁</td><td>名人</td><td><a href="https://www.juksy.com/events/month1611donjudge" target="_blank" rel="external">Don’t Judge me！玩跳．TONE</a> - 安心亞</td></tr><tr><td>網頁</td><td>電影</td><td><a href="https://www.juksy.com/events/fantastic2016beasts" target="_blank" rel="external">《怪獸與牠們的產地》JUKSY特別企劃</a></td></tr><tr><td>網頁</td><td>廠商</td><td><a href="https://www.juksy.com/events/brand201611angeliapets" target="_blank" rel="external">耍YOUNG無極限，玩酷做自己</a> - Angelia  &amp;  Pets</td></tr><tr><td>網頁</td><td>廠商</td><td><a href="https://www.juksy.com/events/brand201611samsung360" target="_blank" rel="external">精彩視界 一觸可及</a> - SAMSUNG</td></tr><tr><td>網頁</td><td>廠商</td><td><a href="https://www.juksy.com/events/brand201611fashioncity" target="_blank" rel="external">分享屬於你的[城市時尚]─你的城市‧由你演繹</a> - SAMSUNG 打卡分享照片</td></tr><tr><td>網頁</td><td>名人</td><td><a href="https://www.juksy.com/events/month1610bromance" target="_blank" rel="external">The Bromance！絕對合拍</a> - 蕭敬騰</td></tr><tr><td>網頁</td><td>名人</td><td><a href="https://www.juksy.com/events/month1609intoblack" target="_blank" rel="external">大勢黑潮 INTO BLACK</a> - SPEXIAL</td></tr><tr><td>網頁</td><td>電影</td><td><a href="https://www.juksy.com/events/train2016zombie" target="_blank" rel="external">屍速列車 屍裡逃生</a></td></tr><tr><td>網頁</td><td>遊戲</td><td><a href="https://www.juksy.com/events/pokemon2016go" target="_blank" rel="external">成神之路有你有我！寶可夢全攻略</a></td></tr><tr><td>網頁</td><td>名人</td><td><a href="https://www.juksy.com/events/month1608hithot" target="_blank" rel="external">熱浪來襲HITHOT</a> - 劉以豪</td></tr><tr><td>網頁</td><td>穿搭</td><td><a href="https://www.juksy.com/events/summer2016girlstyle" target="_blank" rel="external">熱辣無極限！2016年夏日潮妞穿搭公式</a></td></tr><tr><td>網頁</td><td>穿搭</td><td><a href="https://www.juksy.com/events/summer2016menstyle" target="_blank" rel="external">型到出火！體感41度的TO DO LIST</a></td></tr><tr><td>網頁</td><td>投票活動</td><td>JUKSY超新星（連結失效）</td></tr><tr><td>網頁</td><td>名人</td><td>用歌聲唱出最真的自己（連結失效） - 汪小敏</td></tr><tr><td>網站</td><td>公司</td><td><a href="http://www.taxxtron-tayu.com/" target="_blank" rel="external">京達國際股份有限公司</a></td></tr><tr><td>網站</td><td>購物</td><td><a href="http://web.ntnu.edu.tw/~60040004S/" target="_blank" rel="external">LOVEBABY讓您在家也能呵護寶貝</a></td></tr><tr><td>網站</td><td>研討會</td><td><a href="http://tame.tw/pme36/" target="_blank" rel="external">PME36</a></td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;My portfolio.&lt;/p&gt;
    
    </summary>
    
      <category term="Portfolio" scheme="http://annilla.github.io/categories/Portfolio/"/>
    
    
      <category term="Portfolio" scheme="http://annilla.github.io/tags/Portfolio/"/>
    
      <category term="作品集" scheme="http://annilla.github.io/tags/%E4%BD%9C%E5%93%81%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>Anny Chang&#39;s Resume - 履歷</title>
    <link href="http://annilla.github.io/3017/09/30/Resume/"/>
    <id>http://annilla.github.io/3017/09/30/Resume/</id>
    <published>3017-09-29T16:00:00.000Z</published>
    <updated>2017-12-02T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>My resume.</p><a id="more"></a><h1 id="Professional-Info"><a href="#Professional-Info" class="headerlink" title="Professional Info"></a>Professional Info</h1><h2 id="專長"><a href="#專長" class="headerlink" title="專長"></a>專長</h2><ul><li><p>設計 <code>UI</code> 介面、 <code>RWD</code> 網頁製作、 <code>SPA</code> 程式撰寫</p></li><li><p>擅用設計 <code>UI</code> 軟體（<code>Sketch</code>, <code>Adobe XD</code>, <code>Illustrator</code>, <code>Photoshop</code>）</p></li></ul><h2 id="證照"><a href="#證照" class="headerlink" title="證照"></a>證照</h2><table><thead><tr><th>時間</th><th>證書</th></tr></thead><tbody><tr><td>2017.03</td><td>國際 TOEIC 藍色證書 765分</td></tr><tr><td>2015.11</td><td>國家技術士網頁設計丙級證照</td></tr><tr><td>2014.12</td><td>國際 ACA Illustrator CS6 證照</td></tr><tr><td>2013.12</td><td>Adobe Master Of Rich Media Web Design Courses 證書</td></tr><tr><td>2013.06</td><td>中華民國斐陶斐榮譽學會榮譽會員 （碩士應屆第一名）</td></tr><tr><td>2013.03</td><td>國際 ACA Flash CS6 證照</td></tr><tr><td>2013.03</td><td>國際 ACA Dreamweaver CS6 證照</td></tr><tr><td>2012.11</td><td>國際 ACA Photoshop CS6 證照</td></tr><tr><td>2011.12</td><td>Adobe Digital Graphic Design Courses 證書</td></tr><tr><td>高中</td><td>全民英檢中級 證書</td></tr></tbody></table><h3 id="Adobe-Badges-國際ACA認證獎章"><a href="#Adobe-Badges-國際ACA認證獎章" class="headerlink" title="Adobe Badges (國際ACA認證獎章)"></a><a href="https://www.youracclaim.com/users/chiao-ni-chang" target="_blank" rel="external">Adobe Badges (國際ACA認證獎章)</a></h3><h2 id="受訓"><a href="#受訓" class="headerlink" title="受訓"></a>受訓</h2><table><thead><tr><th>時間</th><th>課程</th></tr></thead><tbody><tr><td>2017.09</td><td>Skilltree JavaScript 實務測試新手班 第三梯</td></tr><tr><td>2017.06</td><td>網站測試開發 with WebdriverIO 實戰講堂</td></tr><tr><td>2014.11</td><td>色彩溝通立即上手</td></tr><tr><td>2014.10</td><td>網路活動創意規劃與會員行銷管理</td></tr><tr><td>2014.09</td><td>如何提升網路關鍵字行銷的成效</td></tr><tr><td>2014.09</td><td>JR-基層管理幹部工作關係與團隊力提昇</td></tr><tr><td>2014.08</td><td>eDM電子郵件行銷及電子報經營</td></tr><tr><td>2014.08</td><td>JM-基層幹部工作改善與執行力提昇培訓</td></tr></tbody></table><h1 id="Work​-Experience​​​"><a href="#Work​-Experience​​​" class="headerlink" title="Work​ Experience​​​"></a>Work​ Experience​​​</h1><table><thead><tr><th>時間</th><th>公司</th><th>職稱</th></tr></thead><tbody><tr><td>2017.06.12 - NOW</td><td>Kingston Technology</td><td>UI Designer &amp; Front-end Developer</td></tr><tr><td>2015.04.06 - 2017.06.11</td><td>JUKSY 街星</td><td>網頁UI設計 / 網頁前端工程師</td></tr><tr><td>2013.07.01 - 2015.04.03</td><td>微璽科技股份有限公司</td><td>商業設計 / 網頁UI設計</td></tr></tbody></table><h1 id="Education"><a href="#Education" class="headerlink" title="Education"></a>Education</h1><table><thead><tr><th>時間</th><th>學校</th></tr></thead><tbody><tr><td>2011 - 2013</td><td>國立台灣師範大學, 數學系碩士班數學教育組</td></tr><tr><td>2007 - 2011</td><td>國立台灣師範大學, 數學系學士班</td></tr><tr><td>2004 - 2007</td><td>中山女高</td></tr></tbody></table><h1 id="Skills"><a href="#Skills" class="headerlink" title="Skills"></a>Skills</h1><ul><li><p>SKETCH</p></li><li><p>ADOBE XD</p></li><li><p>PHOTOSHOP</p></li><li><p>ILLUSTRATOR</p></li><li><p>VSCODE / VS2017</p></li><li><p>GITHUB</p></li><li><p>SOURCETREE</p></li><li><p>NPM</p></li><li><p>WEBPACK / GULP</p></li></ul><h1 id="Languages"><a href="#Languages" class="headerlink" title="Languages"></a>Languages</h1><ul><li><p>HTML / PUG</p></li><li><p>CSS / SASS(SCSS) / STYLUS</p></li><li><p>JS / JQUERY / VUE / ES6 / NODE</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;My resume.&lt;/p&gt;
    
    </summary>
    
      <category term="Resume" scheme="http://annilla.github.io/categories/Resume/"/>
    
    
  </entry>
  
  <entry>
    <title>.NET Core 2.0 SPA with Vue-Cli - Start New Project</title>
    <link href="http://annilla.github.io/2017/12/02/DotnetCore/NET-Core-2-0-SPA-with-Vue-Cli/"/>
    <id>http://annilla.github.io/2017/12/02/DotnetCore/NET-Core-2-0-SPA-with-Vue-Cli/</id>
    <published>2017-12-01T16:00:00.000Z</published>
    <updated>2017-12-01T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><code>.Net Core</code> 可以不用開啟慢吞吞的 <code>IDE</code>，即可快速建立專案。本篇全程使用 <code>VScode</code>，手把手教你如何用 <code>.NET Core 2.0 MVC</code> + <code>vue-cli</code> 起始一個 <code>SPA</code> 專案。當然， <code>HMR</code> (Hot Module Replacement) 神器也會一併附上啦。<br><a id="more"></a></p><blockquote><p>首先，這裡先澄清一點，就是 <code>.NET Core</code> 的 <code>template</code> 內建有 <code>ASP.NET Core with Vue.js</code>。因為是套裝，裡面還包含 <code>Bootstrap</code>, <code>Typescript</code> 等等，畢竟不是每個專案都會用到這些，所以本篇專注在如何結合 <code>.NET Core</code> 和 <code>Vue</code> ，那些依專案選用的項目就不會在這裡提到。</p></blockquote><h2 id="起始-NET-Core-2-0-MVC-專案"><a href="#起始-NET-Core-2-0-MVC-專案" class="headerlink" title="起始 .NET Core 2.0 MVC 專案"></a>起始 <code>.NET Core 2.0 MVC</code> 專案</h2><ol><li><p>安裝 <a href="https://github.com/dotnet/cli" target="_blank" rel="external">.NET Command Line Interface</a></p></li><li><p>新增一個 Core MVC 專案</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">dotnet new &apos;ASP.NET Core Web App (Model-View-Controller)&apos;</div></pre></td></tr></table></figure><ol><li>刪除不必要的檔案</li></ol><p>因為我們是 <code>SPA</code> 不需要用到 MVC 其他頁面的功能，所以將多餘的頁面和樣式去除。參考如下的資料夾結構。</p><p><img src="http://i965.photobucket.com/albums/ae138/anny09117011/Blog/2017-12-02_1006.png" alt="刪除多餘頁面和樣式後的檔案" title="資料夾結構"></p><ul><li><code>HomeController.cs</code> 刪除多餘的 Controller，只保留 <code>Index</code> 和 <code>Error</code></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">using System;</div><div class="line">using System.Collections.Generic;</div><div class="line">using System.Diagnostics;</div><div class="line">using System.Linq;</div><div class="line">using System.Threading.Tasks;</div><div class="line">using Microsoft.AspNetCore.Mvc;</div><div class="line">using dotnet_core_vue_cli.Models;</div><div class="line"></div><div class="line">namespace dotnet_core_vue_cli.Controllers</div><div class="line">&#123;</div><div class="line">  public class HomeController : Controller</div><div class="line">  &#123;</div><div class="line">    public IActionResult Index()</div><div class="line">    &#123;</div><div class="line">      return View();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public IActionResult Error()</div><div class="line">    &#123;</div><div class="line">      return View(new ErrorViewModel &#123; RequestId = Activity.Current?.Id ?? HttpContext.TraceIdentifier &#125;);</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><ul><li><code>Index.cshtml</code> 多餘的 HTML 刪除</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">@&#123;</div><div class="line">    ViewData["Title"] = "Home Page";</div><div class="line">&#125;</div><div class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>TEST<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div></pre></td></tr></table></figure><ul><li><code>_Layout.cshtml</code> 修改內容如下</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>@ViewData["Title"] - dotnet_core_vue_cli<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">environment</span> <span class="attr">include</span>=<span class="string">"Development"</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!-- 這邊放 Development 的 CSS --&gt;</span></div><div class="line">        <span class="comment">&lt;!-- &lt;link rel="stylesheet" href="~/css/xxx.css" asp-append-version="true"/&gt; --&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">environment</span> <span class="attr">exclude</span>=<span class="string">"Development"</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!-- 這邊放 Production 的 CSS --&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    @RenderBody()</div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">environment</span> <span class="attr">include</span>=<span class="string">"Development"</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!-- 這邊放 Development 的 JS --&gt;</span></div><div class="line">        <span class="comment">&lt;!-- &lt;script src="~/js/xxx.js" asp-append-version="true"&gt;&lt;/script&gt; --&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">environment</span> <span class="attr">exclude</span>=<span class="string">"Development"</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!-- 這邊放 Production 的 JS --&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></div><div class="line"></div><div class="line">    @RenderSection("Scripts", required: false)</div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure><p>現在來測試跑看看專案有沒有成功～</p><p>執行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">dotnet run</div></pre></td></tr></table></figure><p>用瀏覽器看 <code>http://localhost:5000</code> 就會跑出剛剛在 <code>Index.cshtml</code> 改寫的 TEST 字樣囉～</p><p><img src="http://i965.photobucket.com/albums/ae138/anny09117011/Blog/2017-12-02_1011.png" alt="http://localhost:5000" title="首頁"></p><h2 id="安裝-vue-cli-模板"><a href="#安裝-vue-cli-模板" class="headerlink" title="安裝 vue-cli 模板"></a>安裝 <code>vue-cli</code> 模板</h2><ol><li>安裝全域 <code>vue-cli</code></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install -g vue-cli</div></pre></td></tr></table></figure><ol><li>起始一個簡易的 <code>vue</code> + <code>webpack</code> 專案</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vue init webpack-simple</div></pre></td></tr></table></figure><p>按照 <code>vue-cli</code> 的指示回覆操作如下圖。</p><p><img src="http://i965.photobucket.com/albums/ae138/anny09117011/Blog/2017-12-02_1018.png" alt="vue-cli" title="vue-cli"></p><p>執行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install</div></pre></td></tr></table></figure><p>測試 <code>Node</code> 有沒有安裝成功 <code>Vue</code> 專案</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm run dev</div></pre></td></tr></table></figure><p>用瀏覽器看 <code>http://localhost:8080</code> 如果有成功出現如下面畫面就是安裝成功 <code>vue</code> 的專案囉～</p><p><img src="http://i965.photobucket.com/albums/ae138/anny09117011/Blog/2017-12-02_1024.png" alt="http://localhost:8080" title="首頁"></p><blockquote><p>誒～你有沒有注意到奇怪的地方啊?!我們跑 <code>vue</code> 的時候是用 <code>node server</code> 執行，但是真正專案要在 <code>.NET server</code> 執行。所以怎麼把這兩者結合呢？主要原理就是：在 <code>Development</code> 時把 <code>node server</code> 當作是前端產生靜態資源 (<code>JS</code>, <code>Css</code>, <code>images</code>…) 的工具; <code>Production</code> 的部分就把產出過後的靜態資源給 <code>.NET server</code> 使用。廢話不多說，我們就來趕緊試試看吧。</p></blockquote><h2 id="結合-NET-Core-和-Vue"><a href="#結合-NET-Core-和-Vue" class="headerlink" title="結合 .NET Core 和 Vue"></a>結合 <code>.NET Core</code> 和 <code>Vue</code></h2><ol><li>修改 <code>webpack.config.js</code>，將靜態檔案產生在 <code>wwwroot</code> 資料夾中</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">......</div><div class="line"><span class="built_in">module</span>.exports = &#123;</div><div class="line">  entry: &#123;</div><div class="line">    main: <span class="string">'./src/main.js'</span></div><div class="line">  &#125;,</div><div class="line">  output: &#123;</div><div class="line">    path: path.resolve(__dirname, <span class="string">'./wwwroot'</span>),</div><div class="line">    publicPath: <span class="string">'/wwwroot/'</span>,</div><div class="line">    filename: <span class="string">'js/build.js'</span></div><div class="line">  &#125;,</div><div class="line">  <span class="built_in">module</span>: &#123;</div><div class="line">    rules: [</div><div class="line">      ......</div><div class="line">      &#123;</div><div class="line">        test: <span class="regexp">/\.(png|jpg|gif|svg)$/</span>,</div><div class="line">        loader: <span class="string">'file-loader'</span>,</div><div class="line">        options: &#123;</div><div class="line">          publicPath: <span class="string">'/'</span>,</div><div class="line">          outputPath: <span class="string">'imgs/'</span>,</div><div class="line">          name: <span class="string">'[name].[ext]?[hash]'</span></div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line">    ]</div><div class="line">  &#125;,</div><div class="line">  ......</div><div class="line">&#125;</div><div class="line">......</div></pre></td></tr></table></figure><ol><li>修改 <code>cshtml</code> 加入對應的 <code>js</code> 和 <code>html</code></li></ol><ul><li><code>_Layout.cshtml</code> 修改內容如下</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>@ViewData["Title"] - dotnet_core_vue_cli<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">environment</span> <span class="attr">include</span>=<span class="string">"Development"</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!-- 這邊放 Development 的 CSS --&gt;</span></div><div class="line">        <span class="comment">&lt;!-- &lt;link rel="stylesheet" href="~/css/xxx.css" asp-append-version="true"/&gt; --&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">environment</span> <span class="attr">exclude</span>=<span class="string">"Development"</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!-- 這邊放 Production 的 CSS --&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    @RenderBody()</div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">environment</span> <span class="attr">include</span>=<span class="string">"Development"</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!-- 這邊放 Development 的 JS --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"~/js/build.js"</span> <span class="attr">asp-append-version</span>=<span class="string">"true"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">environment</span> <span class="attr">exclude</span>=<span class="string">"Development"</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!-- 這邊放 Production 的 JS --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"~/js/build.js"</span> <span class="attr">asp-append-version</span>=<span class="string">"true"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></div><div class="line"></div><div class="line">    @RenderSection("Scripts", required: false)</div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure><ul><li>接著修改 <code>Index.cshtml</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">@&#123;</div><div class="line">    ViewData["Title"] = "Home Page";</div><div class="line">&#125;</div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure><p>測試跑跑看 <code>.NET server</code> 有沒有成功？</p><p>先產生靜態檔案</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm run build</div></pre></td></tr></table></figure><p>再啟動伺服器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">dotnet run</div></pre></td></tr></table></figure><p>成功就會出現之前一樣的畫面囉～</p><p><img src="http://i965.photobucket.com/albums/ae138/anny09117011/Blog/2017-12-02_1110.png" alt="http://localhost:5000" title="首頁"></p><h2 id="設定-HMR-和-vue-router-的-fallback"><a href="#設定-HMR-和-vue-router-的-fallback" class="headerlink" title="設定 HMR 和 vue router 的 fallback"></a>設定 <code>HMR</code> 和 <code>vue router</code> 的 fallback</h2><p>接著才是重頭戲～如魔法般的 <code>HMR</code> 功能登場!!!</p><p>如果還不太知道什麼是 <code>HMR</code> 的，就 google 一下囉～</p><ol><li>安裝 <code>aspnet-webpack</code>, <code>webpack-hot-middleware</code></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm i -D aspnet-webpack</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm i -D webpack-hot-middleware</div></pre></td></tr></table></figure><ol><li>新增 <code>ASP.NET Core SPA Services</code></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">dotnet add package Microsoft.AspNetCore.SpaServices --version 2.0.1</div></pre></td></tr></table></figure><ol><li>修改 <code>Startup.cs</code></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">using Microsoft.AspNetCore.SpaServices.Webpack;</div><div class="line"></div><div class="line">......</div><div class="line">  // This method gets called by the runtime. Use this method to configure the HTTP request pipeline.</div><div class="line">  public void Configure(IApplicationBuilder app, IHostingEnvironment env)</div><div class="line">  &#123;</div><div class="line">    // [HMR] http://www.c-sharpcorner.com/article/using-hot-module-replacement-feature-of-webpack-in-asp-net-core/</div><div class="line">    if (env.IsDevelopment())</div><div class="line">    &#123;</div><div class="line">      app.UseDeveloperExceptionPage();</div><div class="line">      app.UseWebpackDevMiddleware(new WebpackDevMiddlewareOptions</div><div class="line">      &#123;</div><div class="line">        HotModuleReplacement = true</div><div class="line">      &#125;);</div><div class="line">    &#125;</div><div class="line">    ......</div><div class="line">    app.UseMvc(routes =&gt;</div><div class="line">    &#123;</div><div class="line">      routes.MapRoute(</div><div class="line">        name: &quot;default&quot;,</div><div class="line">        template: &quot;&#123;controller=Home&#125;/&#123;action=Index&#125;/&#123;id?&#125;&quot;);</div><div class="line"></div><div class="line">      // Use Vue Router must add fallback route</div><div class="line">      // Help to navigate directly</div><div class="line">      // https://stu.ratcliffe.io/2017/07/20/vuejs-serverside-rendering-with-aspnet-core</div><div class="line">      routes.MapSpaFallbackRoute(&quot;spa-fallback&quot;, new &#123; controller = &quot;Home&quot;, action = &quot;Index&quot; &#125;);</div><div class="line">    &#125;);</div><div class="line">  &#125;</div><div class="line">......</div></pre></td></tr></table></figure><ol><li><code>package.json</code> 指令加上 HMR</li></ol><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  ......</div><div class="line">  "scripts": &#123;</div><div class="line">    "hmr": "cross-env ASPNETCORE_ENVIRONMENT=Development NODE_ENV=development dotnet run",</div><div class="line">    "dev": "cross-env NODE_ENV=development webpack-dev-server --open --hot",</div><div class="line">    "build": "cross-env NODE_ENV=production webpack --progress --hide-modules"</div><div class="line">  &#125;,</div><div class="line">  ......</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>執行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm run hmr</div></pre></td></tr></table></figure><p>成功的話就會從 <code>Chrome</code> 開發者工具看到 <code>HMR</code> 連結成功囉～</p><p><img src="http://i965.photobucket.com/albums/ae138/anny09117011/Blog/2017-12-02_1249.png" alt="http://localhost:5000" title="首頁"></p><p>今天的範例在 <a href="https://github.com/Annilla/dotnet-core-vue-cli/tree/v1.0.0" target="_blank" rel="external">github</a>，下回見～</p><h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><ul><li><a href="http://www.dotnetcurry.com/aspnet/1383/modern-web-dev-aspnet-core-webpack-vuejs" target="_blank" rel="external">Modern Web Development using ASP.NET Core template, Vue.js and Webpack</a></li><li><a href="http://www.c-sharpcorner.com/article/using-hot-module-replacement-feature-of-webpack-in-asp-net-core/" target="_blank" rel="external">Using Hot Module Replacement Feature Of Webpack In ASP.NET Core</a></li><li><a href="https://www.nuget.org/packages/Microsoft.AspNetCore.SpaServices/" target="_blank" rel="external">Microsoft.AspNetCore.SpaServices</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;.Net Core&lt;/code&gt; 可以不用開啟慢吞吞的 &lt;code&gt;IDE&lt;/code&gt;，即可快速建立專案。本篇全程使用 &lt;code&gt;VScode&lt;/code&gt;，手把手教你如何用 &lt;code&gt;.NET Core 2.0 MVC&lt;/code&gt; + &lt;code&gt;vue-cli&lt;/code&gt; 起始一個 &lt;code&gt;SPA&lt;/code&gt; 專案。當然， &lt;code&gt;HMR&lt;/code&gt; (Hot Module Replacement) 神器也會一併附上啦。&lt;br&gt;
    
    </summary>
    
      <category term=".NET Core" scheme="http://annilla.github.io/categories/NET-Core/"/>
    
    
      <category term="Webpack" scheme="http://annilla.github.io/tags/Webpack/"/>
    
      <category term=".NET Core" scheme="http://annilla.github.io/tags/NET-Core/"/>
    
      <category term="dotnet" scheme="http://annilla.github.io/tags/dotnet/"/>
    
      <category term="Vue" scheme="http://annilla.github.io/tags/Vue/"/>
    
      <category term="SPA" scheme="http://annilla.github.io/tags/SPA/"/>
    
      <category term="MVC" scheme="http://annilla.github.io/tags/MVC/"/>
    
  </entry>
  
  <entry>
    <title>Webpack 3 Tutorial - add PUG templates to write html</title>
    <link href="http://annilla.github.io/2017/11/01/Webpack/Webpack-3-Tutorial-add-PUG-templates-to-write-html/"/>
    <id>http://annilla.github.io/2017/11/01/Webpack/Webpack-3-Tutorial-add-PUG-templates-to-write-html/</id>
    <published>2017-10-31T16:00:00.000Z</published>
    <updated>2017-10-31T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>此篇介紹如何加入並使用 <code>pug-loader</code>，並使用 <code>PUG</code> 語法測試撰寫 <code>html</code>。<br><a id="more"></a></p><h2 id="安裝-pug-loader"><a href="#安裝-pug-loader" class="headerlink" title="安裝 pug-loader"></a>安裝 <code>pug-loader</code></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm i -D pug pug-loader</div></pre></td></tr></table></figure><h2 id="設定-webpack-config-js"><a href="#設定-webpack-config-js" class="headerlink" title="設定 webpack.config.js"></a>設定 <code>webpack.config.js</code></h2><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">......</div><div class="line"></div><div class="line"><span class="built_in">module</span>.exports = &#123;</div><div class="line">  ......</div><div class="line">  <span class="built_in">module</span>: &#123;</div><div class="line">    rules: [</div><div class="line">      ......</div><div class="line">      &#123;</div><div class="line">        test: <span class="regexp">/\.pug$/</span>,</div><div class="line">        use: <span class="string">'pug-loader'</span></div><div class="line">      &#125;</div><div class="line">    ]</div><div class="line">  &#125;,</div><div class="line">  ......</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="撰寫-index-pug"><a href="#撰寫-index-pug" class="headerlink" title="撰寫 index.pug"></a>撰寫 <code>index.pug</code></h2><p>接著我們嘗試把 <code>index.html</code> 改檔名為 <code>index.pug</code>，並把內容換成以下 <code>Pug</code> 範例。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">doctype html</div><div class="line">html(lang=&quot;en&quot;)</div><div class="line">  head</div><div class="line">    title= pageTitle</div><div class="line">    script(type=&apos;text/javascript&apos;).</div><div class="line">      if (foo) bar(1 + 5)</div><div class="line">  body</div><div class="line">    h1 Pug - node template engine</div><div class="line">    #container.col</div><div class="line">      if youAreUsingPug</div><div class="line">        p You are amazing</div><div class="line">      else</div><div class="line">        p Get on it!</div><div class="line">      p.</div><div class="line">        Pug is a terse and simple templating language with a</div><div class="line">        strong focus on performance and powerful features.</div></pre></td></tr></table></figure><p>接著記得把 <code>webpack.config.js</code> plugin 中的 <code>HtmlWebpackPlugin</code> 設定換成現在新的 <code>Pug</code> 檔案。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">module</span>.exports = &#123;</div><div class="line">  ......</div><div class="line">  plugins: [</div><div class="line">    <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</div><div class="line">      template: <span class="string">'./src/index.pug'</span></div><div class="line">    &#125;),</div><div class="line">    ......</div><div class="line">  ]</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>執行 <code>npm run dev</code>，就可以看到 <code>Pug</code> 執行出來的畫面囉。</p><p><img src="http://i965.photobucket.com/albums/ae138/anny09117011/Blog/2017-10-28_1131.png" alt="執行 npm run dev 後畫面" title="dist/index.pug"></p><p>今天的範例 <a href="https://github.com/Annilla/webpack_practice/tree/v1.5.0" target="_blank" rel="external">Github</a> 在此，下次見～</p><h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><ul><li><a href="https://github.com/pugjs/pug-loader" target="_blank" rel="external">pug-loader</a></li><li><a href="https://github.com/pugjs/pug" target="_blank" rel="external">Pug</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;此篇介紹如何加入並使用 &lt;code&gt;pug-loader&lt;/code&gt;，並使用 &lt;code&gt;PUG&lt;/code&gt; 語法測試撰寫 &lt;code&gt;html&lt;/code&gt;。&lt;br&gt;
    
    </summary>
    
      <category term="Webpack" scheme="http://annilla.github.io/categories/Webpack/"/>
    
    
      <category term="Webpack" scheme="http://annilla.github.io/tags/Webpack/"/>
    
  </entry>
  
  <entry>
    <title>Webpack 3 Tutorial - add Babel loader to write js use ES6</title>
    <link href="http://annilla.github.io/2017/10/01/Webpack/Webpack-3-Tutorial-add-Babel-loader-to-write-js-use-ES6/"/>
    <id>http://annilla.github.io/2017/10/01/Webpack/Webpack-3-Tutorial-add-Babel-loader-to-write-js-use-ES6/</id>
    <published>2017-09-30T16:00:00.000Z</published>
    <updated>2017-09-30T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>此篇介紹如何加入並使用 <code>babel-loader</code>，並使用 <code>ES6</code> 語法測試撰寫 <code>js</code>。<br><a id="more"></a></p><h2 id="安裝-babel-loader"><a href="#安裝-babel-loader" class="headerlink" title="安裝 babel-loader"></a>安裝 <code>babel-loader</code></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm i -D babel-loader babel-core babel-preset-env</div></pre></td></tr></table></figure><h2 id="設定-webpack-config-js"><a href="#設定-webpack-config-js" class="headerlink" title="設定 webpack.config.js"></a>設定 <code>webpack.config.js</code></h2><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">......</div><div class="line"></div><div class="line"><span class="built_in">module</span>.exports = &#123;</div><div class="line">  ......</div><div class="line">  <span class="built_in">module</span>: &#123;</div><div class="line">    rules: [</div><div class="line">      ......</div><div class="line">      &#123;</div><div class="line">        test: <span class="regexp">/\.js$/</span>,</div><div class="line">        exclude: <span class="regexp">/(node_modules)/</span>, <span class="comment">// 打包時排除 node_modules 資料夾</span></div><div class="line">        use: &#123;</div><div class="line">          loader: <span class="string">'babel-loader'</span>,</div><div class="line">          options: &#123;</div><div class="line">            presets: [<span class="string">'env'</span>] <span class="comment">// 使用 babel-preset-env</span></div><div class="line">          &#125;</div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line">    ]</div><div class="line">  &#125;,</div><div class="line">  ......</div><div class="line">&#125;</div></pre></td></tr></table></figure><blockquote><p>注意：此範例把 <code>Babel</code> 設定直接寫在 <code>webpack.config.js</code>，若 <code>options</code> 設定較複雜的話，可另外寫在 <code>.babelrc</code> 檔案中，參考<a href="https://babeljs.io/docs/setup/#installation" target="_blank" rel="external">Babel官網</a>。</p></blockquote><h2 id="測試-ES6-語法"><a href="#測試-ES6-語法" class="headerlink" title="測試 ES6 語法"></a>測試 <code>ES6</code> 語法</h2><p>新增檔案 <code>./src/js/es6.js</code>，撰寫程式如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="class"><span class="keyword">class</span> <span class="title">Point</span> </span>&#123;</div><div class="line">  <span class="keyword">constructor</span>(x, y) &#123;</div><div class="line">    <span class="keyword">this</span>.x = x;</div><div class="line">    <span class="keyword">this</span>.y = y;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="keyword">static</span> distance(a, b) &#123;</div><div class="line">    <span class="keyword">const</span> dx = a.x - b.x;</div><div class="line">    <span class="keyword">const</span> dy = a.y - b.y;</div><div class="line"></div><div class="line">    <span class="keyword">return</span> <span class="built_in">Math</span>.sqrt(dx*dx + dy*dy);</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>將剛剛寫的程式 <code>import</code> 到 <code>app.js</code>。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">......</div><div class="line"></div><div class="line"><span class="keyword">import</span> Point <span class="keyword">from</span> <span class="string">'./js/es6'</span></div><div class="line"></div><div class="line"><span class="comment">// Test for ES6</span></div><div class="line"><span class="comment">// https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Classes</span></div><div class="line"><span class="keyword">const</span> p1 = <span class="keyword">new</span> Point(<span class="number">5</span>, <span class="number">5</span>);</div><div class="line"><span class="keyword">const</span> p2 = <span class="keyword">new</span> Point(<span class="number">10</span>, <span class="number">10</span>);</div><div class="line"></div><div class="line"><span class="built_in">console</span>.log(<span class="string">`Test ES6 Distance: <span class="subst">$&#123;Point.distance(p1, p2)&#125;</span>`</span>);</div></pre></td></tr></table></figure><p>執行 <code>npm run dev</code>，就可以看到 <code>console</code> 出現計算後的兩點長度囉。</p><p><img src="http://i965.photobucket.com/albums/ae138/anny09117011/Blog/2017-09-30_1546.png" alt="執行 npm run dev 後畫面" title="dist/index.html"></p><p>更多 <code>babel-preset-env</code> 的配置選項可參考<a href="http://babeljs.io/docs/plugins/preset-env/#top" target="_blank" rel="external">官網</a>，有空也可以來試試 ES7 的 <code>async</code>, <code>await</code> 喔，我們下次見！</p><p>範例 <a href="https://github.com/Annilla/webpack_practice/tree/v1.4.0" target="_blank" rel="external">Github</a></p><h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><ul><li><a href="https://webpack.js.org/loaders/babel-loader/" target="_blank" rel="external">Babel-loader</a></li><li><a href="https://babeljs.io/" target="_blank" rel="external">Babel</a></li><li><a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Classes" target="_blank" rel="external">ES6 Classes</a></li><li><a href="http://babeljs.io/docs/plugins/preset-env/#top" target="_blank" rel="external">babel-preset-env</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;此篇介紹如何加入並使用 &lt;code&gt;babel-loader&lt;/code&gt;，並使用 &lt;code&gt;ES6&lt;/code&gt; 語法測試撰寫 &lt;code&gt;js&lt;/code&gt;。&lt;br&gt;
    
    </summary>
    
      <category term="Webpack" scheme="http://annilla.github.io/categories/Webpack/"/>
    
    
      <category term="Webpack" scheme="http://annilla.github.io/tags/Webpack/"/>
    
  </entry>
  
  <entry>
    <title>Webpack 3 Tutorial - Webpack Dev Server</title>
    <link href="http://annilla.github.io/2017/09/02/Webpack/Webpack-3-Tutorial-Webpack-Dev-Server/"/>
    <id>http://annilla.github.io/2017/09/02/Webpack/Webpack-3-Tutorial-Webpack-Dev-Server/</id>
    <published>2017-09-01T16:00:00.000Z</published>
    <updated>2017-09-01T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>此篇介紹如何加入並使用 <code>webpack-dev-server</code>，並展示 <code>Hot Reload</code> 功能。<br><a id="more"></a></p><h2 id="安裝-webpack-dev-server"><a href="#安裝-webpack-dev-server" class="headerlink" title="安裝 webpack-dev-server"></a>安裝 <code>webpack-dev-server</code></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm i -D webpack-dev-server</div></pre></td></tr></table></figure><h2 id="設定-webpack-config-js"><a href="#設定-webpack-config-js" class="headerlink" title="設定 webpack.config.js"></a>設定 <code>webpack.config.js</code></h2><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">module</span>.exports = &#123;</div><div class="line">  ......</div><div class="line">  devServer: &#123;</div><div class="line">    contentBase: path.join(__dirname, <span class="string">"dist"</span>), <span class="comment">// 從哪裡提供內容</span></div><div class="line">    port: <span class="number">9000</span> <span class="comment">// http://localhost:9000</span></div><div class="line">  &#125;,</div><div class="line">  ......</div><div class="line">&#125;;</div></pre></td></tr></table></figure><h2 id="設定-package-json"><a href="#設定-package-json" class="headerlink" title="設定 package.json"></a>設定 <code>package.json</code></h2><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  ......</div><div class="line">  <span class="string">"scripts"</span>: &#123;</div><div class="line">    <span class="string">"dev"</span>: <span class="string">"webpack-dev-server --open"</span>,</div><div class="line">    ......</div><div class="line">  &#125;,</div><div class="line">  ......</div><div class="line">&#125;</div></pre></td></tr></table></figure><ul><li>–open: 自動開啟預設瀏覽器</li></ul><p>執行 <code>npm</code> 指令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm run dev</div></pre></td></tr></table></figure></p><p>就會自動開啟瀏覽器看到預覽的畫面囉！</p><p><img src="http://i965.photobucket.com/albums/ae138/anny09117011/Blog/2017-09-02_0927.png" alt="執行 npm run dev" title="dist/index.html"></p><p>疑？內容的文字怎麼好像被切掉了。我們趕緊來試試看修改 <code>css</code> 的部分，順便看看  <code>Hot Reload</code> 的威力吧～</p><blockquote><p>關於實時加載（Live Reload）和熱加載（Hot Reload）的區別在於:實時加載應用更新時需要刷新當前頁面，可以看到明顯的全局刷新效果;而熱加載基本上看不出刷新的效果，類似於局部刷新。</p></blockquote><h2 id="測試-Hot-Reload"><a href="#測試-Hot-Reload" class="headerlink" title="測試 Hot Reload"></a>測試 <code>Hot Reload</code></h2><p>修改 <code>src/app.scss</code>，把字體變形的樣式註解掉</p><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">body</span> &#123;</div><div class="line">    <span class="attribute">background-color</span>: yellowgreen;</div><div class="line">    h1 &#123;</div><div class="line">        <span class="selector-tag">color</span>: <span class="selector-tag">green</span>;</div><div class="line">        // transform: scale(1.5);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>結果 <code>webpack-dev-server</code> 就幫我們即時打包並刷新瀏覽器頁面，所以我們就可以專心的寫code，畫面就會即時的自動更新囉，是不是超方便的啊？</p><p><img src="http://i965.photobucket.com/albums/ae138/anny09117011/Blog/2017-09-02_0928.png" alt="Hot Reload" title="dist/index.html"></p><p>今天的範例程式檔<a href="https://github.com/Annilla/webpack_practice/tree/v1.3.0" target="_blank" rel="external">github</a>，感謝收看。</p><h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><ul><li><p><a href="https://webpack.js.org/guides/development/#using-webpack-dev-server" target="_blank" rel="external">Use Webpack Dev Server</a></p></li><li><p><a href="https://webpack.js.org/configuration/dev-server/" target="_blank" rel="external">Webpack Dev Server Configuration</a></p></li><li><p><a href="http://www.jianshu.com/p/1fa6e9c0799f" target="_blank" rel="external">React Native 热加载（Hot Reload）原理简介</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;此篇介紹如何加入並使用 &lt;code&gt;webpack-dev-server&lt;/code&gt;，並展示 &lt;code&gt;Hot Reload&lt;/code&gt; 功能。&lt;br&gt;
    
    </summary>
    
      <category term="Webpack" scheme="http://annilla.github.io/categories/Webpack/"/>
    
    
      <category term="Webpack" scheme="http://annilla.github.io/tags/Webpack/"/>
    
  </entry>
  
  <entry>
    <title>Webpack 3 Tutorial - Style, CSS, Sass and Postcss loaders</title>
    <link href="http://annilla.github.io/2017/08/01/Webpack/Webpack-3-Tutorial-Style-CSS-and-Sass-loaders/"/>
    <id>http://annilla.github.io/2017/08/01/Webpack/Webpack-3-Tutorial-Style-CSS-and-Sass-loaders/</id>
    <published>2017-07-31T16:00:00.000Z</published>
    <updated>2017-07-31T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>此篇介紹如何將 <code>CSS</code> 、 <code>SASS</code> 引入 <code>Webpack</code> 專案中，並使用 <code>postcss</code> 的 <code>autoprefixer</code> 自動將 <code>CSS</code> 加入相對的瀏覽器前綴。<br><a id="more"></a></p><h2 id="安裝-css-loader-style-loader"><a href="#安裝-css-loader-style-loader" class="headerlink" title="安裝 css-loader style-loader"></a>安裝 <code>css-loader</code> <code>style-loader</code></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm i -D css-loader</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm i -D style-loader</div></pre></td></tr></table></figure><h2 id="設定-webpack-config-js"><a href="#設定-webpack-config-js" class="headerlink" title="設定 webpack.config.js"></a>設定 <code>webpack.config.js</code></h2><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">module</span>.exports = &#123;</div><div class="line">  ......</div><div class="line">  <span class="built_in">module</span>: &#123;</div><div class="line">    rules: [</div><div class="line">      &#123;</div><div class="line">        test: <span class="regexp">/\.css$/</span>,</div><div class="line">        use: [ <span class="string">'style-loader'</span>, <span class="string">'css-loader'</span> ]</div><div class="line">      &#125;</div><div class="line">    ]</div><div class="line">  &#125;,</div><div class="line">  ......</div><div class="line">&#125;;</div></pre></td></tr></table></figure><h2 id="測試-CSS"><a href="#測試-CSS" class="headerlink" title="測試 CSS"></a>測試 <code>CSS</code></h2><ol><li>在 <code>src</code> 資料夾創建一隻 <code>app.css</code></li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">body</span> &#123;</div><div class="line">  <span class="attribute">background-color</span>: yellowgreen;</div><div class="line">&#125;</div></pre></td></tr></table></figure><ol><li>將 <code>app.css</code> 引入 <code>app.js</code> 中</li></ol><p>在 <code>app.js</code> 加入</p><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">require</span>(<span class="string">'./app.css'</span>);</div></pre></td></tr></table></figure><ol><li>執行 <code>webpack</code> 打包</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm run prod</div></pre></td></tr></table></figure><p>執行完打開 <code>dist</code> 資料夾 <code>index.html</code> 就可以看到我們更改的草綠色背景囉！</p><p><img src="http://i965.photobucket.com/albums/ae138/anny09117011/Blog/2017-07-30_0936.png" alt="網頁更改成草綠色背景囉" title="dist/index.html"></p><p>到這裡我們完成引入 <code>CSS</code> 的動作，接下來要來試試引入 <code>SASS</code>。</p><h2 id="安裝-sass-loader"><a href="#安裝-sass-loader" class="headerlink" title="安裝 sass-loader"></a>安裝 <code>sass-loader</code></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm i sass-loader node-sass webpack -D</div></pre></td></tr></table></figure><h2 id="修改-webpack-config-js"><a href="#修改-webpack-config-js" class="headerlink" title="修改 webpack.config.js"></a>修改 <code>webpack.config.js</code></h2><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">module</span>.exports = &#123;</div><div class="line">  ......</div><div class="line">  <span class="built_in">module</span>: &#123;</div><div class="line">    rules: [</div><div class="line">      &#123;</div><div class="line">        test: <span class="regexp">/\.css|scss$/</span>,</div><div class="line">        use: [ <span class="string">'style-loader'</span>, <span class="string">'css-loader'</span>, <span class="string">'sass-loader'</span> ]</div><div class="line">      &#125;</div><div class="line">    ]</div><div class="line">  &#125;,</div><div class="line">  ......</div><div class="line">&#125;;</div></pre></td></tr></table></figure><h2 id="測試-SASS"><a href="#測試-SASS" class="headerlink" title="測試 SASS"></a>測試 <code>SASS</code></h2><ol><li>在 <code>src</code> 資料夾將 <code>app.css</code> 修改成 <code>app.scss</code></li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">body</span> &#123;</div><div class="line">  <span class="attribute">background-color</span>: yellowgreen;</div><div class="line">  h1 &#123;</div><div class="line">    <span class="selector-tag">color</span>: <span class="selector-tag">green</span>;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><ol><li>在 <code>src</code> 資料夾修改 <code>index.html</code></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span> Test SASS Loader<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div></pre></td></tr></table></figure><ol><li>將 <code>app.scss</code> 引入 <code>app.js</code> 中</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">require</span>(<span class="string">'./app.scss'</span>);</div></pre></td></tr></table></figure><ol><li>執行 <code>webpack</code> 打包</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm run prod</div></pre></td></tr></table></figure><p>執行完打開 <code>dist</code> 資料夾 <code>index.html</code> 就可以看到我們更改的標題顏色囉！</p><p><img src="http://i965.photobucket.com/albums/ae138/anny09117011/Blog/2017-07-30_1001.png" alt="網頁更改標題顏色" title="dist/index.html"></p><p><code>SASS</code> 引入完成！！大家有發現網頁上的 <code>css</code> 怎麼都是跑到 <code>head</code> 裡面啦？接下來要教怎麼輸出成一隻 <code>css</code> 用 <code>link</code> 的方式引入到頁面上。</p><h2 id="安裝-ExtractTextWebpackPlugin"><a href="#安裝-ExtractTextWebpackPlugin" class="headerlink" title="安裝 ExtractTextWebpackPlugin"></a>安裝 <code>ExtractTextWebpackPlugin</code></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm i -D extract-text-webpack-plugin</div></pre></td></tr></table></figure><h2 id="修改-webpack-config-js-1"><a href="#修改-webpack-config-js-1" class="headerlink" title="修改 webpack.config.js"></a>修改 <code>webpack.config.js</code></h2><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> ExtractTextPlugin = <span class="built_in">require</span>(<span class="string">"extract-text-webpack-plugin"</span>);</div><div class="line">......</div><div class="line"><span class="built_in">module</span>.exports = &#123;</div><div class="line">  ......</div><div class="line">  <span class="built_in">module</span>: &#123;</div><div class="line">    rules: [</div><div class="line">      &#123;</div><div class="line">        test: <span class="regexp">/\.css|scss$/</span>,</div><div class="line">        use: ExtractTextPlugin.extract(&#123;</div><div class="line">          fallback: <span class="string">'style-loader'</span>,</div><div class="line">          <span class="comment">//resolve-url-loader may be chained before sass-loader if necessary</span></div><div class="line">          use: [<span class="string">'css-loader'</span>, <span class="string">'sass-loader'</span>]</div><div class="line">        &#125;)</div><div class="line">      &#125;</div><div class="line">    ]</div><div class="line">  &#125;,</div><div class="line">  plugins: [</div><div class="line">    ......</div><div class="line">    <span class="keyword">new</span> ExtractTextPlugin(&#123;</div><div class="line">      filename: <span class="string">'app.css'</span>,</div><div class="line">      disable: <span class="literal">false</span>,</div><div class="line">      allChunks: <span class="literal">true</span></div><div class="line">    &#125;)</div><div class="line">  ]</div><div class="line">&#125;;</div></pre></td></tr></table></figure><ul><li>執行 <code>webpack</code> 打包</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm run prod</div></pre></td></tr></table></figure><p>執行完打開 <code>dist</code> 資料夾 <code>index.html</code> 就可以看到 <code>app.css</code> 在 <code>head</code> 裡面囉！</p><p>每次因為不同瀏覽器寫前綴語是不是超麻煩的啊？接下來要來引入 <code>postcss</code> 的 <code>autoprefixer</code> ，透過設定 browserlist 讓 Webpack 自動做完這些事情呦。</p><h2 id="安裝-postcss-loader"><a href="#安裝-postcss-loader" class="headerlink" title="安裝 postcss-loader"></a>安裝 <code>postcss-loader</code></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm i -D  postcss-loader</div></pre></td></tr></table></figure><h2 id="新增-postcss-config-js"><a href="#新增-postcss-config-js" class="headerlink" title="新增 postcss.config.js"></a>新增 <code>postcss.config.js</code></h2><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">module</span>.exports = &#123;</div><div class="line">  plugins: &#123;</div><div class="line">    <span class="string">'autoprefixer'</span>: &#123;&#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="在-package-json-設定-browserslist"><a href="#在-package-json-設定-browserslist" class="headerlink" title="在 package.json 設定 browserslist"></a>在 <code>package.json</code> 設定 <code>browserslist</code></h2><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  ......</div><div class="line">  <span class="string">"browserslist"</span>: [</div><div class="line">    <span class="string">"Explorer 11"</span>,</div><div class="line">    <span class="string">"&gt; 1%"</span>,</div><div class="line">    <span class="string">"last 2 versions"</span>,</div><div class="line">    <span class="string">"not ie &lt;= 10"</span></div><div class="line">  ]</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="修改-webpack-config-js-2"><a href="#修改-webpack-config-js-2" class="headerlink" title="修改 webpack.config.js"></a>修改 <code>webpack.config.js</code></h2><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">module</span>.exports = &#123;</div><div class="line">  ......</div><div class="line">  <span class="built_in">module</span>: &#123;</div><div class="line">    rules: [</div><div class="line">      &#123;</div><div class="line">        test: <span class="regexp">/\.css|scss$/</span>,</div><div class="line">        use: ExtractTextPlugin.extract(&#123;</div><div class="line">          fallback: <span class="string">'style-loader'</span>,</div><div class="line">          <span class="comment">//resolve-url-loader may be chained before sass-loader if necessary</span></div><div class="line">          use: [<span class="string">'css-loader'</span>, <span class="string">'postcss-loader'</span>, <span class="string">'sass-loader'</span>]</div><div class="line">        &#125;)</div><div class="line">      &#125;</div><div class="line">    ]</div><div class="line">  &#125;</div><div class="line">  ......</div><div class="line">&#125;;</div></pre></td></tr></table></figure><h2 id="測試-postcss"><a href="#測試-postcss" class="headerlink" title="測試 postcss"></a>測試 <code>postcss</code></h2><ol><li>修改 <code>app.scss</code> 檔案</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">body</span> &#123;</div><div class="line">    <span class="attribute">background-color</span>: yellowgreen;</div><div class="line">    h1 &#123;</div><div class="line">        <span class="selector-tag">color</span>: <span class="selector-tag">green</span>;</div><div class="line">        <span class="selector-tag">transform</span>: <span class="selector-tag">scale</span>(1<span class="selector-class">.5</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><ol><li>執行 <code>Webpack</code> 打包</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm run prod</div></pre></td></tr></table></figure><p>打開 <code>dist/app.css</code> 就可以看到下面自動加入前綴語的 <code>css</code> 囉～</p><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">body</span>&#123;<span class="attribute">background-color</span>:<span class="number">#9acd32</span>&#125;<span class="selector-tag">body</span> <span class="selector-tag">h1</span>&#123;<span class="attribute">color</span>:green;<span class="attribute">-webkit-transform</span>:<span class="built_in">scale</span>(1.5);<span class="attribute">-ms-transform</span>:<span class="built_in">scale</span>(1.5);<span class="attribute">transform</span>:<span class="built_in">scale</span>(1.5)&#125;</div></pre></td></tr></table></figure><p>今天的實作檔案整理在此<a href="https://github.com/Annilla/webpack_practice/tree/v1.2.0" target="_blank" rel="external">github</a>，謝謝收看。</p><h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><ul><li><a href="https://webpack.js.org/loaders/css-loader/#components/sidebar/sidebar.jsx" target="_blank" rel="external">Webpack css-loader</a></li><li><a href="https://webpack.js.org/loaders/style-loader/#components/sidebar/sidebar.jsx" target="_blank" rel="external">Webpack style-loader</a></li><li><a href="https://webpack.js.org/loaders/sass-loader/#components/sidebar/sidebar.jsx" target="_blank" rel="external">Webpack sass-loader</a></li><li><a href="https://webpack.js.org/plugins/extract-text-webpack-plugin/#components/sidebar/sidebar.jsx" target="_blank" rel="external">Webpack ExtractTextWebpackPlugin</a></li><li><a href="https://webpack.js.org/loaders/postcss-loader/#components/sidebar/sidebar.jsx" target="_blank" rel="external">Webpack postcss-loader</a></li><li><a href="https://github.com/ai/browserslist" target="_blank" rel="external">Browserslist</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;此篇介紹如何將 &lt;code&gt;CSS&lt;/code&gt; 、 &lt;code&gt;SASS&lt;/code&gt; 引入 &lt;code&gt;Webpack&lt;/code&gt; 專案中，並使用 &lt;code&gt;postcss&lt;/code&gt; 的 &lt;code&gt;autoprefixer&lt;/code&gt; 自動將 &lt;code&gt;CSS&lt;/code&gt; 加入相對的瀏覽器前綴。&lt;br&gt;
    
    </summary>
    
      <category term="Webpack" scheme="http://annilla.github.io/categories/Webpack/"/>
    
    
      <category term="Webpack" scheme="http://annilla.github.io/tags/Webpack/"/>
    
  </entry>
  
  <entry>
    <title>Webpack 3 Tutorial - HTML Webpack Plugin</title>
    <link href="http://annilla.github.io/2017/06/30/Webpack/Webpack-3-Tutorial-HTML-Webpack-Plugin/"/>
    <id>http://annilla.github.io/2017/06/30/Webpack/Webpack-3-Tutorial-HTML-Webpack-Plugin/</id>
    <published>2017-06-29T16:00:00.000Z</published>
    <updated>2017-06-29T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>此篇介紹使用 <code>HTML Webpack Plugin</code>，他可以自動生成 <code>html</code> 並將 <code>app.bundle.js</code> 自動加在 <code>html</code> 結尾處。<br><a id="more"></a></p><h2 id="安裝-HTML-Webpack-Plugin"><a href="#安裝-HTML-Webpack-Plugin" class="headerlink" title="安裝 HTML Webpack Plugin"></a>安裝 <code>HTML Webpack Plugin</code></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm i -D html-webpack-plugin</div></pre></td></tr></table></figure><h2 id="設定-webpack-config-js"><a href="#設定-webpack-config-js" class="headerlink" title="設定 webpack.config.js"></a>設定 <code>webpack.config.js</code></h2><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>); <span class="comment">// 引入 html-webpack-plugin</span></div><div class="line"><span class="keyword">var</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</div><div class="line"></div><div class="line"><span class="built_in">module</span>.exports = &#123;</div><div class="line">entry: <span class="string">'./src/app.js'</span>,</div><div class="line">output: &#123;</div><div class="line"></div><div class="line">  path: path.resolve(__dirname, <span class="string">'dist'</span>),</div><div class="line">  <span class="comment">// the target directory for all output files</span></div><div class="line">  <span class="comment">// must be an absolute path (use the Node.js path module)</span></div><div class="line"></div><div class="line">  filename: <span class="string">'app.bundle.js'</span></div><div class="line">  <span class="comment">// the filename template for entry chunks</span></div><div class="line"></div><div class="line">&#125;,</div><div class="line"></div><div class="line">plugins: [<span class="keyword">new</span> HtmlWebpackPlugin()] <span class="comment">// 使用 html-webpack-plugin</span></div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="自動生成-html"><a href="#自動生成-html" class="headerlink" title="自動生成 html"></a>自動生成 <code>html</code></h2><p>執行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm run dev</div></pre></td></tr></table></figure><p>或</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm run prod</div></pre></td></tr></table></figure><p>就可以看到 <code>dist</code> 內生成 <code>index.html</code> 囉～</p><p><img src="http://i965.photobucket.com/albums/ae138/anny09117011/Blog/2017-06-30_1615.png" alt="dist 內生成 index.html" title="dist/index.html"></p><h2 id="撰寫-html-templates"><a href="#撰寫-html-templates" class="headerlink" title="撰寫 html templates"></a>撰寫 html templates</h2><p>如果想要客製化自己的 <code>html</code> 模板要怎麼辦呢？<br>我個人是喜歡用 <code>pug</code> 來寫，<br>不過 <code>HTML Webpack Plugin</code> 有內建模板使用方式，<br>所以就先示範內建的使用方式囉～</p><ol><li>修改 <code>webpack.config.js</code></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">module</span>.exports = &#123;</div><div class="line">  ...</div><div class="line">  plugins: [</div><div class="line">    <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</div><div class="line">      title: <span class="string">'Custom template'</span>, <span class="comment">// 客製化的 html 標題</span></div><div class="line">      template: <span class="string">'./src/index.html'</span> <span class="comment">// 模板的位置</span></div><div class="line">    &#125;)</div><div class="line">  ]</div><div class="line">  ...</div><div class="line">&#125;</div></pre></td></tr></table></figure><ol><li>建立 <code>html</code> 模板</li></ol><p>在 <code>src</code> 資料夾新增 <code>index.html</code>，<br><code>&lt;%= htmlWebpackPlugin.options.title %&gt;</code> 到時候會被 <code>webpack.config.js</code> 內設定的標題取代掉喔。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=utf-8"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">htmlWebpackPlugin.options.title</span> %&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure><ol><li>自動產生客製化 <code>html</code></li></ol><p>執行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm run dev</div></pre></td></tr></table></figure><p>或</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm run prod</div></pre></td></tr></table></figure><p>就可以看到 <code>dist</code> 內新生成的 <code>index.html</code> 囉～</p><p><img src="http://i965.photobucket.com/albums/ae138/anny09117011/Blog/2017-06-30_1655.png" alt="dist 內新客製化 index.html" title="dist/index.html"></p><p>今天的實作檔案在<a href="https://github.com/Annilla/webpack_practice/tree/v1.1.0" target="_blank" rel="external">github</a> 。等前面幾篇基礎的介紹完，之後會介紹 <code>pug</code> 怎麼跟 <code>HTML Webpack Plugin</code> 做結合，敬請期待。</p><h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><ul><li><a href="https://github.com/jantimon/html-webpack-plugin" target="_blank" rel="external">HTML Webpack Plugin</a></li><li><a href="https://webpack.js.org/plugins/html-webpack-plugin/" target="_blank" rel="external">Webpack HtmlWebpackPlugin</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;此篇介紹使用 &lt;code&gt;HTML Webpack Plugin&lt;/code&gt;，他可以自動生成 &lt;code&gt;html&lt;/code&gt; 並將 &lt;code&gt;app.bundle.js&lt;/code&gt; 自動加在 &lt;code&gt;html&lt;/code&gt; 結尾處。&lt;br&gt;
    
    </summary>
    
      <category term="Webpack" scheme="http://annilla.github.io/categories/Webpack/"/>
    
    
      <category term="Webpack" scheme="http://annilla.github.io/tags/Webpack/"/>
    
  </entry>
  
  <entry>
    <title>Webpack 3 Tutorial - Installation and Config</title>
    <link href="http://annilla.github.io/2017/06/14/Webpack/Webpack-3-Tutorial-Installation-and-Config/"/>
    <id>http://annilla.github.io/2017/06/14/Webpack/Webpack-3-Tutorial-Installation-and-Config/</id>
    <published>2017-06-13T16:00:00.000Z</published>
    <updated>2017-06-29T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什麼是-Webpack"><a href="#什麼是-Webpack" class="headerlink" title="什麼是 Webpack ?"></a>什麼是 Webpack ?</h1><p><code>Webpack</code> 是針對所有前端程式的管理整合工具。工程師編寫程式模組（<code>html</code>, <code>css</code>, <code>js</code>, <code>sass</code>, <code>pug</code>, <code>babel</code>, … etc.），使用 <code>webpack</code> 打包輸出靜態資產（assets）,配合<code>Babel</code>, <code>ES6</code>使用，可以寫出乾淨可復用的代碼，做到更好的前端程式管理。這一篇先示範基礎安裝和設定基本描述檔。<br><a id="more"></a></p><h2 id="安裝環境"><a href="#安裝環境" class="headerlink" title="安裝環境"></a>安裝環境</h2><ol><li><p>安裝 <a href="https://nodejs.org/en/" target="_blank" rel="external">Node.js</a></p></li><li><p>開一個專案資料夾，建置 <code>npm</code> 專案</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm init</div></pre></td></tr></table></figure><p>設定 package.json</p><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  <span class="string">"name"</span>: <span class="string">"Your Project Name"</span>,</div><div class="line">  <span class="string">"version"</span>: <span class="string">"1.0.0"</span>,</div><div class="line">  <span class="string">"description"</span>: <span class="string">"Webpack project."</span>,</div><div class="line">  <span class="string">"main"</span>: <span class="string">"index.js"</span>,</div><div class="line">  <span class="string">"scripts"</span>: &#123;</div><div class="line">    <span class="string">"test"</span>: <span class="string">"echo \"Error: no test specified\" &amp;&amp; exit 1"</span>,</div><div class="line">  &#125;,</div><div class="line">  <span class="string">"author"</span>: <span class="string">"Your Name"</span>,</div><div class="line">  <span class="string">"license"</span>: <span class="string">"ISC"</span>,</div><div class="line">&#125;</div></pre></td></tr></table></figure><ol><li>安裝開發端套件 Webpack<br>安裝全域(global)</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm -g i webpack</div></pre></td></tr></table></figure><blockquote><p>只有第一次使用<code>webpack</code>需要安裝全域，裝過一次之後就可以不用再安裝global</p></blockquote><p>專案開發端安裝套件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm i -D webpack</div></pre></td></tr></table></figure><h2 id="組織專案架構"><a href="#組織專案架構" class="headerlink" title="組織專案架構"></a>組織專案架構</h2><p>在專案建立 src 和 dist 資料夾。</p><ul><li>src: 工程師寫的程式放這裡。</li><li>dist: <code>webpack</code> 自動打包出來的檔案會放這裡。</li><li>src/app.js: 建立一支 <code>js</code> 檔案，等會要來測試 <code>webpack</code> 自動打包的功能用。</li></ul><p>app.js 內可以隨意寫 console 來測試</p><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">console</span>.log(<span class="string">'Hello World!'</span>);</div></pre></td></tr></table></figure><h2 id="設定描述檔"><a href="#設定描述檔" class="headerlink" title="設定描述檔"></a>設定描述檔</h2><ol><li>在專案下新增<code>webpack.config.js</code>檔案。</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">module</span>.exports = &#123;</div><div class="line">  entry: <span class="string">'./src/app.js'</span>,</div><div class="line">  output: &#123;</div><div class="line">    filename: <span class="string">'./dist/app.bundle.js'</span></div><div class="line">  &#125;,</div><div class="line">&#125;</div></pre></td></tr></table></figure><ul><li>entry: 開始執行打包的入口</li><li>output: 輸出結果設定<ul><li>filename: 輸出結果的名稱</li></ul></li></ul><ol><li>修改<code>package.json</code>檔案 <code>scripts</code></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  ...</div><div class="line">  <span class="string">"scripts"</span>: &#123;</div><div class="line">    <span class="string">"dev"</span>: <span class="string">"webpack -d --watch"</span>,</div><div class="line">    <span class="string">"prod"</span>: <span class="string">"webpack -p"</span></div><div class="line">  &#125;,</div><div class="line">  ...</div><div class="line">&#125;</div></pre></td></tr></table></figure><ul><li>-d: 開發模式輸出，不會 minify js</li><li>–watch: 監聽程式碼修改，支援即時輸出</li><li>-p: 產品模式輸出，會 minify js</li></ul><h2 id="執行-webpack-打包測試"><a href="#執行-webpack-打包測試" class="headerlink" title="執行 webpack 打包測試"></a>執行 webpack 打包測試</h2><ol><li>執行<code>package.json</code>內<code>script</code>設定的 dev</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm run dev</div></pre></td></tr></table></figure><ul><li>結果：會在 <code>dist</code> 資料夾內產<code>app.bundle.js</code>，沒有 minify</li></ul><ol><li>執行<code>package.json</code>內<code>script</code>設定的 prod</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm run prod</div></pre></td></tr></table></figure><ul><li>結果：會在 <code>dist</code> 資料夾內產<code>app.bundle.js</code>，有 minify</li></ul><p>基本 webpack 練習完成囉～實際操作影片可觀賞 Ihatetomatoes 大大的 YOUTUBE 教學<a href="https://www.youtube.com/watch?v=JdGnYNtuEtE&amp;index=1&amp;list=PLkEZWD8wbltnRp6nRR8kv97RbpcUdNawY" target="_blank" rel="external">Webpack 2 Tutorial - Installation and Config</a>，感謝觀看 :)</p><blockquote><p>更新：2017/06/30 Webpack 版本更新到 3 囉 ！所以直接測試 3，發現無痛接軌沒問題，實作在 <a href="https://github.com/Annilla/webpack_practice/tree/v1.0.0" target="_blank" rel="external">github</a>，之後就直接都用 3 版實作囉。</p></blockquote><h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><ul><li><a href="https://llp0574.github.io/2016/11/29/getting-started-with-webpack2/" target="_blank" rel="external">Webpack 2 入門教程</a></li><li><a href="https://www.youtube.com/watch?v=JdGnYNtuEtE&amp;index=1&amp;list=PLkEZWD8wbltnRp6nRR8kv97RbpcUdNawY" target="_blank" rel="external">Webpack 2 Tutorial - Installation and Config</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;什麼是-Webpack&quot;&gt;&lt;a href=&quot;#什麼是-Webpack&quot; class=&quot;headerlink&quot; title=&quot;什麼是 Webpack ?&quot;&gt;&lt;/a&gt;什麼是 Webpack ?&lt;/h1&gt;&lt;p&gt;&lt;code&gt;Webpack&lt;/code&gt; 是針對所有前端程式的管理整合工具。工程師編寫程式模組（&lt;code&gt;html&lt;/code&gt;, &lt;code&gt;css&lt;/code&gt;, &lt;code&gt;js&lt;/code&gt;, &lt;code&gt;sass&lt;/code&gt;, &lt;code&gt;pug&lt;/code&gt;, &lt;code&gt;babel&lt;/code&gt;, … etc.），使用 &lt;code&gt;webpack&lt;/code&gt; 打包輸出靜態資產（assets）,配合&lt;code&gt;Babel&lt;/code&gt;, &lt;code&gt;ES6&lt;/code&gt;使用，可以寫出乾淨可復用的代碼，做到更好的前端程式管理。這一篇先示範基礎安裝和設定基本描述檔。&lt;br&gt;
    
    </summary>
    
      <category term="Webpack" scheme="http://annilla.github.io/categories/Webpack/"/>
    
    
      <category term="Webpack" scheme="http://annilla.github.io/tags/Webpack/"/>
    
  </entry>
  
</feed>
