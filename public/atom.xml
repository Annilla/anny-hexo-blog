<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Anny Chang - F2E &amp; UI Designer</title>
  
  <subtitle>Design thinking is EVERYWHERE</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://annilla.github.io/"/>
  <updated>2021-04-28T16:00:00.000Z</updated>
  <id>http://annilla.github.io/</id>
  
  <author>
    <name>Anny Chang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Anny Chang&#39;s Resume - 履歷</title>
    <link href="http://annilla.github.io/3017/12/03/Resume/"/>
    <id>http://annilla.github.io/3017/12/03/Resume/</id>
    <published>3017-12-02T16:00:00.000Z</published>
    <updated>2021-04-28T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>My resume.</p><a id="more"></a><h1 id="Professional-Info"><a href="#Professional-Info" class="headerlink" title="Professional Info"></a>Professional Info</h1><h2 id="專長"><a href="#專長" class="headerlink" title="專長"></a>專長</h2><ul><li><p>設計 <code>UI</code> 介面、 <code>RWD</code> 網頁製作、 <code>SPA</code> 程式撰寫</p></li><li><p>擅用設計 <code>UI</code> 軟體（<code>Figma</code>, <code>Sketch</code>, <code>Adobe XD</code>, <code>Illustrator</code>, <code>Photoshop</code>）</p></li></ul><h2 id="研討會-工作坊"><a href="#研討會-工作坊" class="headerlink" title="研討會 / 工作坊"></a>研討會 / 工作坊</h2><table><thead><tr><th>時間</th><th>研討會 / 工作坊</th><th>分享主題</th></tr></thead><tbody><tr><td>2019.11</td><td>Kingston 2019 內訓</td><td><a href="https://www.canva.com/design/DADpqbMNvJk/kFNwFdNo0_4FFcrbAj53HA/view?utm_content=DADpqbMNvJk&amp;utm_campaign=designshare&amp;utm_medium=link&amp;utm_source=homepage_design_menu" target="_blank" rel="noopener">使用 Hexo 做線上說明文件</a></td></tr><tr><td>2019.11</td><td>Kingston 2019 內訓</td><td><a href="https://www.canva.com/design/DADqB4aQEns/_iyVg0rxO38YU409MwbKIA/view?utm_content=DADqB4aQEns&amp;utm_campaign=designshare&amp;utm_medium=link&amp;utm_source=homepage_design_menu" target="_blank" rel="noopener">Start our journey with vue</a></td></tr><tr><td>2019.09</td><td>Kingston 2019 內訓</td><td><a href="https://www.canva.com/design/DADkDdvRR9A/JzfYMOKl6_2DLqeFH-BOww/view?utm_content=DADkDdvRR9A&amp;utm_campaign=designshare&amp;utm_medium=link&amp;utm_source=sharebutton" target="_blank" rel="noopener">Why Vue.js</a></td></tr><tr><td>2017.08</td><td>Kingston 2017 Mobile Team Workshop</td><td><a href="https://speakerdeck.com/annilla/use-webpack-plus-vue-loader-in-vs2017" target="_blank" rel="noopener">Use Webpack + Vue-Loader in VS2017</a></td></tr><tr><td>2016.11</td><td>前端魔法師十一月份小聚</td><td><a href="https://speakerdeck.com/annilla/facebook-instant-articles-ce-shi-dao-fa-bu" target="_blank" rel="noopener">Facebook Instant Articles - 測試到發布</a></td></tr></tbody></table><h2 id="證照"><a href="#證照" class="headerlink" title="證照"></a>證照</h2><h3 id="Microsoft-amp-Adobe-Badges-國際-Microsoft-amp-ACA-認證獎章"><a href="#Microsoft-amp-Adobe-Badges-國際-Microsoft-amp-ACA-認證獎章" class="headerlink" title="Microsoft &amp; Adobe Badges (國際 Microsoft &amp; ACA 認證獎章)"></a><a href="https://www.youracclaim.com/users/chiao-ni-chang" target="_blank" rel="noopener">Microsoft &amp; Adobe Badges (國際 Microsoft &amp; ACA 認證獎章)</a></h3><table><thead><tr><th>時間</th><th>證書</th></tr></thead><tbody><tr><td>2020.03</td><td>國際 Microsoft Certified: Azure Fundamentals</td></tr><tr><td>2017.03</td><td>國際 TOEIC 藍色證書 765分</td></tr><tr><td>2015.11</td><td>國家技術士網頁設計丙級證照</td></tr><tr><td>2014.12</td><td>國際 ACA Illustrator CS6 證照</td></tr><tr><td>2013.12</td><td>Adobe Master Of Rich Media Web Design Courses 證書</td></tr><tr><td>2013.06</td><td>中華民國斐陶斐榮譽學會榮譽會員 （碩士應屆第一名）</td></tr><tr><td>2013.03</td><td>國際 ACA Flash CS6 證照</td></tr><tr><td>2013.03</td><td>國際 ACA Dreamweaver CS6 證照</td></tr><tr><td>2012.11</td><td>國際 ACA Photoshop CS6 證照</td></tr><tr><td>2011.12</td><td>Adobe Digital Graphic Design Courses 證書</td></tr><tr><td>高中</td><td>全民英檢中級 證書</td></tr></tbody></table><h2 id="受訓"><a href="#受訓" class="headerlink" title="受訓"></a>受訓</h2><table><thead><tr><th>時間</th><th>課程</th></tr></thead><tbody><tr><td>2021.04</td><td>TOC管理思維與方法課程</td></tr><tr><td>2019.09</td><td>台灣微軟技術中心 Microsoft DevOps Workshop</td></tr><tr><td>2018.10</td><td>29761 使用微軟 T-SQL 查詢資料</td></tr><tr><td>2017.09</td><td>Skilltree JavaScript 實務測試新手班 第三梯</td></tr><tr><td>2017.06</td><td>網站測試開發 with WebdriverIO 實戰講堂</td></tr><tr><td>2014.11</td><td>色彩溝通立即上手</td></tr><tr><td>2014.10</td><td>網路活動創意規劃與會員行銷管理</td></tr><tr><td>2014.09</td><td>如何提升網路關鍵字行銷的成效</td></tr><tr><td>2014.09</td><td>JR-基層管理幹部工作關係與團隊力提昇</td></tr><tr><td>2014.08</td><td>eDM電子郵件行銷及電子報經營</td></tr><tr><td>2014.08</td><td>JM-基層幹部工作改善與執行力提昇培訓</td></tr></tbody></table><h1 id="Work​-Experience​​​"><a href="#Work​-Experience​​​" class="headerlink" title="Work​ Experience​​​"></a>Work​ Experience​​​</h1><table><thead><tr><th>時間</th><th>公司</th><th>職稱</th></tr></thead><tbody><tr><td>2017.06.12 - NOW</td><td>Kingston Technology</td><td>UI Designer &amp; Front-end Developer</td></tr><tr><td>2015.04.06 - 2017.06.11</td><td>JUKSY 街星</td><td>網頁UI設計 / 網頁前端工程師</td></tr><tr><td>2013.07.01 - 2015.04.03</td><td>微璽科技股份有限公司</td><td>商業設計 / 網頁UI設計</td></tr></tbody></table><h1 id="Education"><a href="#Education" class="headerlink" title="Education"></a>Education</h1><table><thead><tr><th>時間</th><th>學校</th></tr></thead><tbody><tr><td>2011 - 2013</td><td>國立台灣師範大學, 數學系碩士班數學教育組</td></tr><tr><td>2007 - 2011</td><td>國立台灣師範大學, 數學系學士班</td></tr><tr><td>2004 - 2007</td><td>中山女高</td></tr></tbody></table><h1 id="Skills"><a href="#Skills" class="headerlink" title="Skills"></a>Skills</h1><ul><li><p>FIGMA</p></li><li><p>SKETCH</p></li><li><p>ADOBE XD</p></li><li><p>PHOTOSHOP</p></li><li><p>ILLUSTRATOR</p></li><li><p>VSCODE / VS2019</p></li><li><p>GITHUB / AZURE DEVOPS</p></li><li><p>SOURCETREE</p></li><li><p>NPM</p></li><li><p>WEBPACK / GULP</p></li></ul><h1 id="Languages"><a href="#Languages" class="headerlink" title="Languages"></a>Languages</h1><ul><li><p>HTML / PUG</p></li><li><p>CSS / SASS(SCSS) / STYLUS / POSTCSS</p></li><li><p>JS / JQUERY / VUE / ES6</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;My resume.&lt;/p&gt;
    
    </summary>
    
      <category term="Resume" scheme="http://annilla.github.io/categories/Resume/"/>
    
    
  </entry>
  
  <entry>
    <title>Anny Chang&#39;s Portfolio - 作品集</title>
    <link href="http://annilla.github.io/3017/12/01/Portfolio/"/>
    <id>http://annilla.github.io/3017/12/01/Portfolio/</id>
    <published>3017-11-30T16:00:00.000Z</published>
    <updated>2019-10-09T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>My portfolio.</p><a id="more"></a><h1 id="Design-Collection"><a href="#Design-Collection" class="headerlink" title="Design Collection"></a>Design Collection</h1><h2 id="Behance-https-www-behance-net-annilla"><a href="#Behance-https-www-behance-net-annilla" class="headerlink" title="Behance: https://www.behance.net/annilla"></a>Behance: <a href="https://www.behance.net/annilla" target="_blank" rel="noopener">https://www.behance.net/annilla</a></h2><h1 id="Web-Collection"><a href="#Web-Collection" class="headerlink" title="Web Collection"></a>Web Collection</h1><table><thead><tr><th>作品</th><th>分類</th><th>內容</th></tr></thead><tbody><tr><td>系統</td><td>公司</td><td>Workflow CN (Web)</td></tr><tr><td>系統</td><td>公司</td><td>Depanel Monitor (Web)</td></tr><tr><td>系統</td><td>公司</td><td>IND4 (Web)</td></tr><tr><td>系統</td><td>公司</td><td>SSO (Web)</td></tr><tr><td>系統</td><td>公司</td><td>OPscan (Web)</td></tr><tr><td>網頁</td><td>公司</td><td>Online User Manual (Hexo)</td></tr><tr><td>網頁</td><td>公司</td><td>Reflow Supplement Page (Web)</td></tr><tr><td>系統</td><td>公司</td><td>System Profile Management (Web)</td></tr><tr><td>系統</td><td>公司</td><td>NXT Monitor (Web)</td></tr><tr><td>系統</td><td>公司</td><td>Workflow Compliance (Web)</td></tr><tr><td>網頁</td><td>公司</td><td>Kingston Mobile Team Portal (Hexo)</td></tr><tr><td>系統</td><td>公司</td><td>B2B (Web)</td></tr><tr><td>系統</td><td>公司</td><td>Material Requirement Planning (Web)</td></tr><tr><td>系統</td><td>公司</td><td>Empolyee Authentication Service (Web)</td></tr><tr><td>系統</td><td>公司</td><td>Notes SignOff APP (Mobile Web App)</td></tr><tr><td>系統</td><td>公司</td><td>Quotation System (Web &amp; iOS App Design)</td></tr><tr><td>網站</td><td>綜合</td><td><a href="https://www.juksy.com/" target="_blank" rel="noopener">JUKSY 街星</a></td></tr><tr><td>網頁</td><td>展覽</td><td><a href="https://www.juksy.com/events/avengersstation" target="_blank" rel="noopener">《復仇者聯盟》世界巡迴展</a></td></tr><tr><td>網頁</td><td>電影</td><td><a href="https://www.juksy.com/events/MMPR2017" target="_blank" rel="noopener">《金剛戰士》Power Rangers GO GO！</a></td></tr><tr><td>網頁</td><td>名人</td><td><a href="https://www.juksy.com/events/idareyoujune" target="_blank" rel="noopener">放肆越限 ● I Dare You</a> - 陳建州 &amp; 四葉草</td></tr><tr><td>網頁</td><td>名人</td><td><a href="https://www.juksy.com/events/dope2017may" target="_blank" rel="noopener">回家才DOPE ● Home Sweet Home</a> - 兄弟本色 &amp; 邵雨薇</td></tr><tr><td>網頁</td><td>名人</td><td><a href="https://www.juksy.com/events/northsouth2017April" target="_blank" rel="noopener">南北潮什麼 / From North to South</a> - 盧廣仲 &amp; 柯佳嬿</td></tr><tr><td>網頁</td><td>名人</td><td><a href="https://www.juksy.com/events/outofcontrol2017" target="_blank" rel="noopener">瘋面人物 / Out of control</a> - 許瑋甯 &amp; 吳慷仁</td></tr><tr><td>網頁</td><td>名人</td><td><a href="https://www.juksy.com/events/month1702valentine/" target="_blank" rel="noopener">我單故我在 Valentine, So what?</a> - 藍正龍</td></tr><tr><td>網頁</td><td>名人</td><td><a href="https://www.juksy.com/events/month1701F5reborn" target="_blank" rel="noopener">人生F5鍵 Reborn</a> - 瑤瑤</td></tr><tr><td>網頁</td><td>名人</td><td><a href="https://www.juksy.com/events/month1612waittoaction" target="_blank" rel="noopener">扳勢回潮　等不及的蓄勢待發！ Wait  to action</a> - 吳建豪</td></tr><tr><td>網頁</td><td>電影</td><td><a href="https://www.juksy.com/events/assassin2016creed" target="_blank" rel="noopener">刺客教條 12/28(三)跨年最強檔</a></td></tr><tr><td>網頁</td><td>名人</td><td><a href="https://www.juksy.com/events/month1611donjudge" target="_blank" rel="noopener">Don’t Judge me！玩跳．TONE</a> - 安心亞</td></tr><tr><td>網頁</td><td>電影</td><td><a href="https://www.juksy.com/events/fantastic2016beasts" target="_blank" rel="noopener">《怪獸與牠們的產地》JUKSY特別企劃</a></td></tr><tr><td>網頁</td><td>廠商</td><td><a href="https://www.juksy.com/events/brand201611angeliapets" target="_blank" rel="noopener">耍YOUNG無極限，玩酷做自己</a> - Angelia  &amp;  Pets</td></tr><tr><td>網頁</td><td>廠商</td><td><a href="https://www.juksy.com/events/brand201611samsung360" target="_blank" rel="noopener">精彩視界 一觸可及</a> - SAMSUNG</td></tr><tr><td>網頁</td><td>廠商</td><td><a href="https://www.juksy.com/events/brand201611fashioncity" target="_blank" rel="noopener">分享屬於你的[城市時尚]─你的城市‧由你演繹</a> - SAMSUNG 打卡分享照片</td></tr><tr><td>網頁</td><td>名人</td><td><a href="https://www.juksy.com/events/month1610bromance" target="_blank" rel="noopener">The Bromance！絕對合拍</a> - 蕭敬騰</td></tr><tr><td>網頁</td><td>名人</td><td><a href="https://www.juksy.com/events/month1609intoblack" target="_blank" rel="noopener">大勢黑潮 INTO BLACK</a> - SPEXIAL</td></tr><tr><td>網頁</td><td>電影</td><td><a href="https://www.juksy.com/events/train2016zombie" target="_blank" rel="noopener">屍速列車 屍裡逃生</a></td></tr><tr><td>網頁</td><td>遊戲</td><td><a href="https://www.juksy.com/events/pokemon2016go" target="_blank" rel="noopener">成神之路有你有我！寶可夢全攻略</a></td></tr><tr><td>網頁</td><td>名人</td><td><a href="https://www.juksy.com/events/month1608hithot" target="_blank" rel="noopener">熱浪來襲HITHOT</a> - 劉以豪</td></tr><tr><td>網頁</td><td>穿搭</td><td><a href="https://www.juksy.com/events/summer2016girlstyle" target="_blank" rel="noopener">熱辣無極限！2016年夏日潮妞穿搭公式</a></td></tr><tr><td>網頁</td><td>穿搭</td><td><a href="https://www.juksy.com/events/summer2016menstyle" target="_blank" rel="noopener">型到出火！體感41度的TO DO LIST</a></td></tr><tr><td>網頁</td><td>投票活動</td><td>JUKSY超新星（連結失效）</td></tr><tr><td>網頁</td><td>名人</td><td>用歌聲唱出最真的自己（連結失效） - 汪小敏</td></tr><tr><td>網站</td><td>公司</td><td><a href="http://www.taxxtron-tayu.com/" target="_blank" rel="noopener">京達國際股份有限公司</a></td></tr><tr><td>網站</td><td>購物</td><td><a href="http://web.ntnu.edu.tw/~60040004S/" target="_blank" rel="noopener">LOVEBABY讓您在家也能呵護寶貝</a></td></tr><tr><td>網站</td><td>研討會</td><td><a href="http://tame.tw/pme36/" target="_blank" rel="noopener">PME36</a></td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;My portfolio.&lt;/p&gt;
    
    </summary>
    
      <category term="Portfolio" scheme="http://annilla.github.io/categories/Portfolio/"/>
    
    
      <category term="Portfolio" scheme="http://annilla.github.io/tags/Portfolio/"/>
    
      <category term="作品集" scheme="http://annilla.github.io/tags/%E4%BD%9C%E5%93%81%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>Vue 3 Studies - Modularizing</title>
    <link href="http://annilla.github.io/2021/08/02/Vue/Vue-3-Studies-Modularizing/"/>
    <id>http://annilla.github.io/2021/08/02/Vue/Vue-3-Studies-Modularizing/</id>
    <published>2021-08-01T16:00:00.000Z</published>
    <updated>2021-08-01T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>使用 Composition API 有兩個主要的原因，一個原因是把 component 依據功能重新組織，另一個主要原因是這些程式碼可以跨不同 component 重複利用。我們來看一下範例。</p><a id="more"></a><p>這裡有個範例如下。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">import &#123; ref, computed &#125; from "vue";</span></span><br><span class="line"><span class="undefined">export default &#123;</span></span><br><span class="line"><span class="undefined">  setup() &#123;</span></span><br><span class="line"><span class="undefined">    const capacity = ref(3);</span></span><br><span class="line"><span class="undefined">    const attending = ref(["Tim", "Bob", "Joe"])</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    const spaceLeft = computed(() =&gt; &#123;</span></span><br><span class="line"><span class="undefined">      return capacity.value - attending.value.length;</span></span><br><span class="line"><span class="undefined">    &#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    function increaseCapacity() &#123;</span></span><br><span class="line"><span class="undefined">      capacity.value++;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    return &#123; capacity, attending, spaceLeft, increaseCapacity &#125;;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined">&#125;;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如果把上述的功能包成一個 function ，會長下面這樣。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">import &#123; ref, computed &#125; from "vue";</span></span><br><span class="line"><span class="undefined">export default &#123;</span></span><br><span class="line"><span class="undefined">  setup() &#123;</span></span><br><span class="line"><span class="undefined">    return useEventSpace(); // &lt;--- Extracted a function</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined">&#125;;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">function useEventSpace() &#123;</span></span><br><span class="line"><span class="undefined">    const capacity = ref(3);</span></span><br><span class="line"><span class="undefined">    const attending = ref(["Tim", "Bob", "Joe"])</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    const spaceLeft = computed(() =&gt; &#123;</span></span><br><span class="line"><span class="undefined">      return capacity.value - attending.value.length;</span></span><br><span class="line"><span class="undefined">    &#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    function increaseCapacity() &#123;</span></span><br><span class="line"><span class="undefined">      capacity.value++;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    return &#123; capacity, attending, spaceLeft, increaseCapacity &#125;;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>就是把 setup() 裡面的東西整個移出 export default，變成獨立的一個 useEventSpace function。</p><p>假設我們把 useEventSpace 移到外面獨立一隻 use/event-space.js，會長下面這樣。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; ref, computed &#125; <span class="keyword">from</span> <span class="string">"vue"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="function"><span class="keyword">function</span> <span class="title">useEventSpace</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> capacity = ref(<span class="number">3</span>);</span><br><span class="line">    <span class="keyword">const</span> attending = ref([<span class="string">"Tim"</span>, <span class="string">"Bob"</span>, <span class="string">"Joe"</span>])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> spaceLeft = computed(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> capacity.value - attending.value.length;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">increaseCapacity</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      capacity.value++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> &#123; capacity, attending, spaceLeft, increaseCapacity &#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>再把這隻獨立的 js 引用到原來的 vue。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> useEventSpace <span class="keyword">from</span> <span class="string">"@/use/event-space"</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="undefined">  setup() &#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> useEventSpace();</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined">&#125;;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>假設我們有另一個功能的 use/event-mapping.js 想加入到這隻 vue。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> useEventSpace <span class="keyword">from</span> <span class="string">"@/use/event-space"</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> useEventMapping <span class="keyword">from</span> <span class="string">"@/use/event-mapping"</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="undefined">  setup() &#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> &#123; ...useEventSpace(), ...useEventMapping() &#125;;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined">&#125;;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如此這般就能將這些功能共用到不同的 component，但是這樣看起來還是跟 mixin 差不多，不知道用了哪些變數在裡面，因為全部都被 function 包起來了。所以，最好是改成如下的方式，將這些變數都展開出來，雖然麻煩了些，但是這樣就知道有哪些變數名稱在使用。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> useEventSpace <span class="keyword">from</span> <span class="string">"@/use/event-space"</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> useEventMapping <span class="keyword">from</span> <span class="string">"@/use/event-mapping"</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="undefined">  setup() &#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> &#123; capacity, attending, spaceLeft, increaseCapacity &#125; = useEventSpace();</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> &#123; map, embedId &#125; = useEventMapping();</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> &#123; capacity, attending, spaceLeft, increaseCapacity, map, embedId &#125;;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined">&#125;;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><ul><li><a href="https://composition-api.vuejs.org/" target="_blank" rel="noopener">Composition API RFC</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用 Composition API 有兩個主要的原因，一個原因是把 component 依據功能重新組織，另一個主要原因是這些程式碼可以跨不同 component 重複利用。我們來看一下範例。&lt;/p&gt;
    
    </summary>
    
      <category term="Vue" scheme="http://annilla.github.io/categories/Vue/"/>
    
    
      <category term="Vue" scheme="http://annilla.github.io/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>Vue 3 Studies - Reactive and toRefs</title>
    <link href="http://annilla.github.io/2021/07/09/Vue/Vue-3-Studies-Reactive-and-toRefs/"/>
    <id>http://annilla.github.io/2021/07/09/Vue/Vue-3-Studies-Reactive-and-toRefs/</id>
    <published>2021-07-08T16:00:00.000Z</published>
    <updated>2021-07-08T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>繼續看 Composition API 的 Reactive and toRefs。</p><a id="more"></a><h1 id="Reactive"><a href="#Reactive" class="headerlink" title="Reactive"></a>Reactive</h1><p>我們看上次的 ref 範例。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Space Left: &#123;&#123; spaceLeft &#125;&#125; out of &#123;&#123; capacity &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Attending<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"(name, index) in attending"</span> <span class="attr">:key</span>=<span class="string">"index"</span>&gt;</span></span><br><span class="line">        &#123;&#123; name &#125;&#125;</span><br><span class="line">      <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"increaseCapacity()"</span>&gt;</span>Increase Capacity<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> &#123; ref, computed &#125; <span class="keyword">from</span> <span class="string">"vue"</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="undefined">  setup() &#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> capacity = ref(<span class="number">4</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> attending = ref([<span class="string">"Tim"</span>, <span class="string">"Bob"</span>, <span class="string">"Joe"</span>])</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> spaceLeft = computed(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">return</span> capacity.value - attending.value.length;</span></span><br><span class="line"><span class="undefined">    &#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">increaseCapacity</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="undefined">      capacity.value++;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> &#123; capacity, attending, spaceLeft, increaseCapacity &#125;;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined">&#125;;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>我們可以用 Reactive 把全部的 ref 統整成一個物件 event。<br>下面的程式跟上面運行結果是一樣的。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Space Left: &#123;&#123; event.spaceLeft &#125;&#125; out of &#123;&#123; event.capacity &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Attending<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"(name, index) in event.attending"</span> <span class="attr">:key</span>=<span class="string">"index"</span>&gt;</span></span><br><span class="line">        &#123;&#123; name &#125;&#125;</span><br><span class="line">      <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"increaseCapacity()"</span>&gt;</span>Increase Capacity<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> &#123; reactive, computed &#125; <span class="keyword">from</span> <span class="string">"vue"</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="undefined">  setup() &#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> event = reactive(&#123;</span></span><br><span class="line"><span class="undefined">      capacity: 4,</span></span><br><span class="line"><span class="javascript">      attending: [<span class="string">"Tim"</span>, <span class="string">"Bob"</span>, <span class="string">"Joe"</span>],</span></span><br><span class="line"><span class="javascript">      spaceLeft: computed(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> event.capacity - event.attending.length;</span></span><br><span class="line"><span class="undefined">      &#125;);</span></span><br><span class="line"><span class="undefined">    &#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">increaseCapacity</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="undefined">      event.capacity++;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> &#123; event, increaseCapacity &#125;;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined">&#125;;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>HTML 裡面每次都要使用 event.xxx 感覺很煩，在這裡我們就可以用 toRefs ，再把他拆開成個別物件。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Space Left: &#123;&#123; spaceLeft &#125;&#125; out of &#123;&#123; capacity &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Attending<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"(name, index) in attending"</span> <span class="attr">:key</span>=<span class="string">"index"</span>&gt;</span></span><br><span class="line">        &#123;&#123; name &#125;&#125;</span><br><span class="line">      <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"increaseCapacity()"</span>&gt;</span>Increase Capacity<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> &#123; reactive, computed, toRefs &#125; <span class="keyword">from</span> <span class="string">"vue"</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="undefined">  setup() &#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> event = reactive(&#123;</span></span><br><span class="line"><span class="undefined">      capacity: 4,</span></span><br><span class="line"><span class="javascript">      attending: [<span class="string">"Tim"</span>, <span class="string">"Bob"</span>, <span class="string">"Joe"</span>],</span></span><br><span class="line"><span class="javascript">      spaceLeft: computed(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> event.capacity - event.attending.length;</span></span><br><span class="line"><span class="undefined">      &#125;);</span></span><br><span class="line"><span class="undefined">    &#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">increaseCapacity</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="undefined">      event.capacity++;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> &#123; toRefs(event), increaseCapacity &#125;;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined">&#125;;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><ul><li><a href="https://composition-api.vuejs.org/" target="_blank" rel="noopener">Composition API RFC</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;繼續看 Composition API 的 Reactive and toRefs。&lt;/p&gt;
    
    </summary>
    
      <category term="Vue" scheme="http://annilla.github.io/categories/Vue/"/>
    
    
      <category term="Vue" scheme="http://annilla.github.io/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>Upgrade .NET 5 with Vue &amp; Webpack without HMR</title>
    <link href="http://annilla.github.io/2021/06/07/Dotnet/Upgrade-NET-5-with-Vue-Webpack-without-HMR/"/>
    <id>http://annilla.github.io/2021/06/07/Dotnet/Upgrade-NET-5-with-Vue-Webpack-without-HMR/</id>
    <published>2021-06-06T16:00:00.000Z</published>
    <updated>2021-06-06T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>.NET 5 之後會將 dotnet 各 platform 整合起來，且 dotnet 3.1 cshtml HMR 的 extension 功能被官方強迫棄用，目前我看各方文章感覺還沒有一個很好的升級方式。要馬就是改用網友寫的 <a href="https://codetherapist.com/blog/aspnetcore-deprecated-spa-services/" target="_blank" rel="noopener">Vue-Cli</a>，把 config 轉到 cli，要馬就是 Nuget 套件改用<a href="https://github.com/dotnet/aspnetcore/issues/12890#issuecomment-784537371" target="_blank" rel="noopener">網友寫的</a>。我自己參考國外文章，是有人用 Vite 做到用 index.cshtml 的 HMR: <a href="https://blogs.taiga.nl/martijn/2021/02/24/integrating-vite-with-asp-net-core-a-winning-combination/" target="_blank" rel="noopener">這篇</a>。但是因為公司內部還是有 IE 瀏覽器且 Vite 相關套件還沒有到完整，沒辦法放棄使用 webpack，只好參考這篇嘗試用 webpack HMR，很不幸的，若照文章模仿雖然 HMR 字眼有出現，但一直沒有正常作用，胡亂嘗試了一番，勉強用奇怪的方式有做到 Auto Reload，但沒有 HMR 效果就不太滿意。目前先將這些研究文章和亂試的方式記錄下來。</p><a id="more"></a><h2 id="csproj"><a href="#csproj" class="headerlink" title=".csproj"></a>.csproj</h2><figure class="highlight xhtml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Project</span> <span class="attr">Sdk</span>=<span class="string">"Microsoft.NET.Sdk.Web"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">PropertyGroup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TargetFramework</span>&gt;</span>net5.0<span class="tag">&lt;/<span class="name">TargetFramework</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">PropertyGroup</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ItemGroup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">PackageReference</span> <span class="attr">Include</span>=<span class="string">"Microsoft.AspNetCore.SpaServices.Extensions"</span> <span class="attr">Version</span>=<span class="string">"5.0.6"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ItemGroup</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Project</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Program-cs"><a href="#Program-cs" class="headerlink" title="Program.cs"></a>Program.cs</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="keyword">using</span> Microsoft.Extensions.Hosting;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">dotnet_core_vue_cli</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            CreateHostBuilder(args).Build().Run();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> IHostBuilder <span class="title">CreateHostBuilder</span>(<span class="params"><span class="keyword">string</span>[] args</span>) </span>=&gt;</span><br><span class="line">            Host.CreateDefaultBuilder(args)</span><br><span class="line">                .ConfigureWebHostDefaults(webBuilder =&gt;</span><br><span class="line">                &#123;</span><br><span class="line">                    webBuilder.UseStartup&lt;Startup&gt;();</span><br><span class="line">                &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Startup-cs"><a href="#Startup-cs" class="headerlink" title="Startup.cs"></a>Startup.cs</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="keyword">using</span> Microsoft.Extensions.Hosting;</span><br><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.SpaServices.ReactDevelopmentServer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">dotnet_core_vue_cli</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Startup</span></span><br><span class="line">    &#123;</span><br><span class="line">        ...</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ConfigureServices</span>(<span class="params">IServiceCollection services</span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            services.AddControllersWithViews();</span><br><span class="line">        &#125;</span><br><span class="line">        ...</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Configure</span>(<span class="params">IApplicationBuilder app, IWebHostEnvironment env</span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (env.IsDevelopment())</span><br><span class="line">            &#123;</span><br><span class="line">                app.UseDeveloperExceptionPage();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                app.UseExceptionHandler(<span class="string">"/Home/Error"</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            app.UseStaticFiles();</span><br><span class="line"></span><br><span class="line">            app.UseRouting();</span><br><span class="line"></span><br><span class="line">            app.UseEndpoints(endpoints =&gt;</span><br><span class="line">            &#123;</span><br><span class="line">                endpoints.MapControllerRoute(</span><br><span class="line">                    name: <span class="string">"default"</span>,</span><br><span class="line">                    pattern: <span class="string">"&#123;controller=Home&#125;/&#123;action=Index&#125;/&#123;id?&#125;"</span>);</span><br><span class="line">                endpoints.MapFallbackToController(<span class="string">"Index"</span>, <span class="string">"Home"</span>);</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (env.IsDevelopment())</span><br><span class="line">            &#123;</span><br><span class="line">                app.UseSpa(spa =&gt;</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">// SPA的檔案放在最外層</span></span><br><span class="line">                    spa.Options.SourcePath = <span class="string">"./"</span>;</span><br><span class="line">                    <span class="comment">// webpack-dev-server 起在 port 3000</span></span><br><span class="line">                    spa.Options.DevServerPort = <span class="number">3000</span>;</span><br><span class="line">                    </span><br><span class="line">                    <span class="comment">// 呼叫 npm run start</span></span><br><span class="line">                    spa.UseReactDevelopmentServer(npmScript: <span class="string">"start"</span>);</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="webpack-xxx-js"><a href="#webpack-xxx-js" class="headerlink" title="webpack.xxx.js"></a>webpack.xxx.js</h2><p>webpack.dev.js 把 entry 部分 加入 ‘webpack-dev-server/client?<a href="http://localhost:3000/" target="_blank" rel="noopener">http://localhost:3000/</a>‘ 進去 js，devServer 設定如下。其中的原因可參考<a href="https://github.com/CommanderXL/biu-blog/issues/7" target="_blank" rel="noopener">這位網友解釋</a>。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="built_in">module</span>.exports = merge(base, &#123;</span><br><span class="line">    entry: &#123;</span><br><span class="line">        main: [</span><br><span class="line">            <span class="string">'webpack-dev-server/client?http://localhost:3000/'</span>,</span><br><span class="line">            <span class="string">'./src/main.js'</span></span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    mode: <span class="string">'development'</span>,</span><br><span class="line">    devServer: &#123;</span><br><span class="line">        historyApiFallback: <span class="literal">true</span>,</span><br><span class="line">        noInfo: <span class="literal">false</span>,</span><br><span class="line">        <span class="comment">// hot: true,</span></span><br><span class="line">        port: <span class="number">3000</span>,</span><br><span class="line">        inline: <span class="literal">false</span>,</span><br><span class="line">        liveReload: <span class="literal">true</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    devtool: <span class="string">'eval-source-map'</span>,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="package-json"><a href="#package-json" class="headerlink" title="package.json"></a>package.json</h2><p>npm run hmr 會呼叫 dotnet run 把專案跑起來。<br>執行 startup.cs 會自動呼叫 npm run start 顯示 “Starting the development server”。之後就會將 port 3000(webpack-dev-server) 跟 8080(dotnet) 做對應。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    ...</span><br><span class="line">    "scripts": &#123;</span><br><span class="line">        "hmr": "cross-env ASPNETCORE_ENVIRONMENT=Development NODE_ENV=development dotnet run",</span><br><span class="line">        "start": "echo Starting the development server &amp;&amp; webpack serve --config webpack.config.js",</span><br><span class="line">        "dev": "webpack serve --config webpack.config.js",</span><br><span class="line">        "build": "webpack --config webpack.pro.js"</span><br><span class="line">    &#125;,</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>這樣起來的專案就會依據 vue code 修改做 Auto Reload 的動作，程式放在 <a href="https://github.com/Annilla/dotnet-core-vue-cli/tree/v5.0.beta" target="_blank" rel="noopener">Github</a>。</p><h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><ul><li><a href="https://github.com/CommanderXL/biu-blog/issues/7" target="_blank" rel="noopener">webpack-dev-server使用方法，看完还不会的来找我~</a></li><li><a href="https://github.com/SoftwareAteliers/asp-net-core-vue-starter" target="_blank" rel="noopener">ASP.NET Core Vue Starter</a></li><li><a href="https://codetherapist.com/blog/aspnetcore-deprecated-spa-services/" target="_blank" rel="noopener">The deprecated ASP.NET Core SpaServices</a></li><li><a href="https://blogs.taiga.nl/martijn/2021/02/24/integrating-vite-with-asp-net-core-a-winning-combination/" target="_blank" rel="noopener">Integrating Vite with ASP.NET Core – a winning combination?</a></li><li><a href="https://github.com/dotnet/aspnetcore/issues/12890#issuecomment-784537371" target="_blank" rel="noopener">BrunoLau.SpaServices NuGet package</a></li><li><a href="https://github.com/RimuTec/AspNetCore.SpaServices.Extensions" target="_blank" rel="noopener">Webpack Development Server Support for ASP.NET Core 3.1 and ASP.NET 5.0</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;.NET 5 之後會將 dotnet 各 platform 整合起來，且 dotnet 3.1 cshtml HMR 的 extension 功能被官方強迫棄用，目前我看各方文章感覺還沒有一個很好的升級方式。要馬就是改用網友寫的 &lt;a href=&quot;https://codetherapist.com/blog/aspnetcore-deprecated-spa-services/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Vue-Cli&lt;/a&gt;，把 config 轉到 cli，要馬就是 Nuget 套件改用&lt;a href=&quot;https://github.com/dotnet/aspnetcore/issues/12890#issuecomment-784537371&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;網友寫的&lt;/a&gt;。我自己參考國外文章，是有人用 Vite 做到用 index.cshtml 的 HMR: &lt;a href=&quot;https://blogs.taiga.nl/martijn/2021/02/24/integrating-vite-with-asp-net-core-a-winning-combination/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;這篇&lt;/a&gt;。但是因為公司內部還是有 IE 瀏覽器且 Vite 相關套件還沒有到完整，沒辦法放棄使用 webpack，只好參考這篇嘗試用 webpack HMR，很不幸的，若照文章模仿雖然 HMR 字眼有出現，但一直沒有正常作用，胡亂嘗試了一番，勉強用奇怪的方式有做到 Auto Reload，但沒有 HMR 效果就不太滿意。目前先將這些研究文章和亂試的方式記錄下來。&lt;/p&gt;
    
    </summary>
    
      <category term=".NET" scheme="http://annilla.github.io/categories/NET/"/>
    
    
      <category term="Vue" scheme="http://annilla.github.io/tags/Vue/"/>
    
      <category term="dotnet" scheme="http://annilla.github.io/tags/dotnet/"/>
    
      <category term="Webpack" scheme="http://annilla.github.io/tags/Webpack/"/>
    
      <category term="SPA" scheme="http://annilla.github.io/tags/SPA/"/>
    
      <category term="MVC" scheme="http://annilla.github.io/tags/MVC/"/>
    
      <category term="VScode" scheme="http://annilla.github.io/tags/VScode/"/>
    
      <category term=".NET" scheme="http://annilla.github.io/tags/NET/"/>
    
  </entry>
  
  <entry>
    <title>Vue 3 Studies - Methods and Computed</title>
    <link href="http://annilla.github.io/2021/05/05/Vue/Vue-3-Studies-Methods-and-Computed/"/>
    <id>http://annilla.github.io/2021/05/05/Vue/Vue-3-Studies-Methods-and-Computed/</id>
    <published>2021-05-04T16:00:00.000Z</published>
    <updated>2021-05-04T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>今年四月信箱發現 Vue Mastery 又開放幾天全部課程免費的消息，所以趕快把之前沒看到的 Vue 3 Composition API 給補看起來！！</p><a id="more"></a><h1 id="Methods"><a href="#Methods" class="headerlink" title="Methods"></a>Methods</h1><p>假設我們已經有一個 capacity 是 Reative Reference。現在要加 Methods 讓他每按一次加1。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span>Capacity: &#123;&#123; capacity &#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">"vue"</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="undefined">  setup() &#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> capacity = ref(<span class="number">3</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> &#123; capacity &#125;;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined">&#125;;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>原本 Vue 2 的寫法是</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">methods: &#123;</span><br><span class="line">  increase_capacity() &#123;</span><br><span class="line">    <span class="keyword">this</span>.capacity++;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>那在 Vue 3 只要把他想像成一般的 Function 再 return 出來即可。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Capacity: &#123;&#123; capacity &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"increaseCapacity()"</span>&gt;</span>Increase Capacity<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">"vue"</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="undefined">  setup() &#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> capacity = ref(<span class="number">3</span>);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">increaseCapacity</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="undefined">      capacity.value++;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> &#123; capacity, increaseCapacity &#125;;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined">&#125;;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>注意！capacity 是 Reactive Reference，是一個物件封裝他，所以對物件做增加的動作是不管用的。我們需要針對裡面的 <code>value</code> 增加才行。所以這邊是對 <code>capacity.value</code> 做增加的動作。</p></blockquote><p><img src="https://lh3.googleusercontent.com/pw/ACtC-3eePBLmrt4IQp_TvDl8fYubwomjax1mEfvpNZpsUpQeSCzzTCXBkmf8olbQvtticR4nebg9JC8ABlYjKKg5iP9B7_YzI194PYdnkYe8g46tKdN9z180mMPO6rsQHcG6oSdGMygjAx40xwbWJxef1jvlRA=w480-h392-no?authuser=0" alt="Methods example demo"></p><h1 id="Computed"><a href="#Computed" class="headerlink" title="Computed"></a>Computed</h1><p>我們繼續用上面的例子加上一組人名陣列清單，並用 computed 計算剩下的容量有多少。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Capacity: &#123;&#123; capacity &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Attending<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"(name, index) in attending"</span> <span class="attr">:key</span>=<span class="string">"index"</span>&gt;</span></span><br><span class="line">        &#123;&#123; name &#125;&#125;</span><br><span class="line">      <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"increaseCapacity()"</span>&gt;</span>Increase Capacity<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">"vue"</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="undefined">  setup() &#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> capacity = ref(<span class="number">3</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> attending = ref([<span class="string">"Tim"</span>, <span class="string">"Bob"</span>, <span class="string">"Joe"</span>])</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">increaseCapacity</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="undefined">      capacity.value++;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> &#123; capacity, attending, increaseCapacity &#125;;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined">&#125;;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如果是 Vue 2 的寫法是</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">computed: &#123;</span><br><span class="line">  spaceLeft() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.capacity - <span class="keyword">this</span>.attending.length;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 Vue 3 則是呼叫 computed 函數即可。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Space Left: &#123;&#123; spaceLeft &#125;&#125; out of &#123;&#123; capacity &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Attending<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"(name, index) in attending"</span> <span class="attr">:key</span>=<span class="string">"index"</span>&gt;</span></span><br><span class="line">        &#123;&#123; name &#125;&#125;</span><br><span class="line">      <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"increaseCapacity()"</span>&gt;</span>Increase Capacity<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> &#123; ref, computed &#125; <span class="keyword">from</span> <span class="string">"vue"</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="undefined">  setup() &#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> capacity = ref(<span class="number">3</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> attending = ref([<span class="string">"Tim"</span>, <span class="string">"Bob"</span>, <span class="string">"Joe"</span>])</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> spaceLeft = computed(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">return</span> capacity.value - attending.value.length;</span></span><br><span class="line"><span class="undefined">    &#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">increaseCapacity</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="undefined">      capacity.value++;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> &#123; capacity, attending, spaceLeft, increaseCapacity &#125;;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined">&#125;;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://lh3.googleusercontent.com/pw/ACtC-3fFxWw8z3ITa_PuT-Wum9tlxRQlau5cizLX3TpRRG6cw8ZQvxKS3kveaXRSz9q9qiSZfVwbH6lWDYQkoaflalWHj0qYXX2EluvLJ50gog-WF77pzVVQWX9Zat1UmT6HVLXv489U6fEqa0fHDU6crN3Q8A=w602-h716-no?authuser=0" alt="Computed example demo"></p><h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><ul><li><a href="https://composition-api.vuejs.org/" target="_blank" rel="noopener">Composition API RFC</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今年四月信箱發現 Vue Mastery 又開放幾天全部課程免費的消息，所以趕快把之前沒看到的 Vue 3 Composition API 給補看起來！！&lt;/p&gt;
    
    </summary>
    
      <category term="Vue" scheme="http://annilla.github.io/categories/Vue/"/>
    
    
      <category term="Vue" scheme="http://annilla.github.io/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>Set Figma Text for Traditional Chinese</title>
    <link href="http://annilla.github.io/2021/04/18/UXUI/Set-Figma-Text-for-Traditional-Chinese/"/>
    <id>http://annilla.github.io/2021/04/18/UXUI/Set-Figma-Text-for-Traditional-Chinese/</id>
    <published>2021-04-17T16:00:00.000Z</published>
    <updated>2021-04-17T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>當複製貼上大量中文字在 Figma 時，你可能會發現貼上的文章段落怎麼會一個洞一個洞的呢？此篇就是要說明怎麼解決 Figma 中文缺字的問題啦～</p><a id="more"></a><p>我之前從 Sketch 轉到 Figma 的時候因為大部分系統都是英文字，只有說明的部分有放中文，所以是很後面仔細看的時候才發現有缺字問題。所以我就像往常一樣找 Google 大神求助，發現官方說明分成兩大類，第一類是使用自己電腦的字體，第二類是使用網路現有字體。因為我的工作主要都是設計網頁系統，對字體沒有特別的設計需求，所以使用第二類就能解決問題了。下面兩類都會說明，依據設計師需求選擇最合適的就可以囉～</p><h1 id="使用本地電腦的字體"><a href="#使用本地電腦的字體" class="headerlink" title="使用本地電腦的字體"></a>使用本地電腦的字體</h1><p>官方說明文件：<a href="https://help.figma.com/hc/en-us/articles/360039956894" target="_blank" rel="noopener">Access local fonts on your computer</a></p><p>如果是下載桌機版的應用程式，內建是可以直接用本地電腦的字體。如果是瀏覽器上編輯，就要下載 Font Helper，就可以在瀏覽器看到本地電腦的字體。但不管是桌機版還是瀏覽器，只要是使用本地電腦字體，都只有該電腦有那個字體才看得到。所以假設其他設計師開啟同個文檔，但他的電腦內沒有特定的字體，則他還是看不到正確的文字顯示。</p><h1 id="使用網路現有字體"><a href="#使用網路現有字體" class="headerlink" title="使用網路現有字體"></a>使用網路現有字體</h1><p>官方說明文件：<a href="https://help.figma.com/hc/en-us/articles/360040449673-Add-text-in-Chinese-Japanese-and-Korean" target="_blank" rel="noopener">Add text in Chinese, Japanese, and Korean</a></p><p>如果使用網路現有字體，就能在免安裝任何字體的情況下，確認每個人都能看到一樣的文字～官方的解法就是使用 <a href="https://fonts.google.com/" target="_blank" rel="noopener">Google Web Fonts</a>，在 Language 的部分選擇文字語言 Chinese(Traditional)，如下圖就可以看見有 Noto 的字體，在根據需求選擇是否要使用襯線字體即可。</p><p><img src="https://lh3.googleusercontent.com/pw/ACtC-3fNMqYSUxj8jpvTduD1k5OaPCLURzIYqDNpYvVAeFE9-r9aFsRAxVNbHT-EeVLixkSrh4uvzZT7P-VFt78mZH9dGnNq8CJKhx9o7n6wyU6rFk0Ro22mWTKRGZ_IlkNjcPBIC2y1nBFPOLugsAEjYiumQA=w2550-h1378-no?authuser=0" alt="Chinese(Traditional)"></p><p>我最後選擇使用 Noto Sans TC 來解決中文缺字問題。</p><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><ul><li><a href="https://help.figma.com/hc/en-us/articles/360039956894" target="_blank" rel="noopener">Access local fonts on your computer</a></li><li><a href="https://help.figma.com/hc/en-us/articles/360040449673-Add-text-in-Chinese-Japanese-and-Korean" target="_blank" rel="noopener">Add text in Chinese, Japanese, and Korean</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;當複製貼上大量中文字在 Figma 時，你可能會發現貼上的文章段落怎麼會一個洞一個洞的呢？此篇就是要說明怎麼解決 Figma 中文缺字的問題啦～&lt;/p&gt;
    
    </summary>
    
      <category term="UXUI" scheme="http://annilla.github.io/categories/UXUI/"/>
    
    
      <category term="UX" scheme="http://annilla.github.io/tags/UX/"/>
    
      <category term="UI" scheme="http://annilla.github.io/tags/UI/"/>
    
      <category term="Figma" scheme="http://annilla.github.io/tags/Figma/"/>
    
  </entry>
  
  <entry>
    <title>Spline - Easily Create and Publish 3D Web Experiences</title>
    <link href="http://annilla.github.io/2021/03/07/UXUI/Spline-Easily-Create-and-Publish-3D-Web-Experiences/"/>
    <id>http://annilla.github.io/2021/03/07/UXUI/Spline-Easily-Create-and-Publish-3D-Web-Experiences/</id>
    <published>2021-03-06T16:00:00.000Z</published>
    <updated>2021-03-06T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>Spline Design 是一款可以繪製並匯出 3D 設計至網頁的工具。我第一次是在臉書看到有人分享，今天下載過後，覺得功能強大且有趣，後續會試著玩玩看再分享心得，今天先來簡略介紹一下 Spline。</p><a id="more"></a><p>先看一下我從 Library 下載下來的檔案輸出成 Public URL 用 iframe 嵌入的效果。</p><iframe src="https://my.spline.design/sketchbookecommerce-2ea1fcee956cc616fa71642cb685f3cd/" frameborder="0" width="100%" height="600px"></iframe><p>Spline 可以做到：</p><ul><li>旋轉、移動、縮放 3D 畫布</li><li>使用滑鼠和物件互動</li><li>互動的即時反應很順暢</li><li>可輸出多種格式檔案 (URL, Canvas js, 圖片, 影片)</li></ul><p>但目前測試出美中不足的地方：</p><ul><li>輸出、儲存等動作需要等候時間 (類似做影片輸出和儲存也需要等程式做編譯)</li><li>網頁成品一開始讀入需要等一段時間，但讀完的操作算很順暢</li><li>免費版成品會壓 Spline 的浮水印</li></ul><h1 id="Spline-UI"><a href="#Spline-UI" class="headerlink" title="Spline UI"></a>Spline UI</h1><p><img src="https://docs.spline.design/_next/image?url=https%3A%2F%2Fapi.super.so%2Fasset%2Fdocs.spline.design%2F8885f6c1-2f99-4bf5-ba9c-2ccec391ff06.png&amp;w=3840&amp;q=100" alt="Spline UI"></p><p><br></p><ul><li>Tap bar: 檔案頁籤，可開多個檔案作切換</li><li>Toolbar: 繪圖工具</li><li>Left Sidebar: 圖層面板，可以整理各圖層</li><li>Right Sidebar: 屬性面板，可以控制顏色、環境設定、輸出等參數</li><li>Viewport: 製圖區，3D 圖呈現的地方</li></ul><h1 id="Presentation-Mode"><a href="#Presentation-Mode" class="headerlink" title="Presentation Mode"></a>Presentation Mode</h1><p><img src="https://docs.spline.design/_next/image?url=https%3A%2F%2Fapi.super.so%2Fasset%2Fdocs.spline.design%2F49a353f0-78a9-4229-a150-7e1471886080.gif&amp;w=3840&amp;q=100" alt="Presentation Mode"></p><p>Presentation Mode 是可以讓使用者預覽作圖出來的互動效果。因為這個步驟還沒涉及到輸出，所以不用花太多時間等待就能看到製作的預期結果。</p><h1 id="Exporting"><a href="#Exporting" class="headerlink" title="Exporting"></a>Exporting</h1><p>他的輸出類型可以是: Public URL, Web Content, Image, Video.</p><p>因為這次是簡介，所以就先展示若輸出成 URL 會有 spline 給的網址如下。</p><p><img src="https://docs.spline.design/_next/image?url=https%3A%2F%2Fapi.super.so%2Fasset%2Fdocs.spline.design%2F4afdea43-69f2-4e52-91b5-d5308dcd6616.png&amp;w=3840&amp;q=100" alt="Exporting URL"></p><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><ul><li><a href="https://spline.design/" target="_blank" rel="noopener">Spline</a></li><li><a href="https://docs.spline.design/" target="_blank" rel="noopener">Spline Docs</a></li><li><a href="https://medium.com/as-a-product-designer/spline-tool-intro-b8058bad852a" target="_blank" rel="noopener">Spline：輕鬆建出能在網頁互動的 3D 模型</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Spline Design 是一款可以繪製並匯出 3D 設計至網頁的工具。我第一次是在臉書看到有人分享，今天下載過後，覺得功能強大且有趣，後續會試著玩玩看再分享心得，今天先來簡略介紹一下 Spline。&lt;/p&gt;
    
    </summary>
    
      <category term="UXUI" scheme="http://annilla.github.io/categories/UXUI/"/>
    
      <category term="Spline" scheme="http://annilla.github.io/categories/UXUI/Spline/"/>
    
    
      <category term="UX" scheme="http://annilla.github.io/tags/UX/"/>
    
      <category term="UI" scheme="http://annilla.github.io/tags/UI/"/>
    
      <category term="Spline" scheme="http://annilla.github.io/tags/Spline/"/>
    
  </entry>
  
  <entry>
    <title>Notes on Transferring from Vuetify V1 to V2</title>
    <link href="http://annilla.github.io/2021/02/07/JS/Notes-on-Transferring-from-Vuetify-V1-to-V2/"/>
    <id>http://annilla.github.io/2021/02/07/JS/Notes-on-Transferring-from-Vuetify-V1-to-V2/</id>
    <published>2021-02-06T16:00:00.000Z</published>
    <updated>2021-06-18T00:18:35.960Z</updated>
    
    <content type="html"><![CDATA[<p>此篇記錄 Vuetify 從 v1 升級到 v2 所要注意的事情。</p><a id="more"></a><h1 id="Color-Theme"><a href="#Color-Theme" class="headerlink" title="Color Theme"></a>Color Theme</h1><p>V2 color theme 改分成 light 和 dark 兩種模式。為方便管理，做法是另外開一隻 vuetify.js 然後再引入 main.js 做使用。</p><p>/js/vuetify.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span>;</span><br><span class="line"><span class="keyword">import</span> Vuetify <span class="keyword">from</span> <span class="string">'vuetify'</span>;</span><br><span class="line"></span><br><span class="line">Vue.use(Vuetify);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Vuetify(&#123;</span><br><span class="line">    theme: &#123;</span><br><span class="line">        themes: &#123;</span><br><span class="line">            light: &#123;</span><br><span class="line">                primary: <span class="string">'...'</span>,</span><br><span class="line">                secondary: <span class="string">'...'</span>,</span><br><span class="line">                accent: <span class="string">'...'</span>,</span><br><span class="line">                error: <span class="string">'...'</span>,</span><br><span class="line">                info: <span class="string">'...'</span>,</span><br><span class="line">                success: <span class="string">'...'</span>,</span><br><span class="line">                warning: <span class="string">'...'</span></span><br><span class="line">            &#125;,</span><br><span class="line">            dark: &#123;</span><br><span class="line">                primary: <span class="string">'...'</span>,</span><br><span class="line">                secondary: <span class="string">'...'</span>,</span><br><span class="line">                accent: <span class="string">'...'</span>,</span><br><span class="line">                error: <span class="string">'...'</span>,</span><br><span class="line">                info: <span class="string">'...'</span>,</span><br><span class="line">                success: <span class="string">'...'</span>,</span><br><span class="line">                warning: <span class="string">'...'</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>main.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="keyword">import</span> vuetify <span class="keyword">from</span> <span class="string">'./js/vuetify'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    el: <span class="string">'#app'</span>,</span><br><span class="line">    vuetify,</span><br><span class="line">    router,</span><br><span class="line">    store,</span><br><span class="line">    render: <span class="function"><span class="params">h</span> =&gt;</span> h(App)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h1 id="v-content-to-v-main"><a href="#v-content-to-v-main" class="headerlink" title="v-content to v-main"></a>v-content to v-main</h1><p><code>v-content</code> 名稱在 V2 變成 <code>v-main</code>。</p><h1 id="Grid"><a href="#Grid" class="headerlink" title="Grid"></a>Grid</h1><p>原本使用 <code>v-layout</code>, <code>v-flex</code> 做排版，V2 改為使用 <code>v-row</code>, <code>v-col</code>，原組件功能保留，若不更動也可以。</p><h1 id="v-toolbar-to-v-app-bar"><a href="#v-toolbar-to-v-app-bar" class="headerlink" title="v-toolbar to v-app-bar"></a>v-toolbar to v-app-bar</h1><p>新版 V2 有另外開新組件 <code>v-app-bar</code> 讓開發者可替換掉 <code>v-toolbar</code>。兩者相比之下，<code>v-app-bar</code> 有更多新功能可使用，可參閱 <a href="https://stackoverflow.com/questions/58068147/what-is-difference-between-v-app-bar-and-v-toolbar-in-vuetify" target="_blank" rel="noopener">StackOverflow</a>。</p><ul><li><code>v-app-bar</code> 可下 app 屬性，代表整個應用程式的最上層功能。</li><li>選單 icon <code>v-toolbar-side-icon</code> 名稱改為 <code>v-app-bar-nav-icon</code>。</li></ul><h1 id="v-navigation"><a href="#v-navigation" class="headerlink" title="v-navigation"></a>v-navigation</h1><p>屬性 <code>mobile-break-point</code> 更名為 <code>mobile-breakpoint</code> 。</p><h1 id="v-list"><a href="#v-list" class="headerlink" title="v-list"></a>v-list</h1><p>只要是 <code>v-list-tile</code> 名稱在 V2 變成 <code>v-list-item</code>。比較常用到的地方是 Navigation 和 Menu 組件。</p><ul><li><code>v-list-tile-sub-title</code>更名為<code>v-list-item-subtitle</code>。</li><li><code>v-list-item</code> 的屬性 <code>avator</code> 已被移除。</li></ul><h1 id="v-dialog"><a href="#v-dialog" class="headerlink" title="v-dialog"></a>v-dialog</h1><p>原本可在 <code>v-dialog</code> 下 <code>slot=&quot;activator&quot;</code>，改為一定要另外在內部開一個 <code>template</code> 下 slot 語法才行。可參閱 <a href="https://vuetifyjs.com/en/components/dialogs/" target="_blank" rel="noopener">Dialogs</a>。</p><h1 id="v-tooltip"><a href="#v-tooltip" class="headerlink" title="v-tooltip"></a>v-tooltip</h1><p>原本可在 <code>v-tooltip</code> 下 <code>slot=&quot;activator&quot;</code>，改為一定要另外在內部開一個 <code>template</code> 下 slot 語法才行。可參閱 <a href="https://vuetifyjs.com/en/components/tooltips/" target="_blank" rel="noopener">Tooltips</a>。</p><h1 id="v-menu"><a href="#v-menu" class="headerlink" title="v-menu"></a>v-menu</h1><p>原本可在 <code>v-menu</code> 下 <code>slot=&quot;activator&quot;</code>，改為一定要另外在內部開一個 <code>template</code> 下 slot 語法才行。可參閱 <a href="https://vuetifyjs.com/en/components/menus/" target="_blank" rel="noopener">Menus</a>。另外，取消了 lazy 和 full-width 屬性。</p><blockquote><p>PS. <code>v-menu</code> 需要下 <code>min-width</code> 在 IE 瀏覽器才不會破版。</p></blockquote><h1 id="v-snackbar"><a href="#v-snackbar" class="headerlink" title="v-snackbar"></a>v-snackbar</h1><p>原本 <code>v-snackbar</code> 不需要下 v-slot，改為一定要另外在內部開一個 <code>template</code> 下 slot 語法才行。可參閱 <a href="https://vuetifyjs.com/en/components/snackbars/" target="_blank" rel="noopener">Snackbars</a>。</p><h1 id="v-btn-預設樣式改變"><a href="#v-btn-預設樣式改變" class="headerlink" title="v-btn 預設樣式改變"></a>v-btn 預設樣式改變</h1><p>flat 屬性改為 text。</p><h1 id="text-xs-align-to-text-align"><a href="#text-xs-align-to-text-align" class="headerlink" title="text-xs-(align) to text-(align)"></a>text-xs-(align) to text-(align)</h1><p><code>text-xs-center</code> 名稱在 V2 變成 <code>text-center</code>，以此類推。</p><h1 id="v-chip"><a href="#v-chip" class="headerlink" title="v-chip"></a>v-chip</h1><p>原本監聽 close  的 <code>@input</code> 屬性改成 <code>@click:close</code>。</p><h1 id="v-data-table"><a href="#v-data-table" class="headerlink" title="v-data-table"></a>v-data-table</h1><p><code>v-data-table</code> 改的地方蠻多的，描述如下。</p><ul><li><code>hide-actions</code> 改為 <code>hide-default-footer</code></li><li><code>pagination.sync</code> 改為 <code>page.sync</code></li><li><code>select-all</code> 改為 <code>show-select</code></li><li>需要下 <code>items-per-page</code> 設置每頁資料筆數</li><li>每格資料改為使用 template v-slot 的方式做覆蓋，例如對資料使用 filter。參閱 <a href="https://vuetifyjs.com/en/components/data-tables/#item" target="_blank" rel="noopener">Item</a>。</li></ul><h1 id="v-expansion-panels"><a href="#v-expansion-panels" class="headerlink" title="v-expansion-panels"></a>v-expansion-panels</h1><p>結構有大幅度的改變，最外層換成 <code>v-expansion-panels</code>。<code>v-expansion-panel</code> 變成內頁，屬性要移到外層。標題一定要拉到 <code>v-expansion-panel-header</code>。參閱 <a href="https://vuetifyjs.com/en/components/expansion-panels/" target="_blank" rel="noopener">Expansion Panels</a>。</p><ul><li>屬性 <code>expand</code> 改為 <code>mutiple</code></li><li>v-model 陣列改為使用 index (ex: [true, false, true] =&gt; [0,2])</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;此篇記錄 Vuetify 從 v1 升級到 v2 所要注意的事情。&lt;/p&gt;
    
    </summary>
    
      <category term="JS" scheme="http://annilla.github.io/categories/JS/"/>
    
    
      <category term="JS" scheme="http://annilla.github.io/tags/JS/"/>
    
  </entry>
  
  <entry>
    <title>Notes on transferring from Sketch to Figma</title>
    <link href="http://annilla.github.io/2021/01/01/UXUI/Notes-On-Transferring-From-Sketch-To-Figma/"/>
    <id>http://annilla.github.io/2021/01/01/UXUI/Notes-On-Transferring-From-Sketch-To-Figma/</id>
    <published>2020-12-31T16:00:00.000Z</published>
    <updated>2020-12-31T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>還沒接觸到 Figma 前，我的工作流是用 Sketch (設計) + Abstract (版控) + AdobeXD (原型)，三者各取所長提供使用者最適合的設計方案。但其實很多時間會花在操作三種不同軟體的工上，但 Figma 解決了我長期的困擾，一個軟體就可以做到原本的事情，且還不用下載任何軟體，只要有瀏覽器就可以線上設計，還支援線上多人協作，優點多多。此篇紀錄將設計檔案從 Sketch 轉移到 Figma 需要注意的小細節。</p><a id="more"></a><p>第一次轉移總是會痛的，需要每個 artboard 去檢查是否有跟原來設計的畫面一樣，還要重新拉 prototype 動態線，通常至少需要花一整天才能完成轉移一個專案設計檔，且這是在還沒有將 Design System Library component 替換掉的時間。若要替換 Library component 需要在付費制下才可以使用，所以本篇先以免費版所要注意的地方著墨，System Library 等之後再另外寫一篇整理。</p><h1 id="同一組-Prototype-路線要在同個-Page"><a href="#同一組-Prototype-路線要在同個-Page" class="headerlink" title="同一組 Prototype 路線要在同個 Page"></a>同一組 Prototype 路線要在同個 Page</h1><p>之前 Sketch 我會依據功能將 artboard 分類在不同 Page，但在 Figma 若要做 Prototype 動態連線的話，只能全部在同一個 Page。不同 Page 在 Figma 只會當作是另一組 Prototype 路線。所以要怎麼把全部 artboard 整理在同一個 Page，我的做法是將同一區塊的 artboard 放在一起並用超級大的字體寫那一塊原本的 Page（功能）名稱，這樣遠遠的看也知道那一區是在做什麼的。</p><p><img src="https://lh3.googleusercontent.com/pw/ACtC-3fXQJ_l_y5auAA3Xe1NuMYvlHthoPQvW1Ijk1G4xTgGRZT1me4XXGavIcNA5VSY5mhDW8c7_3ndvi3Ptu0-Ahjfl9NlJ4W0h3HxvYSRKotT9C2R8XxsGJBKziedeHto-GmtY2BCsnBYBUeamXSGmMGRGg=w2542-h1378-no?authuser=0" alt="Prototype 要在同一個 Page"></p><h1 id="群組物件被強制修剪"><a href="#群組物件被強制修剪" class="headerlink" title="群組物件被強制修剪"></a>群組物件被強制修剪</h1><p>當 Sketch 設計檔轉到 Figma 後，群組的物件會被自動轉換成 Figma 屬性的 group 或 Frame，且會有多一個勾選框顯示在右邊屬性欄，讓設計者勾選是否要修剪影像的 checked box。通常發生在有陰影和文字物件上，導致陰影或文字被強制切掉。這個時候只要取消勾選 “Clip Content”，就能如原本設計一樣了，只是這需要耐心檢查還蠻花時間的。</p><p><img src="https://lh3.googleusercontent.com/pw/ACtC-3els8K-mYfiBwswCJfPY9fMfUhwrqTTRcq9HZLqFeRvm0Gd_I13EfCpuTHZB_epIsCL8brFtA4a1-SXN_P2nYeHOVc8P593WKvyiGtDsaKJoqBQiwUt-whxhmv7_P0DLq_GhzDdENu8ykJlxD4yN1Xtxw=w490-h622-no?authuser=0" alt="Clip Content"></p><h1 id="Circle-Progress-Bar-畫法不同"><a href="#Circle-Progress-Bar-畫法不同" class="headerlink" title="Circle Progress Bar 畫法不同"></a>Circle Progress Bar 畫法不同</h1><p>若你的設計元素有 Circle Progress Bar 要注意在 Figma 的設計方式會不同，以往在 Sketch 通常是調整線框 line dash 的筆畫樣式，但在 Figma 可以直接用實體 fill 的圓形去修改樣式，所以 Sketch 舊方式的 Circle Progress Bar 匯入就會壞掉，需要再重新做設計上的修正。</p><p><img src="https://downloads.intercomcdn.com/i/o/82641775/21030eb185c81c44338bc2ee/Arc+Closed+Ring.gif" alt="Circle Progress Bar"></p><h1 id="出現重複-Symbol-的-bug"><a href="#出現重複-Symbol-的-bug" class="headerlink" title="出現重複 Symbol 的 bug"></a>出現重複 Symbol 的 bug</h1><p>有時候 Sketch 檔案匯入 Figma 後，會出現兩個一樣的 Symbol 的 bug? 目前不確定為什麼會這樣，可能跟檔案版本有關？ 我解決的辦法是用 <a href="https://www.figma.com/community/plugin/741935812012883481/Locator" target="_blank" rel="noopener">Figma Plugin - Locator</a> 先去確定哪個 Symbol 是有確實用到的，如果兩個 Symbol 用到的地方都一模一樣，就勇敢的把其中一個刪除吧！另外，也可以用 <a href="https://www.figma.com/community/plugin/748545064462894895/Component-Replacer" target="_blank" rel="noopener">Figma Plugin - Component Replacer</a> 把不是 symbol 的 component 補上，就是順便檢查一下，讓設計更完整。</p><p><img src="https://www.figma.com/community/plugin/741935812012883481/thumbnail" alt="Figma Plugin - Locator"></p><p><img src="https://www.figma.com/community/plugin/748545064462894895/thumbnail" alt="Figma Plugin - Component Replace"></p><h1 id="Design-System"><a href="#Design-System" class="headerlink" title="Design System"></a>Design System</h1><p>Figma 有個很不錯的功能是可以將 Design System 共享給各專案使用，但免費版僅限於分享 Color Style 的部分， component 則不給發布，所以這部分要注意的事項，待之後升級到訂閱版，我在把要注意的細節另外寫一篇～</p><p><img src="https://images.ctfassets.net/1khq4uysbvty/4XYc5Z5siLdaAgidhT2ym/0f916d11a615efaa0776f5fc33b2446f/DS_03.gif?&amp;w=785" alt="Design System"></p><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><ul><li><a href="https://www.figma.com/community/plugin/741935812012883481/Locator" target="_blank" rel="noopener">Figma Plugin - Locator</a></li><li><a href="https://www.figma.com/community/plugin/748545064462894895/Component-Replacer" target="_blank" rel="noopener">Figma Plugin - Component Replacer</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;還沒接觸到 Figma 前，我的工作流是用 Sketch (設計) + Abstract (版控) + AdobeXD (原型)，三者各取所長提供使用者最適合的設計方案。但其實很多時間會花在操作三種不同軟體的工上，但 Figma 解決了我長期的困擾，一個軟體就可以做到原本的事情，且還不用下載任何軟體，只要有瀏覽器就可以線上設計，還支援線上多人協作，優點多多。此篇紀錄將設計檔案從 Sketch 轉移到 Figma 需要注意的小細節。&lt;/p&gt;
    
    </summary>
    
      <category term="UXUI" scheme="http://annilla.github.io/categories/UXUI/"/>
    
    
      <category term="Sketch" scheme="http://annilla.github.io/tags/Sketch/"/>
    
      <category term="UX" scheme="http://annilla.github.io/tags/UX/"/>
    
      <category term="UI" scheme="http://annilla.github.io/tags/UI/"/>
    
      <category term="Figma" scheme="http://annilla.github.io/tags/Figma/"/>
    
  </entry>
  
  <entry>
    <title>Scrum - 2020 Guide Study</title>
    <link href="http://annilla.github.io/2020/12/06/Others/Scrum-2020-Guide-Study/"/>
    <id>http://annilla.github.io/2020/12/06/Others/Scrum-2020-Guide-Study/</id>
    <published>2020-12-05T16:00:00.000Z</published>
    <updated>2020-12-05T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>公司突然說要 Scrum 考試，只好卯起來讀書了。找了<a href="https://www.classmarker.com/online-test/start/?quiz=vek54a6ec10658ef" target="_blank" rel="noopener">線上考題</a>練習，參考 <a href="https://www.scrumguides.org/scrum-guide.html" target="_blank" rel="noopener">Scrum Guide</a> 把筆記整理在這篇。</p><a id="more"></a><h1 id="Scrum-定義"><a href="#Scrum-定義" class="headerlink" title="Scrum 定義"></a>Scrum 定義</h1><blockquote><p>A framework within which complex products in complex environments are developed.</p></blockquote><p><del>Scrum is a framework that eliminates complexity.</del></p><blockquote><p>Scrum offers a framework for <strong>dealing with complexity NOT eliminates (消除) complexity.</strong></p></blockquote><p><del>Scrum is like traditional processes but with self-organization to replace Project Managers.</del></p><blockquote><p><strong>Project Managers are NOT simply replaced by self-organizing teams.</strong> Scrum is a framework for optimizing decision making based on the knowledge and experience of the entire team.</p></blockquote><p><del>Scrum is a methodology where you can pick and choose which parts of Scrum you think will work for your environment.</del></p><blockquote><p><strong>Scrum is meant to be implemented as prescribed (規定的) in the Scrum Guide.</strong> For example, the five events in the Scrum Guide are mandatory (強制性的), each event has a specific purpose.</p><p>The purpose of a Sprint is to produce a done increment of working product.</p></blockquote><h1 id="Scrum-理論"><a href="#Scrum-理論" class="headerlink" title="Scrum 理論"></a>Scrum 理論</h1><p>Upon what type of process control is Scrum based?</p><blockquote><p>Empirical (經驗主義)</p></blockquote><p>The three pillars of empirical process control are:</p><blockquote><ul><li>Inspection (檢視性)</li><li>Transparency (透明性)</li><li>Adaptation (調適性)</li></ul></blockquote><h1 id="Scrum-Team"><a href="#Scrum-Team" class="headerlink" title="Scrum Team"></a>Scrum Team</h1><p>Who is on the Scrum Team?</p><blockquote><ul><li>The Scrum Master</li><li>The Product Owner</li><li>The Development Team</li></ul></blockquote><p>Scrum does not have a role called “project manager.”</p><blockquote><p>True</p></blockquote><p>What is the role of Management in Scrum?</p><blockquote><p>Support the Product Owner with insights (見解) and information into high value product and  (系統功能). Support the Scrum Master to cause organizational change that fosters (扶植) empiricism (經驗主義), self-organization, bottom-up intelligence (自下而上的情報), and intelligent release of software (智能發布軟件).</p></blockquote><p>During a Sprint, a Development Team determines that it will not be able to finish the complete forecast. Who should be present to review and adjust the Sprint work selected?</p><blockquote><p>The Product Owner and the Development Team.</p></blockquote><h2 id="Development-Team"><a href="#Development-Team" class="headerlink" title="Development Team"></a>Development Team</h2><p>The Development Team should have all the skills needed to:</p><blockquote><p>Turn the Product Backlog items it selects into an increment of potentially releasable product functionality.</p></blockquote><p>Who is responsible for managing the progress of work during a Sprint?</p><blockquote><p>The Development Team</p></blockquote><p>The CEO asks the Development Team to add a “very important” item to a Sprint that is in progress. What should the Development Team do?</p><blockquote><p>Inform the Product Owner so he/she can work with the CEO.</p></blockquote><p>Development Team membership should change:</p><blockquote><p>As needed, while taking into account a short term reduction in productivity (減少產能).</p></blockquote><p>What is the recommended size for a Development Team (within the Scrum Team)?</p><blockquote><p>3 to 9</p></blockquote><p>How much work must a Development Team do to a Product Backlog item it selects for a Sprint?</p><blockquote><p>As much as it has told the Product Owner will be done for every Product Backlog item it selects in conformance with the definition of “Done”.</p></blockquote><h2 id="Product-Owner"><a href="#Product-Owner" class="headerlink" title="Product Owner"></a>Product Owner</h2><p>Which statement best describes a Product Owner’s responsibility?</p><blockquote><p>Optimizing (優化) the value of the work the Development Team does.</p></blockquote><p>Who should know the most about the progress toward a business objective or a release, and be able to explain the alternatives most clearly?</p><blockquote><p>The Product Owner</p></blockquote><p>Who has the final say on the order of the Product Backlog?</p><blockquote><p>The Product Owner</p></blockquote><h2 id="Scrum-Master"><a href="#Scrum-Master" class="headerlink" title="Scrum Master"></a>Scrum Master</h2><p>Which of the following services are appropriate for a Scrum Master in regard to the Daily Scrum?</p><blockquote><p>Teach the Development Team to keep the Daily Scrum within the 15 minute time-box.</p></blockquote><p>What is the main reason for the Scrum Master to be at the Daily Scrum?</p><blockquote><p>He or she does not have to be there; he or she only has to ensure the Development Team has a Daily Scrum.</p></blockquote><p>What are the two primary ways a Scrum Master keeps a Development Team working at its highest level of productivity?</p><blockquote><ul><li>By facilitating (促進) Development Team decisions</li><li>By removing impediments (障礙) that hinder (阻礙) the Development Team</li></ul></blockquote><h1 id="Scrum-事件"><a href="#Scrum-事件" class="headerlink" title="Scrum 事件"></a>Scrum 事件</h1><h2 id="The-Sprint"><a href="#The-Sprint" class="headerlink" title="The Sprint"></a>The Sprint</h2><p>When might a Sprint be abnormally cancelled?</p><blockquote><p>When the Sprint Goal becomes obsolete (過時的/不合時宜).</p></blockquote><p>When is a Sprint over?</p><blockquote><p>When the time-box expires.</p></blockquote><p>The length of a Sprint should be:</p><blockquote><ul><li>Short enough to keep the business risk acceptable to the Product Owner.</li><li>Short enough to be able to synchronize (同步化) the development work with other business events.</li><li>No more than one month.</li></ul></blockquote><p>The purpose of a Sprint is to produce (生產) a done increment (增量) of working product.</p><blockquote><p>True</p></blockquote><p>It is mandatory (強制性的) that the product increment be <del>released</del> to production at the end of each Sprint.</p><blockquote><p>False. The product increment should be usable and releasable at the end of every Sprint, but <strong>it does NOT have to be released</strong>.</p></blockquote><h2 id="Sprint-Planning"><a href="#Sprint-Planning" class="headerlink" title="Sprint Planning"></a>Sprint Planning</h2><p>The time-box for the Sprint Planning meeting is?</p><blockquote><p>8 hours for a monthly Sprint. For shorter Sprints it is usually shorter.</p></blockquote><h2 id="Daily-Scrum"><a href="#Daily-Scrum" class="headerlink" title="Daily Scrum"></a>Daily Scrum</h2><p>Who is required to attend the Daily Scrum?</p><blockquote><p>The Development Team.</p></blockquote><p>Why is the Daily Scrum held at the same time and same place?</p><blockquote><p>The consistency (一致性) reduces complexity (複雜).</p></blockquote><p>The time-box for a Daily Scrum is?</p><blockquote><p>15 minutes.</p></blockquote><h2 id="Sprint-Review"><a href="#Sprint-Review" class="headerlink" title="Sprint Review"></a>Sprint Review</h2><blockquote><p>It is when the Scrum Team and stakeholders (利害關係人) inspect the outcome of a Sprint (檢視此 sprint 成果) and figure out what to do next.</p></blockquote><p>The maximum length of the Sprint Review (its time-box) is:</p><blockquote><p>4 hours for a monthly Sprint. For shorter Sprints it is usually shorter.</p></blockquote><h2 id="Sprint-Retrospective"><a href="#Sprint-Retrospective" class="headerlink" title="Sprint Retrospective"></a>Sprint Retrospective</h2><p>The Scrum Team should choose at least one high priority process improvement, identified during the Sprint Retrospective, and place it in the <del>Product Backlog</del>.</p><blockquote><p>False, to ensure continuous improvement, the Sprint Backlog rather than the Product Backlog includes at least one high priority process improvement identified in the previous Sprint Retrospective meeting.</p></blockquote><p>The maximum length of the Sprint Retrospective (its time-box) is:</p><blockquote><p>3 hours for a monthly Sprint. For shorter Sprints it is usually shorter.</p></blockquote><h1 id="Scrum-Artifacts"><a href="#Scrum-Artifacts" class="headerlink" title="Scrum Artifacts"></a>Scrum Artifacts</h1><h2 id="Product-Backlog"><a href="#Product-Backlog" class="headerlink" title="Product Backlog"></a>Product Backlog</h2><p>The Product Backlog is ordered by:</p><blockquote><p>Whatever is deemed most appropriate by the Product Owner.</p></blockquote><p>How much work must a Development Team do to a Product Backlog item it selects for a Sprint?</p><blockquote><p>As much as it has told the Product Owner will be done for every Product Backlog item it selects in conformance with the definition of “Done”.</p></blockquote><h2 id="Sprint-Backlog"><a href="#Sprint-Backlog" class="headerlink" title="Sprint Backlog"></a>Sprint Backlog</h2><p>When does a Development Team member become the sole owner of a Sprint Backlog item?</p><blockquote><p>Never. All Sprint Backlog Items are “owned” by the entire Development Team, even though each one may be implemented by an individual development team member.</p></blockquote><p><del>The Sprint Backlog is fully formulated in the Sprint Planning meeting and does not change during the Sprint.</del></p><blockquote><p>The Sprint Backlog makes visible all of the work that the Development Team identifies as necessary to meet the Sprint Goal. The Development Team modifies the Sprint Backlog throughout the Sprint, and the Sprint Backlog emerges during the Sprint.</p></blockquote><h2 id="承諾：完成之定義"><a href="#承諾：完成之定義" class="headerlink" title="承諾：完成之定義"></a>承諾：完成之定義</h2><p>When many Development Teams are working on a single product, what best describes the definition of “Done?”</p><blockquote><p>All Development Teams must have a definition of “Done” that makes their combined work potentially releasable.</p></blockquote><p>Who creates the definition of “Done”?</p><blockquote><p>The development organization (or Development Team if none is available from the development organization)</p></blockquote><h1 id="Others"><a href="#Others" class="headerlink" title="Others"></a>Others</h1><p>An organization has decided to adopt Scrum, but management wants to change the terminology (術語) to fit with terminology already used. What will likely happen if this is done?</p><blockquote><ul><li>Without a new vocabulary (詞彙) as a reminder of the change, very little change may actually happen.</li><li>The organization may not understand what has changed with Scrum and the benefits of Scrum may be lost.</li><li>Management may feel less anxious (焦慮).</li></ul></blockquote><p>What does it mean to say that an event has a time-box?</p><blockquote><p>The event can take no more than a maximum amount of time.</p></blockquote><h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><ul><li><a href="https://www.scrumguides.org/scrum-guide.html" target="_blank" rel="noopener">Scrum Guide</a></li><li><a href="https://www.classmarker.com/online-test/start/?quiz=vek54a6ec10658ef" target="_blank" rel="noopener">Scrum online Test</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;公司突然說要 Scrum 考試，只好卯起來讀書了。找了&lt;a href=&quot;https://www.classmarker.com/online-test/start/?quiz=vek54a6ec10658ef&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;線上考題&lt;/a&gt;練習，參考 &lt;a href=&quot;https://www.scrumguides.org/scrum-guide.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Scrum Guide&lt;/a&gt; 把筆記整理在這篇。&lt;/p&gt;
    
    </summary>
    
      <category term="Scrum" scheme="http://annilla.github.io/categories/Scrum/"/>
    
    
      <category term="Scrum" scheme="http://annilla.github.io/tags/Scrum/"/>
    
  </entry>
  
  <entry>
    <title>Google Material Design - Sliders</title>
    <link href="http://annilla.github.io/2020/11/07/UXUI/Google-Material-Design-Sliders/"/>
    <id>http://annilla.github.io/2020/11/07/UXUI/Google-Material-Design-Sliders/</id>
    <published>2020-11-06T16:00:00.000Z</published>
    <updated>2020-11-06T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>近期收到 Material Design 對 component 的更新訊息，趁此機會重新審視組件的使用方式。這次主要來看 Sliders。</p><a id="more"></a><h1 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h1><p>Sliders 組件讓使用者在範圍內的值做選取。可用在調整音量,亮度或調整圖片濾鏡等場景。 Sliders 可以在兩端點使用 icon 來表示數值或相對的關係。使用者可以透過和 icon 互動改變 Slider 的值，像是調整音量。</p><h2 id="即時效果"><a href="#即時效果" class="headerlink" title="即時效果"></a>即時效果</h2><p>使用 Sliders 改變值是立即性的，讓使用者調整 slider 達到選取值的目的。Sliders 不應該在使用者回饋上有任何的延遲。</p><h2 id="當前狀態"><a href="#當前狀態" class="headerlink" title="當前狀態"></a>當前狀態</h2><p>Sliders 會直接反應當前值的狀態。</p><p>如下圖，上方是連續的 slider。下方式離散的 slider。<br><img src="https://lh3.googleusercontent.com/HyBNA4jg-7mZ_wvptdv2BFs2COwO21hYtonNR3SzbfeO6pFyvfiqxHXKpbuBq6tkI2TKeqWgtE4_Cps3P1PVDcX7HAQJXze6KDEHlA=w1064-v0" alt="上方是連續的 slider。下方式分散的 slider。"></p><h1 id="Sliders-值"><a href="#Sliders-值" class="headerlink" title="Sliders 值"></a>Sliders 值</h1><h2 id="可編輯的數值"><a href="#可編輯的數值" class="headerlink" title="可編輯的數值"></a>可編輯的數值</h2><p><img src="https://lh3.googleusercontent.com/CqyD0Td-8cE2mN0BnVZHhbz3NjLULgvGEQkc2i2cnc2wQ0aLyAiClOW8EcekqcgAO-PB2sBg3X4yxwg-3SY37N3LVLKgyceEDHdaDw=w1064-v0" alt="可編輯的數值"></p><p>可調整的 Slider 值讓使用者能精確的選取需要的數字。</p><p>透過選取點選 Slider 按鈕拖曳改變值，或是使用輸入框直接輸入需要的值。使用者輸入後， Slider 按鈕要立即改變位置與使用者輸入的值相同。請注意輸入框不包含在 Slider 組件內，而是開發者需要自行開發的功能。研究發現輸入框有助於使用者選取需要的值。</p><h2 id="值的順序"><a href="#值的順序" class="headerlink" title="值的順序"></a>值的順序</h2><p>對於從左到右顯示的語言（例如英語），範圍的最小值顯示在左側，最大值顯示在右側。<br>對於從右到左的語言（例如阿拉伯語），應該顛倒值的位置，將最大值放在左邊，將最小值放在右邊。</p><h1 id="Sliders-種類"><a href="#Sliders-種類" class="headerlink" title="Sliders 種類"></a>Sliders 種類</h1><h2 id="連續-Sliders"><a href="#連續-Sliders" class="headerlink" title="連續 Sliders"></a>連續 Sliders</h2><p>連續 Sliders 讓使用者在主觀範圍內選擇。不需要將值標示出來。</p><p><img src="https://lh3.googleusercontent.com/EHxl03Dqn-evX03HVg5lEDFagSPySmmkiCyGqFawQSVlPByfvLUwJVl5YMSF5MszxMtofLEainftW77JtMafBPqyVa8X3cmtPXS2=w1064-v0" alt="連續 Sliders"></p><h2 id="離散-Sliders"><a href="#離散-Sliders" class="headerlink" title="離散 Sliders"></a>離散 Sliders</h2><p>離散 Sliders 可通過按鈕來調整為特定值。可以用刻度的方式讓按鈕吸附對應的值。</p><p><img src="https://lh3.googleusercontent.com/BxmR3b_1Oa-yyXsyb_wDaX_SkLxv1W1wtRmw9IyvS8T1WYTC_gtECiYIX64p0YS6CFv55qyA57zzjxDbZjt0vo8aCS79CFN-_b7-lw=w1064-v0" alt="離散 Sliders"></p><h1 id="主題客製化"><a href="#主題客製化" class="headerlink" title="主題客製化"></a>主題客製化</h1><p>可依據主題客製化所需的 Slider 如下圖。</p><p><img src="https://lh3.googleusercontent.com/cT5ehcw23NHD15r64eCvvUWYFCYQn5m04BK9ITt6sCZZE4bsHC2xNXgsxoxyqwNL1emATR9eTNM3QUGUCyZOhVLFTQBONiYweBMce1Q=w1064-v0" alt="Sliders 客製化"></p><p>目前專案中還沒有適合使用 Slider 的時機點，若往後有機會可以嘗試加入此組件。</p><h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><ul><li><a href="https://material.io/components/sliders" target="_blank" rel="noopener">Material Design - Sliders</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;近期收到 Material Design 對 component 的更新訊息，趁此機會重新審視組件的使用方式。這次主要來看 Sliders。&lt;/p&gt;
    
    </summary>
    
      <category term="UXUI" scheme="http://annilla.github.io/categories/UXUI/"/>
    
      <category term="Material Design" scheme="http://annilla.github.io/categories/UXUI/Material-Design/"/>
    
    
      <category term="UX" scheme="http://annilla.github.io/tags/UX/"/>
    
      <category term="UI" scheme="http://annilla.github.io/tags/UI/"/>
    
      <category term="Material Design" scheme="http://annilla.github.io/tags/Material-Design/"/>
    
  </entry>
  
  <entry>
    <title>Vue 3 Studies - Fundamentals of Reactivity</title>
    <link href="http://annilla.github.io/2020/09/06/Vue/Vue-3-Studies-Fundamentals-of-Reactivity/"/>
    <id>http://annilla.github.io/2020/09/06/Vue/Vue-3-Studies-Fundamentals-of-Reactivity/</id>
    <published>2020-09-05T16:00:00.000Z</published>
    <updated>2020-09-05T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>因為官方的資源部分要付費，所以去 YouTube 找了一些可延伸學習的內容來看看。這次找到關於 Reactivity 更深入一點的用法。</p><a id="more"></a><p>影片網址： <a href="https://youtu.be/BFav9Z4lEXE" target="_blank" rel="noopener">https://youtu.be/BFav9Z4lEXE</a></p><h1 id="Reactive-vs-Ref"><a href="#Reactive-vs-Ref" class="headerlink" title="Reactive vs Ref"></a>Reactive vs Ref</h1><p>Reactive: 當要把 object 做 react 就要用 reactive。<br>Ref: 當要把一個固定值(string, number, Boolean)做 react 就要用 ref。</p><p><img src="https://lh3.googleusercontent.com/pw/ACtC-3f9TGipvzquxjvxI4luLhEiwEQOHFINsSU0JBVe6lmsQ_tj6c9htZHUpytUQNIRO-bTeqi5n063fjPfUZkjSYzbdozr8h4lq5xyzujQP0wnjKSaAwxzyBifPbP40gaTwWhKvQ-oFa0GNmzGpNwrAzwUFw=w1708-h1280-no?authuser=0" alt="Reactive vs Ref"></p><p><img src="https://lh3.googleusercontent.com/pw/ACtC-3dGNEEZbcywl457ZwacIOrmOjXGiTTszssScBXncRXAQMgISrmEMIsAi99z-dbcOtoBxIS4DYMfgp8xa4rklkteHbhgEr8uZ_fcRbvEDlc3o9MPqYOTTWVJOtJ8r8WVblWNCwOxGULP3yD22jMklfISoA=w1708-h1280-no?authuser=0" alt="Reactive vs Ref"></p><h1 id="toRef-vs-toRefs"><a href="#toRef-vs-toRefs" class="headerlink" title="toRef vs toRefs"></a>toRef vs toRefs</h1><p>使用 toRef 函數可以把 reactive obj 內的屬性轉成單一 ref 值，如下圖。</p><p><img src="https://lh3.googleusercontent.com/pw/ACtC-3fa7SA3W5EooXb7fyuHRhu-q3R0rs4YRIbQKfvujfw31hi_DYy53YlBtGVLLGaU1BzP06tol8bYgdDlQgjixZ5phUTG3F0rpwCA6UVw1Pzy7kzxLn1UsOSgqboJr3UTN8aJdzFHTFDvoAsIYcvD0lsLlQ=w1708-h1280-no?authuser=0s" alt="toRef"></p><p>若使用 toRefs 函數可以拿來對 props 或 object 做全部屬性各自轉成單一 ref 值。</p><p><img src="https://lh3.googleusercontent.com/pw/ACtC-3ePW0Ue26Rz0s066lV_xvoe5bDY0coYqtFgvABsB6DTFmJW4mABNRaqHDJjbWKJmRoyLBZpEdeX-sYxtVNzDEv3w6HCfHTB0bO4ML5HiL6FIqfjjNPOmY_Sav7WbHLJDwihsN1D7KtiPZ0exmA4FRhNGA=w1708-h1280-no?authuser=0" alt="toRefs"></p><h1 id="customRef"><a href="#customRef" class="headerlink" title="customRef"></a>customRef</h1><p>Vue 3 可以客製化自己的 ref 函數。透過 customRef 方式如下圖。</p><p><img src="https://lh3.googleusercontent.com/pw/ACtC-3fGZfKqFoItRF56u3f5y835b_QbUczl4qWyS_BuQ2R9RY6itEOdwR_aRpylzx7b8XX-7bVYtQUP2OIizKTDiiFgY6kyguiPU7_QNoiUvXSzpbknpOxA32vKhOVYHDLWXp87LFpSatCdr2q30X_Lst-1FA=w1708-h1280-no?authuser=0" alt="customRef"></p><p>影片中透過 email 格式判別的範例來說明 customRef的用法。當email 格式不含 @ 顯示 null，反之顯示正確的 email值。</p><p><img src="https://lh3.googleusercontent.com/pw/ACtC-3dxClU0KBmATmDQoSDedboOvyBh7APXsyAHkO7bcG5SExT0MbXemVjRXZM6o5JQs7xEydtISGtxj4y9oX-9v5fzb2opBvB6Dzar_m9Uv6_gJvl-9Ctp4SFzbJELzrAsr1MLsemoPfLtK0qZbfjIoyiKdA=w1708-h1280-no?authuser=0" alt="customRef"></p><p>customRef 未來應該還能做更多的應用，例如時區格式轉換等等，應該會更為簡化程式邏輯，非常期待往後能在專案使用。</p><h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><ul><li><a href="https://composition-api.vuejs.org/" target="_blank" rel="noopener">Composition API RFC</a></li><li><a href="https://youtu.be/BFav9Z4lEXE" target="_blank" rel="noopener">Fundamentals of Reactivity</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;因為官方的資源部分要付費，所以去 YouTube 找了一些可延伸學習的內容來看看。這次找到關於 Reactivity 更深入一點的用法。&lt;/p&gt;
    
    </summary>
    
      <category term="Vue" scheme="http://annilla.github.io/categories/Vue/"/>
    
    
      <category term="Vue" scheme="http://annilla.github.io/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>Vue 3 Studies - Teleport</title>
    <link href="http://annilla.github.io/2020/09/05/Vue/Vue-3-Studies-Teleport/"/>
    <id>http://annilla.github.io/2020/09/05/Vue/Vue-3-Studies-Teleport/</id>
    <published>2020-09-04T16:00:00.000Z</published>
    <updated>2020-09-04T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>新功能 teleport 讓我們可以很輕鬆的將 HTML render 在 app 以外的地方，且不影響商業邏輯的整理，趕緊來看看吧！</p><a id="more"></a><p>影片網址： <a href="https://www.vuemastery.com/courses/vue-3-essentials/teleport" target="_blank" rel="noopener">https://www.vuemastery.com/courses/vue-3-essentials/teleport</a></p><p>當我們想要組件的東西 render HTML 在頁面不同地方該怎麼辦？</p><p><img src="https://lh3.googleusercontent.com/pw/ACtC-3fpkgtPhFxUWsnrtC1-2Wm18O6xBbtprQGM1uUZ-46b9F2C5DgiJ95_xz1T9QtLC1zEs_SGUdzqsh55YOIjpW6D3Bp9OR5WuZmbSQMkFh-iY_PggFpB3-az3YQ0dj7kNeHiZ7sHnta5V1uzoNPvHzrHqA=w1708-h1280-no?authuser=0" alt="要組件的東西 render HTML 在頁面不同地方該怎麼辦"></p><p>有時 Fixed 或 absolute 的元件因為 z-index 的緣故，需要放在結尾  的前面。在 Vue 2 如果要把程式移到 #app 的外面是很困難的。</p><p><img src="https://lh3.googleusercontent.com/pw/ACtC-3e8n-bWxudlY_Bnee9-_YQcuGIz5XPxwsQ6DCqpPVtj18JIYQYSq5gSc6Ega_M9bMgAJp1qiGt3ZC67KHWhbpbEKFt8ZYejrqxBqsuYloisI8tHveYDvY0uxxTR2Q_V45iYunfRuJ5Q9B15TfgHaJuMSQ=w1708-h1280-no?authuser=0" alt="要組件的東西 render HTML 在頁面不同地方該怎麼辦"></p><p>Vue 3 提供了 teleport 元件來解決這個問題。以前叫做 portal ，但為了不跟未來的HTML tag 重名，所以改名為 teleport。teleport 讓我們可以把程式寫在子組件，並用 to 的方式指定要 render HTML 的位置，如下圖。</p><p><img src="https://lh3.googleusercontent.com/pw/ACtC-3fQL1qJvG8zqkf9D_cBD_FCDWvhgLEka5m4EIILmWKrERGqr2aBCJcYCtY-sjVokVCIc6sASRmefWFWsm03bR40bzBYl2AsVWfxV3ezW9nTnTi_4K0T5EYvy1c058r9d80rpuHUmtNYZVRI0NmRO_RWlQ=w1708-h1280-no?authuser=0" alt="teleport"></p><p>To 的屬性除了剛剛使用的 css Id 方式，也可以用 class或 meta attribute 的方式指定要render 的位置。如果要動態賦予值也可以直接 :to 接變數即可。</p><p><img src="https://lh3.googleusercontent.com/pw/ACtC-3eP5oZQ8-nfvhtWjwmxyyqctP7Hl79mDZAfQmI6S0aUle_PQYDqTnvziIhYr_ZGcTyHGZvdxJPtIMfgF7jIB6_xzL74vjEEVDZdtwnE_beRgJ9FCqclcFzLCyJ0bfa8Mx9RMMai8ZclPZRT5gM5ZqnTVw=w1708-h1280-no?authuser=0" alt="teleport to option"></p><p>另外，我們可以設定 disabled 屬性，讓組件在 disabled true 的時候把HTML render 回原來組件 app 中。</p><p><img src="https://lh3.googleusercontent.com/pw/ACtC-3dY9NBXMuvnCpFgRMcEcJuRA3Y7iBlull-kzaoX4E6SuhQJlbtvO74rccEln8zfDT3bU1CmOdpya1byr9Mg-VEUJhP7CRXa-Vm7LVfTs6yJsOuaCOfaHZWrJRmJ4VfA6M4z2FpvQyxviMMYp3Myb29akw=w1708-h1280-no?authuser=0" alt="teleport disabled"></p><p><img src="https://firebasestorage.googleapis.com/v0/b/vue-mastery.appspot.com/o/flamelink%2Fmedia%2Fteleport2.gif?alt=media&amp;token=04d9934b-bead-49d8-b146-79a2e168e851" alt="teleport disabled"></p><p><img src="https://firebasestorage.googleapis.com/v0/b/vue-mastery.appspot.com/o/flamelink%2Fmedia%2Fteleport3.gif?alt=media&amp;token=08fd1a88-377c-4397-a6df-8ba561476d25" alt="teleport disabled"></p><p>Teleport 還有一個好處是他會保留原組件的狀態。假設我們在 teleport 裡面放一隻影片播放，當 toggle disabled 屬性的時候，影片會持續播放不會斷掉。</p><p><img src="https://lh3.googleusercontent.com/pw/ACtC-3foF18BHGYLWfy1lU9o3Re5ZY0bB81I3vazlvzpsz_pn-x6pkrv9QVxjkAn-vFv7LLMiWHue5l67aVDQszigZVdka8OTZC-eKLmO8JAdr2IJ7mfLU6aOxMOZXVmXwlznWvIcy-QWI0NfCjioGh1e0_TSA=w1708-h1280-no?authuser=0" alt="teleport disabled state"></p><p><img src="https://firebasestorage.googleapis.com/v0/b/vue-mastery.appspot.com/o/flamelink%2Fmedia%2Fteleport4.gif?alt=media&amp;token=d85592f8-4194-4ef8-aec7-f9b5408156dd" alt="teleport disabled state"></p><p>那如果我們想在 disabled true 的時候不要顯示組件要怎麼做呢？其實就很直覺的搭配 v-if 就可以完成這個效果，即便是用兩組 teleport 也可以輕鬆做到。</p><p><img src="https://lh3.googleusercontent.com/pw/ACtC-3dCId188L9jHX3OIMDrpgiRBICfTC1w6BNTfYS4Kq4FdGAQcPRAdp-hRftsYkPEcp2ExQB4DxnuwICdifahLdsn66wF3hi7JiZo6mVExf61cUE38PAN2EpxOEEgKirJPoBERHckylXqpOfob5jDTKeQjg=w1708-h1280-no?authuser=0" alt="teleport disabled v-if"></p><p><img src="https://firebasestorage.googleapis.com/v0/b/vue-mastery.appspot.com/o/flamelink%2Fmedia%2Fteleport5.gif?alt=media&amp;token=0cef8637-db2c-417d-b2b4-c383ec51c84d" alt="teleport disabled v-if"></p><p>兩組 teleport 可以很神奇的做到誰先觸發就誰先 render 到指定的 HTML 位置，非常的順暢。</p><p><img src="https://lh3.googleusercontent.com/pw/ACtC-3eEGRXj9uQ-iapGxqPEk13hWSRi1DW23D2_sAA3Ibs6sYOMuisWPxwoZE9farf2_7cXeQ0o_ft5UD9J5D34IrOGkslyR4datkr3xXrfdv5wbgfGjaH6yPwV7TpyS_hoiQu6OcT6EW1oiNJ-QpdUtMWxTA=w1708-h1280-no?authuser=0" alt="use two teleport"></p><p><img src="https://firebasestorage.googleapis.com/v0/b/vue-mastery.appspot.com/o/flamelink%2Fmedia%2Fteleport6.gif?alt=media&amp;token=e45bd9f9-0116-4b69-8857-3e60210f4de0" alt="use two teleport"></p><p>個人覺得 teleport 的功能蠻強大的，可以將商業邏輯整理在組件中又不影響顯示的畫面，讓程式更有條理，是非常強大的功能。</p><h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><ul><li><a href="https://composition-api.vuejs.org/" target="_blank" rel="noopener">Composition API RFC</a></li><li><a href="https://www.vuemastery.com/courses/vue-3-essentials/teleport" target="_blank" rel="noopener">Teleport</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;新功能 teleport 讓我們可以很輕鬆的將 HTML render 在 app 以外的地方，且不影響商業邏輯的整理，趕緊來看看吧！&lt;/p&gt;
    
    </summary>
    
      <category term="Vue" scheme="http://annilla.github.io/categories/Vue/"/>
    
    
      <category term="Vue" scheme="http://annilla.github.io/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>Vue 3 Studies - Lifecycle Hooks</title>
    <link href="http://annilla.github.io/2020/08/16/Vue/Vue-3-Studies-Lifecycle-Hooks/"/>
    <id>http://annilla.github.io/2020/08/16/Vue/Vue-3-Studies-Lifecycle-Hooks/</id>
    <published>2020-08-15T16:00:00.000Z</published>
    <updated>2020-08-15T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>因為上一篇課程後連續四個影片都要付費觀看，所以我們這篇先跳著寫 lifecycle 的部分，等之後有其他免費的學習資源再來補上。</p><a id="more"></a><p>影片網址： <a href="https://www.vuemastery.com/courses/vue-3-essentials/lifecycle-hooks" target="_blank" rel="noopener">https://www.vuemastery.com/courses/vue-3-essentials/lifecycle-hooks</a></p><h1 id="Vue-2-對應-Vue-3-lifecycle-composition-api-用法"><a href="#Vue-2-對應-Vue-3-lifecycle-composition-api-用法" class="headerlink" title="Vue 2 對應 Vue 3 lifecycle composition api 用法"></a>Vue 2 對應 Vue 3 lifecycle composition api 用法</h1><p>我們先看官網有一個對照清單如下：</p><ul><li>beforeCreate -&gt; use setup()         </li><li>created -&gt; use setup()         </li><li>beforeMount -&gt; onBeforeMount</li><li>mounted -&gt; onMounted</li><li>beforeUpdate -&gt; onBeforeUpdate</li><li>updated -&gt; onUpdated</li><li>beforeDestroy -&gt; onBeforeUnmount</li><li>destroyed -&gt; onUnmounted</li><li>activated -&gt; onActivated</li><li>deactivated -&gt; onDeactivated</li><li>errorCaptured -&gt; onErrorCaptured</li></ul><p>左邊是原本 Vue 2 的用法，右邊是在 Vue 3 composition api 的用法。基本上就是把原來的名稱前面加上 on 就可以使用。</p><p><img src="https://lh3.googleusercontent.com/pw/ACtC-3ft9l-k-1pd4JkQjVlC-bnM-m3pvsRu7NZ0zTlj4Vcw9s3St3gU-rTDnMzJOEoinytoqOzgS-r99OJejTmGLGfj8fANMBuMevPJ0dnTOVemWGXTU2V40mW7eJ5aoUaG7q16SgIODZXBPO5prboaNxALgw=w1708-h1280-no?authuser=0" alt="Lifecycle composition API"></p><p>那為什麼前面兩個 beforeCreate, created 被劃掉了呢？因為這兩個要執行的事件其實直接寫在 setup 裡面是一樣的意思。下面有流程圖解釋 beforeCreate 相當於在 setup 之前，created 相當於在 setup 之後，那麼就直接照順序寫在 setup 裡面就可以了，所以 composition api 才不需要 beforeCreate, created。</p><p><img src="https://lh3.googleusercontent.com/pw/ACtC-3eTC6jk4WewmO7mihl3WZU2YvgRyQcdzwFrfcpK9cBS4f4_NnaJtXoxxowNYNHyIN9cezCFQVf1diwlPZXhqrxKuVtP24RM8hse2TtQzsKTTrRgYiCEmKHYSZnvSBy_ZveiM4GA3EAcdWwLZMtTW5IQKw=w1708-h1280-no?authuser=0" alt="beforeCreate, created"></p><p>另外有兩個 lifecycle 在 Vue 3 更換了名稱，分別是 beforeDestroy, destroyed 換成 onBeforeUnmount, onUnmounted。影片老師有特別詢問 Evan You 為什麼要更名，作者的回答是為了讓命名更符合實際情形。因為 Vue 的動作就是不斷將組件做 mount, unmount。</p><p><img src="https://lh3.googleusercontent.com/pw/ACtC-3caWXrHlW3AfJ-4C-zzXCPwETmJSvwfUc9MHMh06CZwOyLl_P8mctmQfbfE0ai5a3UW3jkNr9txlfFy05pIzJ637flTsTu66zHLrtoQmv0lsdyYig-VnkDrXMfKjbkKktf0qhGuSr7On_3dCEPKD6ddoA=w1708-h1280-no?authuser=0" alt="onBeforeUnmount, onUnmounted"></p><h1 id="Vue-3-composition-api-新增的-lifecycle"><a href="#Vue-3-composition-api-新增的-lifecycle" class="headerlink" title="Vue 3 composition api 新增的 lifecycle"></a>Vue 3 composition api 新增的 lifecycle</h1><p>Vue 3 composition api 另外新增了兩個可以幫助開發者 debug 的 lifecycle。</p><ul><li><p>onRenderTracked: 當此組件第一次 render 後的每次 render 都會追蹤。可以觀察有哪些動作造成此組件 render。</p></li><li><p>onRenderTrigger: 當此組件重新 render 會觸發。可以觀察是哪些動作促使此組件重新 rendor。</p></li></ul><p><img src="https://lh3.googleusercontent.com/pw/ACtC-3ciF0tGZVnnmaQ1skBBPrgMVxAcbq1W23ml9VyhOdh3ft41WbJt_-ZGNJtmxZo-E2IC2nDy6a9zHk-cXIOQN6lYT0y_C_U3Sx_SByjo0hfbJaBv26r19Pspy7NCnr9zOXJtIfvNjnWqg8C_TFpDXXGIhQ=w1708-h1280-no?authuser=0" alt="Vue 3 composition api 新增的 lifecycle"></p><p>為了實際了解這兩個新增的 lifecycle ，我們在 <a href="https://github.com/Annilla/vue3-lifecycle-practice/tree/v1.0" target="_blank" rel="noopener">github</a> 開個測試範例來試試。</p><p>因為 Vue 3 尚未 release，所以先安裝 next 版的 vue cli (@vue/cli@4.5.2)。</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g @vue/cli@next</span><br></pre></td></tr></table></figure><p>安裝完後執行</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue create &lt;你的專案名稱&gt;</span><br></pre></td></tr></table></figure><p>選擇第二個選項 <code>Default (Vue 3 Preview)</code>。</p><p><img src="https://lh3.googleusercontent.com/pw/ACtC-3d50SqpyRc0dZK84rx39FszdpPDossKfclETJyVzexPZq-xRSPYdHw8OpM6Phpz8iQvpmRxAKMvucn-aeyK1_1PQMuhKBjjMJ7AUOrh-qJXI_iL3WZjAi1zxY1GPuolbvT7SG1LSz85K2H7wBv9xD8Nsg=w1860-h858-no?authuser=0" alt="Default (Vue 3 Preview)"></p><p>預設專案會產生一個主要的 App.vue 裡面包含一個子組件 HellowWorld.vue，為了觀察新 lifecycle 的變化，我們將 App.vue, HellowWorld.vue 修改如下。</p><p>目標是在 App.vue 加一顆按鈕，當使用者點擊按鈕後，按鈕上顯示被點擊的次數會加一，並將HellowWorld 傳入的 msg 後面也加上被點擊的次數。藉此觀察 lifecycle 被觸發的情況。</p><p>App.vue</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">alt</span>=<span class="string">"Vue logo"</span> <span class="attr">src</span>=<span class="string">"./assets/logo.png"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"addcount"</span>&gt;</span>Re-render App &#123;&#123; count &#125;&#125; times<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">HelloWorld</span> <span class="attr">:msg</span>=<span class="string">"`Welcome to Your Vue.js App $&#123;count&#125;`"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">import &#123; ref, onMounted, onRenderTracked, onRenderTriggered &#125; from 'vue'</span></span><br><span class="line"><span class="undefined">import HelloWorld from './components/HelloWorld.vue'</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">export default &#123;</span></span><br><span class="line"><span class="undefined">  name: 'App',</span></span><br><span class="line"><span class="undefined">  components: &#123;</span></span><br><span class="line"><span class="undefined">    HelloWorld</span></span><br><span class="line"><span class="undefined">  &#125;,</span></span><br><span class="line"><span class="undefined">  setup() &#123;</span></span><br><span class="line"><span class="undefined">    const count = ref(0);</span></span><br><span class="line"><span class="undefined">    let addcount = () =&gt; &#123;</span></span><br><span class="line"><span class="undefined">      console.log('---------------------------------');</span></span><br><span class="line"><span class="undefined">      console.log(`Click button $&#123;count.value +1&#125; times`);</span></span><br><span class="line"><span class="undefined">      console.log('---------------------------------');</span></span><br><span class="line"><span class="undefined">      count.value++;</span></span><br><span class="line"><span class="undefined">    &#125;;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    console.log('---------------------------------');</span></span><br><span class="line"><span class="undefined">    console.log(`Setup function start`);</span></span><br><span class="line"><span class="undefined">    console.log('---------------------------------');</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    onMounted(() =&gt; &#123;</span></span><br><span class="line"><span class="undefined">      console.log('App.vue mounted!')</span></span><br><span class="line"><span class="undefined">    &#125;);</span></span><br><span class="line"><span class="undefined">    onRenderTracked((e) =&gt; &#123;</span></span><br><span class="line"><span class="undefined">      console.log('App.vue onRenderTracked!', e)</span></span><br><span class="line"><span class="undefined">    &#125;);</span></span><br><span class="line"><span class="undefined">    onRenderTriggered((e) =&gt; &#123;</span></span><br><span class="line"><span class="undefined">      console.log('App.vue onRenderTriggered!', e)</span></span><br><span class="line"><span class="undefined">    &#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    return &#123; count, addcount &#125;;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">...</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>HellowWorld.vue</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">import &#123; onMounted, onRenderTracked, onRenderTriggered &#125; from 'vue'</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">export default &#123;</span></span><br><span class="line"><span class="undefined">  name: 'HelloWorld',</span></span><br><span class="line"><span class="undefined">  props: &#123;</span></span><br><span class="line"><span class="undefined">    msg: String</span></span><br><span class="line"><span class="undefined">  &#125;,</span></span><br><span class="line"><span class="undefined">  setup() &#123;</span></span><br><span class="line"><span class="undefined">    onMounted(() =&gt; &#123;</span></span><br><span class="line"><span class="undefined">      console.log('HelloWorld.vue mounted!')</span></span><br><span class="line"><span class="undefined">    &#125;)</span></span><br><span class="line"><span class="undefined">    onRenderTracked((e) =&gt; &#123;</span></span><br><span class="line"><span class="undefined">      console.log('HelloWorld.vue onRenderTracked!', e)</span></span><br><span class="line"><span class="undefined">    &#125;)</span></span><br><span class="line"><span class="undefined">    onRenderTriggered((e) =&gt; &#123;</span></span><br><span class="line"><span class="undefined">      console.log('HelloWorld.vue onRenderTriggered!', e)</span></span><br><span class="line"><span class="undefined">    &#125;)</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Add "scoped" attribute to limit CSS to this component only --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">...</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>當我們啟動應用後可以看到一開始的 console 如下。</p><p>lifecycle 觸發順序為：</p><ol><li>Setup function start -&gt; 執行 setup()</li><li>App.vue onRenderTracked! -&gt; App 開始 Render</li><li>HelloWorld.vue onRenderTracked! -&gt; HelloWorld 開始 Render</li><li>HelloWorld.vue mounted! -&gt; HelloWorld DOM 生成完畢</li><li>App.vue mounted! -&gt; App DOM 生成完畢</li></ol><p><img src="https://lh3.googleusercontent.com/pw/ACtC-3fXRAzTfUslKQ5JG0EWm2y76FOmGJy7nSc6XnPbRjHvf5ndbjLEST-Ca553MBwVpRny7XnnjYyPo26bIHJm9ZDqEfQTCxM4BIcuC91RAX_CBFoCsaGaPFw0TYtR_6IqO4xbpQuwuCZ-FnSrAYlyKEyrOw=w2558-h898-no?authuser=0" alt="一開始的 console"></p><p>當我們點擊按鈕後，lifecycle 觸發順序為：</p><ol><li>Click button 1 times -&gt; 點擊 button 觸發 addcount()</li><li>App.vue onRenderTriggered! -&gt; App 被觸發 Re-render</li><li>App.vue onRenderTracked! -&gt; App 開始 Re-render</li><li>HelloWorld.vue onRenderTracked! -&gt; HelloWorld 開始 Re-render</li></ol><p><img src="https://lh3.googleusercontent.com/pw/ACtC-3dyvAcNmo16uKAzmyTJCa4KyIv3fIzTODbvFB4JKKsystt86wIBxhm4PPut7IVV7M-vjvmSaYjZWjgzYPqORYMYB3WZJGrQXL6t9REVNKAsMHRAJcMXk37Qt3LM7LdkXjF8hnRZ656XrwvxQjhoz3S3KA=w2558-h898-no?authuser=0" alt="點擊按鈕後的 console"></p><p>從上述的實驗可以觀察出父子組件是如何觸發 onRenderTracked, onRenderTriggered 的，未來使用上應該有助於開發者了解組件 render 的過程，實測下來感覺還蠻有趣的。</p><h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><ul><li><a href="https://composition-api.vuejs.org/" target="_blank" rel="noopener">Composition API RFC</a></li><li><a href="https://www.vuemastery.com/courses/vue-3-essentials/lifecycle-hooks" target="_blank" rel="noopener">Lifecycle Hooks</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;因為上一篇課程後連續四個影片都要付費觀看，所以我們這篇先跳著寫 lifecycle 的部分，等之後有其他免費的學習資源再來補上。&lt;/p&gt;
    
    </summary>
    
      <category term="Vue" scheme="http://annilla.github.io/categories/Vue/"/>
    
    
      <category term="Vue" scheme="http://annilla.github.io/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>Vue 3 Studies - Setup &amp; Reactive References</title>
    <link href="http://annilla.github.io/2020/07/20/Vue/Vue-3-Studies-Setup-Reactive-References/"/>
    <id>http://annilla.github.io/2020/07/20/Vue/Vue-3-Studies-Setup-Reactive-References/</id>
    <published>2020-07-19T16:00:00.000Z</published>
    <updated>2020-07-19T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>上一篇我們提到為什麼使用 composition API，這次要複習在何時使用並介紹 Setup &amp; Reactive References 的使用方式。</p><a id="more"></a><p>影片網址： <a href="https://www.vuemastery.com/courses/vue-3-essentials/setup-and-reactive-references" target="_blank" rel="noopener">https://www.vuemastery.com/courses/vue-3-essentials/setup-and-reactive-references</a></p><h1 id="什麼時候要用-composition-API？"><a href="#什麼時候要用-composition-API？" class="headerlink" title="什麼時候要用 composition API？"></a>什麼時候要用 composition API？</h1><p>影片中再次強調 composition API 只是多一種選擇的程式寫法，舊有的 Vue 2 寫法還是可以完完全全繼續使用。那我們什麼時候可以用 composition API 呢？</p><ol><li>當專案想要使用強型別寫法，將可以順利支援 typescript。</li><li>當組件過於龐大，需要用功能來重新組織程式架構。</li><li>部分功能的程式需要在不同組件中重複使用。</li></ol><p><img src="https://lh3.googleusercontent.com/pw/ACtC-3eCvFbdVnrb9iLGHa_ZjO--scQhmd4UfRh8xaImOpv_R_amOSXUVy0KvP8-dGZGfayGYuqILhRuaHk8EH30fnjbCDTXQ1sL149XDMQAtlBOiVxNG9-QAa4PM8P9g0eqsdluiHv5Z7G8c1_pS6OBYE3znQ=w1708-h1280-no?authuser=0" alt="什麼時候可以用 composition API"></p><h1 id="Setup-amp-Reactive-References"><a href="#Setup-amp-Reactive-References" class="headerlink" title="Setup &amp; Reactive References"></a>Setup &amp; Reactive References</h1><p>我們來看看一般 Vue 2 寫法如下，畫面會顯示 data return 的 capacity 3。<br><img src="https://lh3.googleusercontent.com/pw/ACtC-3fimuHNX70ZHmpdzIw8k22KdDWMKqipei1fu7xw-QKGugH2EyXBA0C7jn0VLOH6F8ypXOCIPtZqpGCTgA8U3mF-D51ktcgy2ti-yIkdrwKu7GnOM0g0xWhkcz4b_FvBuN9hj4pouUSClZBoJmVZ9eMwlQ=w1708-h1280-no?authuser=0" alt="Vue 2 寫法"></p><p>那在 composition API 要怎麼寫呢？我們使用 setup function，他觸發時機會在 components, props, data, methods, computed properties, lifecycle methods 之前，且他是沒辦法用 this 抓到自己這個組件。<br><img src="https://lh3.googleusercontent.com/pw/ACtC-3eWI_eBp_mjrFvWmA6EvNEZ356XpFV38MvVOhXq2Ge-vC-vH3_RLR6pUPw6PFBDRpXbv1jZDK__yJxOjYhrsrYD94VaMi9REsdh6A6_ZaRZwRkPEOWMkvlviRo39MYdt5aV5uAa9qMvNPzGgx6fGmNQ0g=w1708-h1280-no?authuser=0" alt="composition API 寫法"></p><p>Setup 可以放兩個參數，先介紹第一個參數用法。第一個參數是 props ，他一樣是 reactive 且 可以使用 watch 監聽改變事件如下圖。<br><img src="https://lh3.googleusercontent.com/pw/ACtC-3emWzVDwDPK7WrgHEszBhgr-UsIjKvFGVf6Itw2TAvGs0Y0hVtQyXXyZBzSKW19gvrIz5SW5a5C3NDSDNzYufFPn0wieD8RvNm3F4xpgT651nGz-PVnMat5MbiL-YI2uvSp_DBlzrPFqCZb_NKs2qkTYQ=w1708-h1280-no?authuser=0" alt="composition API 寫法"></p><p>Setup 第二個參數是 context，剛剛說在 setup 裡面不能用 this 抓取自己這個組件，所以第二個參數 context 就是拿來取得自己這個組件的內容，就相當於以前的 this。<br><img src="https://lh3.googleusercontent.com/pw/ACtC-3eGf9nsqqhd9MQbfrR3ZM5kprpY6PNwbIWG6Na2_g_PQnmmWwCKFPYwmjNS5OF8mMu5ETKiC_Z60-W33BxyP5jQUn56WiSeZNb6j89lfevlliJgYn5Luc0BF4myz1ZTENDmENgeDOXAwWuwl-SgrJSHkw=w1708-h1280-no?authuser=0" alt="composition API 寫法"></p><p>我們回頭來看看 setup 要怎麼寫。我們會令一個常數 capacity 是 ref(3)，這邊的 ref 是 reactive reference function。這邊將我們的原始值包在一個物件當中，相當於 Vue 2 我們將值包在data返回的物件中。這邊要注意的是：用 composition API 也可以造不跟此組件相關的 reactive 物件。這邊影片當中說這是個好處，但不確定好處是在哪裡？可能要等以後遇到對應的情境才會解釋。<br><img src="https://lh3.googleusercontent.com/pw/ACtC-3f_P3n5zpchz5UWRVigSz3nS4LGGw5BfF6YI83-9hPmYco3uUMDgd95x38xbPS5B4j56nIydDvWobfWDIfcj2uNs38WOecRLezuX-dHmxPJDCrEJdLGb_39-UDRRhwTOpmuI1B1cA7CXaRLLzw1lUMnBQ=w1708-h1280-no?authuser=0" alt="composition API 寫法"></p><p>最後，我們將要關聯 template 的變數和函數 return 出來。雖然這寫法很冗長，但他讓我們的程式更容易維護。我們可以控制讓哪些變數或函式輸出，也可以追蹤屬性是從哪裡定義的。<br><img src="https://lh3.googleusercontent.com/pw/ACtC-3eaJSLKDDeZxuwoPihyTaK-VtIZDVAaXKqPuHWDteFjC1KAjk5UXMCRs-gWVHoHvcQt_WTAqKm1bfUWfETaBCJgURCj3PnJF5jcp1McrVf53Zhl3X0fICg7IwvqzNGNFSG_l-R9u7A-T7EWkgVCJPlSxg=w1708-h1280-no?authuser=0" alt="composition API 寫法"></p><h1 id="Vue-2-也可以使用-composition-API"><a href="#Vue-2-也可以使用-composition-API" class="headerlink" title="Vue 2 也可以使用 composition API"></a>Vue 2 也可以使用 composition API</h1><p>如果我們想要在 Vue 2 使用 composition API，可以如下圖安裝進來。我覺得設計者設想的很周到，不過礙於目前專案開發者程度參差不齊，我應該也是等到Vue 3 出正式版且vuetify 有更新框架後，才會考慮開始用在工作上的專案。<br><img src="https://lh3.googleusercontent.com/pw/ACtC-3evT6PLP96czPiySVh0t_XjIZPawE78kFDXMuxS3JEMM8TEemPNbdqdRxS8Y577J_tIJbE_J_cpKTtciGPnRaQt3UVH29Ue-RR6lrDFGO_l7d6gwa8O7hUUig358G6lmOClZTaRnH_4PPCCw7JA3Hm5Hg=w1708-h1280-no?authuser=0" alt="Vue 2 使用 composition API"></p><h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><ul><li><a href="https://composition-api.vuejs.org/" target="_blank" rel="noopener">Composition API RFC</a></li><li><a href="https://www.vuemastery.com/courses/vue-3-essentials/setup-and-reactive-references" target="_blank" rel="noopener">Setup &amp; Reactive References</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;上一篇我們提到為什麼使用 composition API，這次要複習在何時使用並介紹 Setup &amp;amp; Reactive References 的使用方式。&lt;/p&gt;
    
    </summary>
    
      <category term="Vue" scheme="http://annilla.github.io/categories/Vue/"/>
    
    
      <category term="Vue" scheme="http://annilla.github.io/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>Vue 3 Studies - Why the composition API</title>
    <link href="http://annilla.github.io/2020/06/27/Vue/Vue-3-Studies-Why-the-composition-API/"/>
    <id>http://annilla.github.io/2020/06/27/Vue/Vue-3-Studies-Why-the-composition-API/</id>
    <published>2020-06-26T16:00:00.000Z</published>
    <updated>2020-06-26T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>Vue 3 雖然還沒出正式版，但蠻多人對新的 composition API 有所好評。剛好官網有完整的影片介紹，所以想趁這個機會開始學習。</p><a id="more"></a><p>影片網址： <a href="https://www.vuemastery.com/courses/vue-3-essentials/why-the-composition-api/" target="_blank" rel="noopener">https://www.vuemastery.com/courses/vue-3-essentials/why-the-composition-api/</a></p><p>接下來會針對目前 Vue 2 的限制解釋並提出 Vue 3 的解決方式。</p><p>影片中提出當我們的專案越來越大/醜時，三個 Vue 2 的限制：</p><ol><li>Readability as components grow：當組件越來越複雜時，程式變得越不容易閱讀。</li><li>Code reuse patterns have drawbacks：程式片段重複使用的方式有缺點。</li><li>Limited typescript support：typescript 支援上有限制。</li></ol><h1 id="比較大的組件會變得越來越難閱讀和維護"><a href="#比較大的組件會變得越來越難閱讀和維護" class="headerlink" title="比較大的組件會變得越來越難閱讀和維護"></a>比較大的組件會變得越來越難閱讀和維護</h1><p>影片當中以搜尋組件(search.vue)為例。當我們搜尋組件想要寫兩個功能：一個功能是搜尋關鍵字結果(Search)；另一個功能是對搜尋結果做排序(Sorting)。在 Vue 2 的作法，我們可能把同一個 Search/Sorting 的功能將邏輯散佈在各個程式區塊，有可能在 components, props, data, computed, methods, lifecycle methods等。當其他開發者想要閱讀時沒辦法一眼看到功能的所有邏輯，而是需要掃描散佈在各片段的程式碼才能了解特定功能的邏輯。所以 Vue 3 要解決的是如何把同一功能的邏輯統一放在一個地方，讓閱讀上更容易。</p><p>Vue 2 將功能邏輯散佈在多個程式碼片段<br><img src="https://lh3.googleusercontent.com/pw/ACtC-3d96-4SjMB_p4-hWeSPOVnlfgcOsXoIk9PYGTL6S0mDMzbuTx3VdH5294bQdrYbITjYCyuXrsTpWXjng2H_aPb83y1kHzovuzE7dEXjhMyYB3ZZHSEJfQBgLfo_YSvaDoBQ7f2B0SP-8vZJgZYko4RihA=w2208-h1242-no?authuser=0" alt="Vue 2 將功能邏輯散佈在多個程式碼片段"></p><p>Vue 3 的解決方式就是推出 composition API ，將兩種功能的程式碼片段先集中成兩個區塊，放在 setup 函式中，且他完全是選擇性的。第一次看到可能會想說：這樣是否表示我們會產生一個超巨大的程式碼在 setup 函式中嗎？答案是，不。我們接下來看看他是如何解釋的。<br><img src="https://lh3.googleusercontent.com/pw/ACtC-3c1z4-Cy7mQ1itIsSDBCv2ydlMKfl0Uq-6ITtVczzASfVgXJ57CA66HdLv5kVdhx0RUjbRjd7Sd4UY9WLnMCu7DJa4ezAZo_QViPKXCht75yC_mzGDUS1CO3c6z193-pudoaXPEvR6eeTx5yxP60yszFg=w2208-h1242-no?authuser=0" alt="composition API setup"></p><p>我們可以把兩個功能先寫出來各自的函式，並在setup 函式 return 出來。（這裡為了方便解釋寫在同一頁，實際上會另外寫出來 js 檔案，要用的時候再引入）<br><img src="https://lh3.googleusercontent.com/pw/ACtC-3fXgoNhS2-gvKQhmE2H80cBJmEXXfzqcm_vru2fzbhqAfcocu5NGjXvHNj0c9GRoR0wZvwXeCNLEV_o09u6Ziwpuv_PYNGOYWjHoC0w-yFH1fixvTO22LG6HLKj4ms4rppxbuC4h2upzsn0z-5FsjZgAA=w2208-h1242-no?authuser=0" alt="composition API setup"></p><p>現在，程式碼片段變得更符合邏輯閱讀，但這不代表組合函式會取代組件父子關係，我們還是會先將組件父子關係區分出來，各組件的功能再以組合函式來表示。<br><img src="https://lh3.googleusercontent.com/pw/ACtC-3eWW8YTjK_GIX91w9UCF8IRSX8PMQMkUKzPjMIU99ckLFRpZBjGh_jsTK4OsmUp2cDOpmVaiRHhsLq9UQOO32SyyhZ63zpMjSbqkWOiWT3Wrsilnx0BnxwbnieulwLw558MESaXY8P3fZEh2jbl8orP0A=w2208-h1242-no?authuser=0" alt="composition API setup"></p><h1 id="找不到完美的方式能在不同組件中重複使用相同邏輯"><a href="#找不到完美的方式能在不同組件中重複使用相同邏輯" class="headerlink" title="找不到完美的方式能在不同組件中重複使用相同邏輯"></a>找不到完美的方式能在不同組件中重複使用相同邏輯</h1><p>影片中提到在 Vue 2 有三種方式可以在不同組件中重複使用相同邏輯。</p><ol><li><p>Mixin：第一種是分別拉出來 Search/Sorting 各自的mixin，並在搜尋組件中引用 mixins 加入。</p><ul><li>優點：<ul><li>Organized by feature：優點是可以依據功能組織各自邏輯。</li></ul></li><li>缺點：<ul><li>Conflict prone：因為有各自的data等屬性，容易發生衝突。</li><li>Unclear relationship：不清楚兩者 mixin 關係是否會互相影響。</li><li>Not easy reuseble：不容易重複使用。<br><img src="https://lh3.googleusercontent.com/pw/ACtC-3cuCe0z_fEa50pIodm4hYC8od1Bs0objS-283HeyY-RdgKwAi8wJ6oYMynQBizr66oyqMXsUlQXkmGTttljZusYWrwuQ0IBi1PXJIwL0vY7wIJfrYLsMZJBsubn9bd9kTymExoN00egnmSqzIk-mBxuEQ=w1708-h1280-no?authuser=0" alt="Mixin"></li></ul></li></ul></li><li><p>Mixin Factories: 第二種方式是使用客製版本的mixin傳入對應的config。</p><ul><li>優點<ul><li>Easily reusable：容易重複使用。</li><li>Clearer relationships：將兩者關係釐清楚。</li></ul></li><li>缺點<ul><li>Weak namespace：命名方式不嚴謹。</li><li>Implicit property additions：內部添加隱藏的屬性。</li><li>No Instance access at runtime：Vue 運行時並不會動態生成。<br><img src="https://lh3.googleusercontent.com/pw/ACtC-3dJvx5OUIZEZiJR-VBBCJjDWWDlF3EfYoqT6Hruat6fvOSd8Ibv-KsrUrk2lR0sgf9ZO9CoWJ97GXELgWelH-GaTQA9VTV9Kwebx-IZnvQbSgZL4wrotK66ahn8esXsS3U3MbMWFK2drXSyN_uBBuf0LA=w1708-h1280-no?authuser=0" alt="Mixin Factories"></li></ul></li></ul></li><li><p>Scope slots：第三種是將 Search/Sorting 分成兩個 Vue 組件，並用 slot 的方式做巢狀使用。</p><ul><li>優點<ul><li>解決 mixin 的問題</li></ul></li><li>缺點<ul><li>Increases indentation：增加縮排。</li><li>Lots of configuration ：更多的設定值。</li><li>Less flexible ：彈性變小。</li><li>Less performance ：性能變差。<br><img src="https://lh3.googleusercontent.com/pw/ACtC-3djhWxIL2elD1Nlz60lvLyec2aDpm13uSxYz3Lx7JnYYj3lYyPinDfLDesY7WwXQkW3GzT93XID13mEJCoXSK98H4KVtCVhItKl5C9zMSYhhamHQAGlUeTJZyIoTcxGsK007IzPyh3pfD26VdIEsnEmVA=w2208-h1242-no?authuser=0" alt="Scope slots"></li></ul></li></ul></li></ol><p>這三種都有他的缺點，所以影片提到 composition API 使用上可以解決上述問題。就是將 Search/Sorting 兩個 composition function 各自分出 js 將邏輯寫出來。在 Vue 組件設定變數將其各自做引用函式並設定所需要的參數。</p><ul><li>優點<ul><li>程式碼精簡</li><li>和平常的 js 使用差不多</li><li>使用上非常有彈性</li><li>友善的使用方式</li></ul></li><li>缺點<ul><li>要熟悉新的程式使用寫法<br><img src="https://lh3.googleusercontent.com/pw/ACtC-3dPPnmhsRLsSHI33vrnqj_QB8CScnf9jLwa0iM5iJfRJVhM0IW5Hs4ommjgXhu5larti1rTtA46wmwxMk2rmoQ-9kjp2CRwx5UA-s9KpjOzmH1kEQkgWXPT8YzlzJfD1_YmBF1TuQJV4wVnZiVPfspgig=w2208-h1242-no?authuser=0" alt="composition API"></li></ul></li></ul><p>整體來說，composition API 都是大大提升組件的邏輯組織寫法，讓開發者能更快進入狀況，用更輕鬆精簡的方式達到開發目的，我個人是非常看好且開心的，畢竟一個工程師要面對的專案實在太多，要省時省力才有效率。</p><h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><ul><li><a href="https://composition-api.vuejs.org/" target="_blank" rel="noopener">Composition API RFC</a></li><li><a href="https://www.vuemastery.com/courses/vue-3-essentials/why-the-composition-api/" target="_blank" rel="noopener">Why the Composition API</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Vue 3 雖然還沒出正式版，但蠻多人對新的 composition API 有所好評。剛好官網有完整的影片介紹，所以想趁這個機會開始學習。&lt;/p&gt;
    
    </summary>
    
      <category term="Vue" scheme="http://annilla.github.io/categories/Vue/"/>
    
    
      <category term="Vue" scheme="http://annilla.github.io/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>Naver Study Case - National Assembly election special page</title>
    <link href="http://annilla.github.io/2020/05/04/UXUI/Naver-Study-Case-National-Assembly-Election-Special-Page/"/>
    <id>http://annilla.github.io/2020/05/04/UXUI/Naver-Study-Case-National-Assembly-Election-Special-Page/</id>
    <published>2020-05-03T16:00:00.000Z</published>
    <updated>2020-05-03T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>繼上次分享 Naver study case 訂餐 APP 後感覺意猶未盡，剛好看到一個是關於第21屆國民議會選舉特別頁面的設計，覺得很有興趣，我們就來一起看看吧～</p><a id="more"></a><p>原定於4月15日舉行的第21屆國民議會選舉的選舉日現在提前一個月。<br>Naver News製作了一個“特殊頁面”，該頁面提供有關每次選舉的全面信息。<br>在2020年大選中，將快速準確地提供有關選舉的信息以及相關新聞。 </p><p><img src="https://lh3.googleusercontent.com/gHll-6CMUZTF8E2Oe7feyDPlcuV9hHkS1UOCY-_Mj6XZgjh3bvsm65VqR07kyJfzn7WD_em_64tR4opuZNVv0j16jfDpe1MF3dAerQKNtXCu5xB58ToH3OTEL26fcD6niW9BMvyE_RP2NOAkJ168t-X-pI7kgGXsHPDaPE4iEClkw9BOgLLyTVkzgXhIv8_udSRz_SdQx-35ID6S_K0YfC0c_0TcIPnj1YE1LRm609KGiGhao7CaNzn2lN98CVb7qsBojMPe2Yev1hQjdgeY1boGRslYUwmQGlOEAGpFWTpF6GiMme1_kd8D12db158rxBZKoZe5EJL18p1363mxhjPfA5ZUbyLFAD6snftrkYhSzKwF8R2dVVppPgOEmmBL4a3TckLtEQhMI1MGOA5sb0_n_D_RCZsUZ0vCgg6Xf81bRyhQnS7T9y3BqxUEUXheaiMgr2-TC4yxPdkc2mzxFg-GQIDhEsPXhexq7blbDEeGqpgo9qZdu9ECL8IkzcxVH4jTcUQpbDdZADsnrPIOUk00IWoEqCWyFCUn6OFl8UkNlbT3BZWp9H7vphl1CYNMs3UvRNiF9IAf7vsFeoUo7J8cmhnPvRZI-50Y5jCKBEIzKAKVwm3N_juiQlyxzRS1vM2UyRz5EQ4DU2QALRVPQVeQb_Y-CK1B6L_AzHJuc9xN7yQypD2s6FrPau0kT8gpMC_WNE1HJSOhQpos7xuYke8OZsXJgO3usynY_BNaUM43xKzZqtrZd1gG=w966-h1078-no" alt="第21屆國民議會選舉特別頁面"></p><h1 id="通過累積的專業知識提高資源管理效率，使用AIRS技術，推薦文章更高質量！"><a href="#通過累積的專業知識提高資源管理效率，使用AIRS技術，推薦文章更高質量！" class="headerlink" title="通過累積的專業知識提高資源管理效率，使用AIRS技術，推薦文章更高質量！"></a>通過累積的專業知識提高資源管理效率，使用AIRS技術，推薦文章更高質量！</h1><p>2020年大選特別頁面的重點是提高與選舉相關的推薦內容的質量，以滿足個人興趣。 利用AiRS開發的“關鍵字新聞”，可以自動提取具有很高用戶興趣的關鍵字，並添加一個完全個性化的域。為了提高資源管理的效率，僅根據上次選舉功能頁面的指示選擇常用組件。Naver News 創建了一個特殊頁面。除了擴展個性化功能外，“ Pick Press”也是一家媒體，該媒體收集與編輯選舉相關的新聞，對其進行改進，可以從各個角度使用選舉新聞：從選舉出版物和統計數據。我們試圖通過“專用觀眾”和“信息圖表”更有效地進行投放。  </p><p>因此，第21屆國會選舉專頁服務理念的關鍵詞，可以通過三種方式進行組織：</p><p><img src="https://lh3.googleusercontent.com/zJpBnTEaW-a1pDmU64QNHOcAyEVwfT5vp95LB1a0PCBrElQUW0i0MuFjzsrRI_CjJPxfm873ofN-g8OTBsucRh-AaYJC0NnltAKjdYCV6pjElun7VeRKT6QzTB58XdmSFeOOGz01BQipGD8fk0Xvp-MdJf2te7dnPJSWH8StyF6pX6R5yEgouInJHCPRCvn9U5BdrO9jVnXHwX1pcoMU9BmKDax0zGH2AXhTwbM0Qn9aSUWT8U9dETyebXRyppLKvYGUPY881E4mJtBfSwsl0B0TtC4rdQAWJ7OYuxTsVk3Dy5v45SQojqe97WXSEidL46Se2TEDbhBFenlosOOvItZmGPVfpceheV3T4i1vFTC5PubsYJknLCtyEpK50b6y2ld5EaaOfj98isZpyf3dEmFURXj2kYgcZ-2a-IKQv0UlrdcdQe2697Da_YzraQXf2TaKGlJenI9TVwCdXmw3-G4_a8cprwBkLKVDsvKSmkcbEli0-NBqIXmjAMr7LrW5Iwe0h8h_lV9mU_D7RjX0eQSy1fRjzmBpK0iyl4TyC9TlsJMQ-COf-nj_0AMhGXMKv77wn3oIcGhhSH0LC910Qy0CRyQEuQiMtt4LL3T6_6VR4ZR6oc8J35Ze61rqVZhdZd4HZRJ0LzkFztfGdNgVQ1pLCTIHnxY7Dw0_wxav2S421719zA1lV_Wg1I-30ojPp-sgZXehdfda8KEREA0GE6fB3I-ns5Au9CgF7wN0Foz3INLtHyO_YkfQ=w966-h451-no" alt="服務理念的關鍵詞可通過三種方式進行組織"></p><h1 id="建立可重複使用的選舉頁面模板，提高資源管理效率！"><a href="#建立可重複使用的選舉頁面模板，提高資源管理效率！" class="headerlink" title="建立可重複使用的選舉頁面模板，提高資源管理效率！"></a>建立可重複使用的選舉頁面模板，提高資源管理效率！</h1><p>第21屆國會選舉專頁的關鍵改進點是<code>組件化</code>。由於每隔幾年會重複進行一次選舉，因此每次都會使用一些常用的模板，專為高效可重複用而設計。由於這些組件可以組合使用，因此在特殊情況下也可以處理它們。利用每次選舉的概念和品牌標識，無需花費大量資源即可構建每次選舉的功能頁面。 這些節省的資源可用於提高內容質量。 因此，我們希望進一步提高選舉服務的質量，並將其價值傳遞給用戶。</p><p><img src="https://lh3.googleusercontent.com/FjSEajlmRI0IjzQwBMUR5zooRMiUQSIqeVSHyfpDRm_tlIxF4FFHcdD82mC9fZ7hhx5jcaoHnIsCCxJu1u-UEe9rDV70CIpEOH8PtzM62LpXAhiMmslsYvqDbLEz2IiD2H4KfTfLExY9fLdqftebKN1r9nm1VwQboMQF_St1fU6a8aHQzZG6uzM3ePAj5mIgkrdMpuPhU_CRKJ9eoD8rxLknrDD2c2-_txIH1W8xqkw3yCgaODkLw3Uf1ze5lQl0YRGPpqeovQ_eIZH3NeKWaT5o4uRVzSJBpUjC09LGaBwzim4mDEQ6sycKKoI71HqQIc0dxu1BiHY2LjJ6V9AEEO9g-lWcAHepmgLkPgmegS2UFsioNF01Q9BXJrCWbe9LyHPfGXa3crhDuhELsUpuyEZlg5P5Wn4EifyZN0gPoeOYTflnt6KeTU7w3pAAsxnnW-C7t8EVPm-drr22U-5ptN77JKZ6nKwtV7PcyXf8qtET3eZ5b7sXe0OjBuhuWtBAxMHw-YX0RSGyXfFBnM_3PuIDQ-GZKoMA7rHy0ECCdiQlfq2I25mDVH2AlovaZ3sLIa3HJh29p17hB9Vgcx2llPdWupnb9u1YNR15QhYYcDgl2XgNwNBl-Q1fGrAhGdTHD4Uol2KJAk4a4V87kBruyErJLl4zu6cQIlFgHBzsuJkgIcW3tY6Gk2uy110nUK5kNuPBrHaf1gPMFsJZq31V6VltfKedXw6TueOzwpMw5qE7say5uEOdE6LO=w966-h566-no" alt="組件化模組"></p><p><img src="https://lh3.googleusercontent.com/BFhl4KF04dslmVH-2z-2ohDdBLBlp3Yj6sr4R69KI1HnZkWESXMlohSoGVTEcbigpRH4mvAl7lR5R1mry-Y_-ZovJlvwdq41L0RuJmuKUneM_fiL8OeX34g9h_L6Pgbsnjo4oBE7IJ6wER3twGc4kWIm8YwVFXKSsjli0jr9iYf-hyozLH9foW2yD5VknLSMxAoAmZjPMgyY-G4jGoZsiGb92DY1-L_Ii9Ac6xqJp-AV4cR6g3IZ8gQSJpmRDAOlwFWZHYgJoK2n5tX07fDLzFWGDvYzRUA8GH36T1XNGMhm99ucu1_xzqLntKOqTqMzbXbo8LhBlWXWqmG3OqZexAU-RdKP_6-vaozbX5mieWg2ETNTTAIoCe6OaoroHYF7iiTjgeBWVS0tmDBNprT_8dHJBXgS2Ld5dO4MSjYqq8a8N33kBNko-W29t8zHXzdYxuQt7wfeJYeVUBqqAsagJAepQwAn4TmFSYFUct0e8wstosD5j7d6PX3ryeMiB0_pD4oKRX9xh5bBY0wbm8XQtQYo-R6_kluiPb3yli2nbT9MKds64vGPamLkriBruWIG7WXpW4nhAg-8hkB5aWOoiWKUgYQRuBuuiBR7p38fM4FfFP6mZl5hk6iF51UV576YiLSnO_MnEA6fWIC8cwoKmBdsLsM3gboiwdLodtWYdpPvc2jaSfyB5gbGc75Rh1-BWcPBL5c5y_XWPfjsovBgCyzVE_JYn_gkkCrp-EC8_ZhBGSFzs0Nm139T=w966-h1129-no" alt="PC, Mobile 設計"></p><p><img src="https://lh3.googleusercontent.com/0IWJhj4Xfw7odRDnDDYdNqN3-E-VvvDkZnn5UgSfKc7DfSLpJ8e99EzdIyvhHHFXmGKzFL6zftXeZcjEs3T6W0I9lOyg2doZqaONhjjyf98KqTY8tRrPGbyn7xZ7ce7iD_EFaex1DaT44Yiw5sjCD-md3titMr6GA4vpTE-pyr5I6CAMobClLcSnFq2wsW7oKtFnsLEuXbSFmjFJbPN3ySRQYfnLjs5iQX6MvXdDS1HQZgd0qNp5ZrvXPSGuncDLfRXU3xwyb82qfBfyky-mSyx46daClqK7YJpHBaotCzMZzlSCtRlnY79IfYWup4TJvHDM6J9diOTV5v1Rsj8A6CnXIIF5_YRn4zRsT99E_vCs8pMjYQzVCCVLUH4Wj9ju3QvZ_BGdHn2Xh6nTSm9lyf0eJpqR9VvssGcuUPCpzS_Wb0-s-H36-cm45_HfesLcgbkfehNrBJjcvOEJ2MqAg-eJX2CI55PJSp_b2Bku1ejL_4IL9C_ISqmnevWZFmnP5Kv3EY4yG-ZFWaMoCadosg2G5xMNh1qCkH_Mi70tnRjgPlRDJfLs2FAyu180E890-hisWv-GUjd2ZFJJPShKCvIOi67W3jvlXqq3weoSrCMfOU2oIstr1O6Zpt1aL5xzhlvEDbJBdUsw3iCiku2NKf4TR0HtriREXAzOB-v5BvrPxmHgFdndUvsopj3qSsFpB4yaocWx04UklNZABo2wkrG6t7KUkPvIpLCt83pkQt91A4HMNiC7_gwC=w966-h548-no" alt="頭條新聞模板"></p><p>效率的判別是基於頭條新聞模板中的累積指標（我猜是點閱率），這些指標在構建頁面時原來由六個模板組成。去除效率低的模板，最後僅選擇了頻繁使用的三個模板。</p><h1 id="2020年大選品牌形象-“穩定”，“信任”和“改變”"><a href="#2020年大選品牌形象-“穩定”，“信任”和“改變”" class="headerlink" title="2020年大選品牌形象: “穩定”，“信任”和“改變”"></a>2020年大選品牌形象: “穩定”，“信任”和“改變”</h1><p>第21屆國民議會選舉的主要身份包括“穩定”，“信任”和“改變”的含義。上次選舉的特別頁面上用“圓圈”符號表示“穩定性”，用“靛藍”顏色表示“信任”。為了保持設計傳統，對它進行了保留，但是“更改”的含義是新添加上去的。</p><h2 id="色彩系統"><a href="#色彩系統" class="headerlink" title="色彩系統"></a>色彩系統</h2><p>選擇 primary color 的最重要標準不是讓人聯想到特定政黨的顏色，而是選擇靛藍的顏色，該顏色與九個政黨的顏色並不相似，但也被像徵真誠，謙遜，穩定和信任的顏色。靛藍被選為背景色，而具有人道主義，原始和中性象徵意義的紫色則被表示為漸變，並被選為“強調色”。</p><p><img src="https://lh3.googleusercontent.com/nUpf_i61hCuxXrilYf955BRrSBTp7N3teJWca78DaERi43YmtgmFA31_dCcQEcHo6aSISQ0U_qowcP_Oq_W9kI03kEd8eDvBRcFWuiLnrpKFEWpDt05FwjKG2X3_BllBkA8atbHn-YMQdn22qsMBimI25erdTozTLw5fganhmQWOBzZG-R2V37pgtX2Ebc00A2g2FB1e243dBcs0VKIWfnTjqa-Tmq1LZFEuPO3fsjdDkahORQuWQGOyie64MVATOO77_uEF8-DNpY60GvbwB1G-iqA52VZlLZ9xIXagk_-2y6AMbi0qLqD7VOjrz1b2tppimp-_o-t3VFxhbOh4EIPjOtLazYqLWSto4BY5p3gE-5avEfLcLwwlzat7s9Ql4QgZJ8L-qsShs34wxBrd9U9-hIq-289b8-QAiR92iu0APu4nW0YH4_mxtbiRGT-1HsfdmDZHzfX-mvfzukgOKx-0xkxi0m9SU0Ci3wPYdqkq96pjNx8RgQUGsR8ikx0cf_GDXzL48xefJ2Ftimt_OtF6UQPaqmalrqTZNbhJMzHpdPhnp09m6fsLtTkAzwEhQaALfKzPtqOThXqzGH1UcRZcJuECWEfTVUTT2QEAFJJAlAx2CWtkIkyT_A_-rlycvo4FbuFEuuDc3A0BSlp15o2ema8dj8v5SaYsj7YYbADd_4iMty4o0JbA9l3gYO4or9RtI7IQhxbcokm0U5tAC5d38RM3HuRRtQtw7AFRy_gP2zO4zrfZ13Ho=w966-h316-no" alt="色彩系統"></p><h2 id="品牌識別"><a href="#品牌識別" class="headerlink" title="品牌識別"></a>品牌識別</h2><p>品牌標識還使用 HG Codec 繼承了上一個選舉功能頁面的品牌元素。此字體是具有完整正方形結構的標題哥特式字體，並且在具有類比功能的同時，還以模塊化的形式表達了穩定性和現代感。這與2020年大選設計標識“穩定”，“信任”和“改變”的方向一致。</p><p><img src="https://lh3.googleusercontent.com/eWiy3envwtGn9XU5ZhsO3nRev3e8BBK_v0omWv5hgZIfuQtel-tx08L3V4JXPurF74S1zYJUIMFp7W9sXri0fTpvI7C_j-j-7886qYERhLEILNNr9GyecoDw_LQRZF8yo45m8u_m0D3qR4HEoyCQqHqfRCVwil7Ly7M6UKpLbTVkor4TJ_Qa1VX2UEoDltxzWwg82034QtN28-EHzziKdo0RSJhaRRphfhRskw7T6QBhztaoANY5INUWJOTbKKkOzQFbab4sGBjzycNptrPufQLWD8H3EFbZG1sQhB2kJ-vYdqfixgsD05MAHJIZrU0BpYRFVPnn7mKH1GThLKU34wSN61z5-jol-R5jHo91rmvlXfMkfSMtJ6hBXG-Xb4j703rBGqpH13EsU1B24uWu4j2VnUi6yW31ikjBAusGTgXcNyB44WCkwj28boY_6cBN_ddnhPyGc8WXi5H2DqsOzko0LJjW5f4zebRzEj3NDq00DJJksR6pNCAZxoVY1et5WNu7KKsbC_w8oE_IwtEa2lVSlHm-nBdetGvVRaZ_-3UXLLKoYoW4deXMJEOx746SCwkV1oJVu0F-_WDxtkmN-wfu9kSlCrumLZSA86nzarHOl9lq0Cq5GqMHHfnw3aGah2VfuqQMx6VtGAXlWP1L2OrbQP28sf0-c-u-5H7Y50-qD4ng7mzVPQPQq4ZCIsqHAlwTikkBOr-A00kWxcyqBU5e7DC85aPIL-ZgMWp6hfMHVb4RivSGITsv=w966-h316-no" alt="品牌識別"></p><h2 id="圖形系統"><a href="#圖形系統" class="headerlink" title="圖形系統"></a>圖形系統</h2><p>除了“穩定”和“信任”這兩個關鍵字之外，圖形系統還試圖強調新添加的“改變”的含義。圓圈的形狀意味著很多選民，並且以各種大小表示，以包含不同年齡的人。隨著選舉年齡的減少（18歲）和強調多樣性，中士的運動試圖動態地表達“交流”和“改變”的意願，並且人們強調了多元化，並且在當前的政治領域中人們對改變的渴望與日俱增。</p><p><img src="https://lh3.googleusercontent.com/lyhDNt83ya1rj7Qsuf2bsqFYWC4uh4UIEl_jCfNDOpTldDSIgw-WIGZ5HYhmd72e92corPNgs1mn_Pz9RiMdF5ZYC5GbXZ_NUAhPTGh_W298VsUtvkCybRYZGkzJEdgUdnDTsuTWHNx-5rHeyA_61DaAIR7Q9L4_U34UvLi2-KJC-NOcLznIYMVKgkxmued9npsP0Z4g-lpggcbvSF00QPNlpukELF-I4ARWnoD3Sv8fbrZZBZd2kXqLDmQCp9dB9m6-b9EUPDzuwgkmFkFi_0g5xmcX2CVrj9eR30AmwPm-dXBz9zU__SQL4eTQYOl6_3v-1oMSEzUpBgQ8lmcWquDubm2EYdD8EKEvA4Kj3bqngeeuXy-Uuuzcoz6R5daS-6AMEKWf8P5dMVpdmyMf59-1Iia9BP2rIiIy-Kqj5j0sGEQEggCYbLGCduK3xjOAqNClG4ayEWf6zLrgv6kyNA7NBmUlvPsQZ6B5Sg10cEzABVjza6OP65_VWv7MVCwNWrYBc03gHQBhv61WF6-gkr2avWG-RQ6sOF-R3Q15prkU1wvOf_kRsxNdXUWPj9QP6pdOOb93Eu8NiKymPxaF-NvRc8mVUFOG91Qefcpp4UASnC3OU6YqHmQhXEzBz83iM3iWeJ2O59WdTRSlCqx-QtSv2acL89hrtgIKzMi6vw87oJQFSDdugUEit1MTzxR5tKNPNXBJk0DC_eNXFhdSMwMb4WgiGHqzZl2fgJ4UsZtduy6oc7d321wx=w966-h316-no" alt="圖形系統 Dark"></p><p><img src="https://lh3.googleusercontent.com/BnmxrGvjgSnf1ZWZYvj7p2wb_-cu7oEEyxpRKO48SsEas1zSEpkQvY6ATeuXJ-M2AjEZlK5RjCdtOTmWEfCOoaUO_e6V72X0vTRMD5wtDFM9qXUMtmDO_bCVg4-8_QPCKiPUy5qVqQ2emBOJYjigOETK3h7SHknIxX7hxTFnUzs0NUcSR-RXM8DeXWIRUVwziPt5WI-ohZW1xDBlKKdQg228oUiW9M3S40x_oohNuBfKWnBbo3Q_mySCeay8c8EF17_cwEDG7eIU_CqIX47ffn7DdwxU8oxq8ztuDTXRo7SjjG7C0_8rXuaLKvt1xPW13YIFDaslC8IclOlmng4F7YS3fbtE_MnBmh-gbHnG5_3bZoA_9OaRkKG2ll331hjaE7MyNZVY9-0C1KpPb4FN0wCSZbeq24_cXv_J5M-5XnuDyJiMA-gydGJHcirN-rTlCoMgmLZc8ZSf6UbjkXhDnLsOG7yotbs3kzOP8SfqNS5f362dnglG5lVVUltiCzKJmmDIJZcxPhkvsJ2Pnwwo3e4JYl-uG7l0KYvlcSi-FNR0vKHT5ZRE3pH6kNziKU_dnJag7rk_73p8Ia2Jw0h2USU_dz5Vs7SWNmHNTh19YcrkDjaOxf8QAks03Fn439Rd38yDQOhAI-SFbBPFyeumKE7BuRZFygvZSojZnvkujj617saN-Y5EJAhIZ0kN0aaLyp3UIW48-aH2hNwEnA-HZdCK70MoKixJ5zDjCqN_H6tcm19Qa_qOxEPI=w966-h316-no" alt="圖形系統 Light"></p><h1 id="個性化推薦新聞和媒體新聞"><a href="#個性化推薦新聞和媒體新聞" class="headerlink" title="個性化推薦新聞和媒體新聞"></a>個性化推薦新聞和媒體新聞</h1><p>新聞頁面的組成大致可以分為兩類：“個性化推薦區域”和“媒體新聞區域”。</p><p>在“主要新聞”選項卡中，主要構成推薦內容，您可以使用“頭條新聞”（群集新聞）區域按特定問題分組和使用與選舉相關的新聞。“ AiRS推薦新聞”會自動分析用戶的興趣您可以使用推薦的個性化內容。由於此特殊頁面的服務概念側重於“個性化”，因此添加了“通用關鍵字新聞”區域，以通過根據本文提取關鍵字來為用戶提供完全個性化的內容。此外，還增加了一家新聞公司PiCK，該公司提供有關媒體直接選擇的選舉的主要文章。</p><p><img src="https://lh3.googleusercontent.com/j-9dPcTkSoS9YGlWq3VmG5L6CBZVg455wpdl1Qhu7-GVVESF9JnL-amFJlYyoQEH7OPgTsqjg7L5bkAakkEj_5BMBiM0oac1ocv2SjWqMUr4WQqwGsVo1xG4LOq6BYk2W-5Dlr-O7VWMFyihZno4dU0fZj5oCH38fe0tfJ9c1L5EospyNZ5vc7i7LKw9qAdGWMZgDuJL3OdI9Cw6wu5CMO9KVPnSY4Fa4taM1zOMy1M6gFgCJNykbT-3OkKSQu3KKtSZJA6fDN33YaO9fu3VA5EgLZ2XhoZ2sP2QssLsmO4lWq8lhC5PKe5xwzmM2WU13CI5rxKlVkDIEQ0qq-eGGJjFdb5UmJukI4dz4k-F7rqL9M6X-fNJ_OAQbmocM4s5ZRwCc5uVV9I25iAdgqEll5aINQ3oKum_6CiMxaC2xE6z82XG6ehCgYhM3s3f9MyDAy5TSLbHsOoNo-Sj7-PH-HpO1IoNoBWibSERkBOsZgytHZnjpX5R7zFBwENwEqGJAXSqpNNVZtEZjqDJrnxnjneWbQUX-4ZPwNiPZOihsL0IWwiPhUp3ewgm1MVxr9-n3gFmHZHSw4FCbXolQM7saEWkqpvzdHlJRYQuOruDvW4N_vu7IW6gOAH5iADFlrt0hIDltAgCgWAvOxxEvmKPRDHn7yzQsJk45LKjvb_I47aCf5Kd_sVhSLQHFoLfKVfvB3K5e8TgTUlSIPso9rcef1KL7bSsejEJ28e4qFL7XGRwsMDZzO_hXqtK=w472-h1280-no" alt="個性化推薦新聞"></p><p><img src="https://lh3.googleusercontent.com/KbjcqbXWk93P8ZQkCFORgI9pHgerFLXQbfHzuL0qUsi72s1cYHSe2HQj-L59TzRLAex9Mj1eAxltkXwWQZYq4aQtRKw2vhaUvrrKXDrsNCA5ZghHv05oqDCopTkA9lm6tTVSXTm2DsSqqNuUGJ3JKl67BJk9hQ5N9hGm7mY8VTMXvUn7rthrUy4kcoEephzxkvatV-hf14WxxOg5BaaedV7VLp0fvbksKVcxAHnAu39vVl7y4DTwAt5W8F-6uCA1qQQzZ-qY-BKczCKC2mreCpCcPC7ksMpLp2r-rRy6eWJTY6hueZl9xrACAedeWl-9kvJA6MkeP0mHDdYnOiRc0e2OufKy-phRiUwtsT80ltT4AtZq1b9egla6kAAwFGsbAbtAGHGBibWHI6S0ow-pA7v8Ld5iOVYbdgzYQB7PpTm_7I2a-JjeCl0VhR_-w4ae3mJUkc30OyXyS83Tzu7RmS7YPPpAIbcyHo0-RyeUHZNWb60HCN_bOBWbdBvnpmYtAafXi4Ril3Reuv5pvMsxDWYt9jGutyiTbBSWo1xh_V0XEbTnPcTe9Lr5vaUD1mEozw_xYaU_ryWq8jqJCVvQB2O-WkwW5KjojVBgH6K1tKio6qYuTqAmjbA3A-bypdBy5bb4BNs6RnNejP_LJJnD9hPvtww_AvgywodUqorbJ_QiLeApyLTkRz62lz6dVHfXobevbCz4FUB6Tn7pZxtVkHHMGUztC-pdiIeS6YT84XFiJrxcKfb18xz9=w966-h744-no" alt="媒體新聞"></p><h1 id="由各媒體發行，民意調查結果集中在一個地方！"><a href="#由各媒體發行，民意調查結果集中在一個地方！" class="headerlink" title="由各媒體發行，民意調查結果集中在一個地方！"></a>由各媒體發行，民意調查結果集中在一個地方！</h1><p>自2020年大選以來，Naver 提出了一種在圖表中顯示和處理意見統計的方法。目的是“使用者和媒體之間的交流更加直接。”與民意調查相關的文章，例如由媒體直接編輯和提供的政黨批准率和候選人批准率，可以在“人口調查頁面”的一個地方收集。</p><p><img src="https://lh3.googleusercontent.com/G-Zv5PZYMCHG3PM0qyLs8Ll6z3wA1k1vG-p1Kv7g1mqakFqnPjcQ7cwYkOOc9yM50bprbrnXC67Cj-IeP_L_rAdRbw5UzXN3ogZpwQFGq46Y_eyUUxJ5M_wsEN5OyipM9Pv9ru9QIoAUTJJvFoZFHEcxAJg7ZjDe25RURF_8yVUD-NGVBkh13rOUwUbox4bC3B5YI5jeXDcBpcVaqX3DkgYjttNlRUdnrNdQMHVihLKB8Jcfeh6tWarB-p9diA_DGwIIuU1TlPRFbIi8LkraMbDxKwey1otEtPRxJwIffbjeEO_8PfmS_kiqQCZ64TLgMWBGH4a1WmHWNwXJYVDGGCQl62crcd5Ofd2XC_YPDVKw_y0JNSi_3J-WflpnBR08XZXjqWToJ-FwXqyYsDVbkPp30gJg1uU8MV_bW3FSFaynwbPE83CuLgrQh0OJ70VYDmT_oRMlzbew9geWh8Lpc-Ni7Icq_HEt-XUcWgJdIjtqtmIHKVIxi_5_BLvov833Nkck2LMwBwu6sKLAzToZvwVyl2mWlu1k7L2wrR8F_0zwLogp3O8QOl3Fay5-VUKSZ7BokJdKUEDWKwDfS_rWH_hRTGK0nyBFgwQuDxDVgMT55PFEBrCJxsFtOnBbi0quDv874EHSO9VWCQPXmgmTPoK9F__WZuCePF-JZYsQtWKZEQ9brhx-HsYXpg2GYKDkP7SDUYfUMVXuJOuj6QfeQbWmSCTsXc_p_mojrHKonC0bVLCSWBU1qEaZ=w966-h1066-no" alt="民意調查結果集中在一個地方"></p><h1 id="通過可視化選舉數據，有效溝通！"><a href="#通過可視化選舉數據，有效溝通！" class="headerlink" title="通過可視化選舉數據，有效溝通！"></a>通過可視化選舉數據，有效溝通！</h1><p>“過去區域選舉的投票率是多少？”，“哪個區域的投票率最高？” 選舉統計信息和有關選舉的有趣信息以圖表的形式提供。選舉頁面的信息圖用上述的色彩系統，清楚地分類和傳達信息，並在插圖中積極使用這些顏色。</p><p><img src="https://lh3.googleusercontent.com/D2Mcxo5J5hmivUmwxqBmm6h9TeX5E6E9HDM1AC1pqm7SKez47EaINAuI1NttePLU7XCxtCTCaDwTcuCFLDcXUGcLJdebGS-TQdrLbmhosCQ_aINNEy_YvCmpyZnEZSx9WUn9gbbI7r59NPhEkKuTUkpXdxqn0W3ZOAjAYaZf8hypdWouZ_ZBA2-N1o4JEceNMZHtNrE_Cp7hZDbUOgc-w8qe2b46yTckY6thigoToND5-BwshFD9tDetPKTi_xsj4TkbuS_SXy38wKsGgEElgrEmkTIq1Ou9IUHaf7GT67QmcGTYPFKkQXHsWv9ebY4E_Cy2EETn5L5qZvGVz3pbH4_vMz42WGjkR6uq24vwyOglumQSqdH34cteMmgRpkETFGeQLaNSWVwy0zDjxYDki08PsTzEjayZCnLlr3GXHdt3560fXkm6N7DpTMANKlJy_A0DjXxzyqaNI9OTxEUFPczXdP2XZ14Aq7wPSH3sEF5xsUTVmh7DTqvDQuvkgBTL42tBliEVQRCrA3FMJupdKoBDA3DOMFhMcprs_pjc4ONruLfG5UBD_nRqKJ68ESjnTglwVNnUYjX9TnJ_pjWQEiAbtVso3SoAZAntrLJrh1anX0b6ZnXVfVv3nX9HByrz0XwFp-yHyn_uo_fe_1reHquPGSZAkyjEH_dFe6no-ISR1XKOJLl2BVnnsNc9U02yJ-IWLng0DEom4mcFUVFksidmww4A6g4VaNwUgNxeU7eUYY8e8vKQaIjC=w966-h1066-no" alt="可視化選舉數據"></p><p><img src="https://lh3.googleusercontent.com/pEL562dFJAJyM-Yw4VHp0_k6jtu9bxDNw8-4sP-vC2JvuK6knMSf15Guo3Azo_QBfmqCpQ_W75rnWcqcZnpOa3vOC8c6QUK8DRkOHKiK74ft8wi17mgUySLDaLBjOwMLmo6O8P8_6AjDikg7o7O834pkk3ft-5_YisDSG9xP36b8WAhlSSa3z8FrHhU4zpQYNobH68WiOBmnQRWx0GffW3N9nn7reT33ECbqhNTn8_kjJdH6qyRCVNQkeigJoEcoI7n8Jh0mQVmNwagcYRbr6IUBJCpKFChWfT6tH2nRfBneiPqk7dMQrUMkGNjtfgC9rghVaYEAkMhwwdPM-L_Te24cp7nRdQzDDTPkv0zweLybfE7pIkXvfBgK9CNx7ZOH14mKedG6ICQb4JUeLt7za741UcwcdVygNnLzjaNqpKv7ZPaEt9NdJa7JuPwX9Bl7buxqrAnQ-HRzXNFuEUS_cm7BysU_1PRd-KqvPdgBMzpJBRVPi4zc4eWeQmfCHedLi8hTF3HcrITVYwGPGWddBtJsIu2n26ADuo42wPPqrdp_Vw08HFa2BJmH0ZPHSVxeUofpIxUoy4jwSnNZzwSrgLRlyeMOhYxnx2nBBRmNw43dV5ypphkd-5EXEEIFImMES4t68AdtbEuBpKdJ0yEvux6SOp2OmyaT9f3juCF6eym3Q_EB8ESdeUrk-v30iYIbOTzMwRE_J_LEre3d5E_HS0YdMuom_-el0Y-2CYnOmIeaI-_0X6hCoyLK=w966-h316-no" alt="數據色票"></p><p><img src="https://lh3.googleusercontent.com/y7kgnDGceI-stEN5mqX6eSpT16h2An675kVne2nliakhZhOjujMvoLSezmRmr9w-1nyr-miTrg6r6_dmiMhZvkceJJr7Hmjbykm0ef4LyNS9ukq4IXnmcHd7X0EM3Zm610JbQtnrisqpmaxfPQyP4llK-sF74m2WVCEfYZVr7ylU7cqYpxPTOtXIsSzGv7uCObvUirn-wPSruojg2mqXct9ouC5-XpI8WxGcJKmZJIbC2dxlPd2x5Vcl6fd7GasJle-9w0uOV93psbOX2yGRv93CQUFM5gLTuip87ZzINR6cf2x4Ze1e_A3KpT0SKYxCAtdxSYWyQZaWlO-IEitXs1uv9BG-Q7kHfYmAxoyfrNSJl-mHRk4eXHN9YJ2LHT0xIeWiirqPq9kVUHb9KW2yfQnHgzVd5Oiz_HNWFaSQd0DBs0XM4PNbyqYEYD9hWr_Zlk5jNSCU-UzLX9kNw4zNZdRJM8bk5Zi1uelU0pcfvgm5qgqmjkLKSZce-UmVua9q8MyOhVQNxkNDeg4CzVR3flS33fu_XyDIxMeOvG9AmDzS7owY97940mtocEVUMzpghG4fbhYaFZbMpvIwmVfN6eSqXNsOykYPyulIdQMjbgqwcmok94jk74TFvURFXSMVIR9y3C2pY9MHhnd4kO5PP-Sa_tsPWlUvJfsStT91F0QfTfsp7HJUDs8EIiH_izHJGsNiRUw1RFqxYS8PhIqRF1nbqcyf8jM_rbRAzk_4lEmS6HQoYBacOj9f=w966-h521-no" alt="插圖中積極使用這些顏色"></p><blockquote><p>心得：選這篇來閱讀主要的原因是裡面有許多視覺圖表的部分，他把圖表的總結寫在上方讓人很清楚地理解狀況，我覺得這點很值得學習，或許在系統 dashboard overview 的統計圖表部分可以採取類似的設計，讓使用者更能快速的掌握目標訊息。文字型的描述則能搭配同色系的插圖，讓內容更豐富，這點也令我想多多嘗試。</p></blockquote><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><ul><li><a href="https://blog.naver.com/nvr_design/221868269402" target="_blank" rel="noopener">제21대 국회의원선거 특집페이지 1차 오픈</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;繼上次分享 Naver study case 訂餐 APP 後感覺意猶未盡，剛好看到一個是關於第21屆國民議會選舉特別頁面的設計，覺得很有興趣，我們就來一起看看吧～&lt;/p&gt;
    
    </summary>
    
      <category term="UXUI" scheme="http://annilla.github.io/categories/UXUI/"/>
    
      <category term="Naver" scheme="http://annilla.github.io/categories/UXUI/Naver/"/>
    
    
      <category term="UX" scheme="http://annilla.github.io/tags/UX/"/>
    
      <category term="UI" scheme="http://annilla.github.io/tags/UI/"/>
    
      <category term="Naver" scheme="http://annilla.github.io/tags/Naver/"/>
    
  </entry>
  
  <entry>
    <title>Naver Study Case - Table Order APP</title>
    <link href="http://annilla.github.io/2020/04/19/UXUI/Naver-Study-Case-Table-Order-APP/"/>
    <id>http://annilla.github.io/2020/04/19/UXUI/Naver-Study-Case-Table-Order-APP/</id>
    <published>2020-04-18T16:00:00.000Z</published>
    <updated>2020-04-18T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>Naver 是韓國最大網際網路服務公司，台灣人比較熟悉的 Line 通訊軟體就是他旗下經營的子公司。最近發現 Naver 有一個設計部落格，裡面內容介紹各種旗下軟體的 UIUX，所以就挖了一篇出來多學習看看。</p><a id="more"></a><p>我找了一個有介紹後台的點餐 APP（後面簡稱 Table Order），畢竟目前主要工作還是對 B2B 的設計。</p><p><img src="https://lh3.googleusercontent.com/XG4gRzRuptmRaM_rWmwXSEzGo4CnHvGwjhxUPw8eg4rhoNaIgtpuh023h8KwE7lNtr0XvAFO4YVYgzBsoCkkw9ABtIaUFOcwTXj7lZIl1x5pUWXVH5CwOzPmv6xgsSZwQt1Pm55doNVDCvohThqOlznJwD1wpKGTYwKyT261OzZx6ybJ9FFcEL7NAhLcgcIjGR0wxFXaSL4K7Soyw4Iib1Oac015362LTVCHCWX-pxtv_Ar6B2LjsDvGvj-Z8rUGlB6xMQlvkzPowcVcPYjUm59o1JBjQkoIqkpH1sLeOEafSOrPipFN2xshdAKJ5pAHxVZvhw74TxzIiRVhO5E5WAuOUsdveb_wZb0uKDH9g8EdxGjQnbQxfV-3OfCLT9ObaJB82uxnpsuVVhC39PUsFDDL45PjoE-B0viLww17EP0DidMAXXHtFlIUtfUCqyQfBdkH2KBWisiAHo8KNeJq3LbU3bBCa5cMGwHxKRWfA1sdc-shLPooaOQ2f10nd_o_mUQrMlWD85gZhS_cjPJWQbRas5_iIqIe1QPKCN2I7fnClmV_TLm20reuI5En9G2nklXe2nj-xjGhoudeaAgXv7HIesR5uAx2lzgpP6IIJlrdzlPiWIJAV5UywMf2sMwB3QPXI5ozHyVDX0NzYV-8fcyDByk1TiHszfP6ikR_iGtp55FmPYcF7iXJM-HkWmRuczwRa2JVR8mkTC-7GhX075ejOMVY5WSA8COAMqCkhd27t3x3-MQfe1w=w966-h952-no" alt="Table Order APP"></p><iframe src="https://tv.naver.com/embed/9822927?autoPlay=true" frameborder="no" scrolling="no" marginwidth="0" marginheight="0" width="740" height="416" allow="autoplay" allowfullscreen></iframe><h1 id="拍攝-QRcode-gt-建立訂單-gt-付款"><a href="#拍攝-QRcode-gt-建立訂單-gt-付款" class="headerlink" title="拍攝 QRcode &gt; 建立訂單 &gt; 付款"></a>拍攝 QRcode &gt; 建立訂單 &gt; 付款</h1><p>Table Order 服務是一種智能訂購服務，可讓使用者點餐並通過商店中的QR碼完成付款。以下是用戶和老闆在過去幾個月進行的 Beta 測試中留下的部分評論。</p><blockquote><p>用戶：“可以不用等店員來點菜，食物就出來了！”</p><p>老闆：“我不喜歡點菜或服務，但我可以專心做飯。”</p></blockquote><p><img src="https://lh3.googleusercontent.com/3NC-L_SEbMTSRi6xUVcJ8pDfjJYWJGyD7rcoHsPWxPIU-hzd-oQ4Z85GdA1DwboM92eyz2x_yQO3DbOF9mC2THs3ntjo_5FIrUYU5s8BF-zaxCbW92e4S4284Y4KTJHFqNrGVioS373QtXTMxjGmxIcxHb9wlq_k8MqSXZ6YMy5xDlsggls1TaISTCCS9qRFM6auxEV2Po8BVP9aD8vKOyTZsL1L1EBkpMM7vdMXLGmRV7fZbRDF7S4OQgFKxXsvggTdqTdnA-LLQEdmVFCl7ELVyWSbOXwo2b8tLv62HHVfcjluzrJSF44Gczq1n0Yt4rosWJLrFx397nAbjNjm5zzLGVWkXU54WpEo5-GlvWGAWoA3tnrRqB_O7BtkPJ8w-7nsL02-5y5l6YHK65LzmsWs_hO0j24CAXWqSLibbMOSRpRD8V4x3P64igatKVeiT30wxjJOWBiMYw224NqO9ig_xptpi_tz_7BUuzRO2dfDNfTSrVWfzhqWaSeQmAQrmzxl3aoeArhQEoi09fbeVzfjcYembDJhuKcfU-ewalWQwG42asweXzhHIc4NCTxxpqaEP0cccCgF7jfRVuxy6gdflEIDYfF9B2ZOF-1giXFBaOICgsJfLHzxhzOS7ho5d1hQw7PgYOevl1SRZ0MK-OFm67JQwRzlAECWUmfM4EV-4-1Ms5acOOTNMOhVuy8U5HBUkklEsBRtGcJgyBP5l0VMZjnuqdd5OZdmTshQjTxWvfugi_rV1ZI6=w966-h329-no" alt="點餐流程"></p><h1 id="線上菜單的優勢是紙張菜單無法做到的"><a href="#線上菜單的優勢是紙張菜單無法做到的" class="headerlink" title="線上菜單的優勢是紙張菜單無法做到的"></a>線上菜單的優勢是紙張菜單無法做到的</h1><p>你是不是覺得去餐廳看菜單是一種無趣而令人擔憂的體驗嗎？ Table Order 的菜單易於選擇，因為它顯示了新菜單，老闆推薦的菜單以及在屏幕上已訂購的菜單。 從老闆的角度來看，這是一個很好的參考，因為使用者可以一目了然地看到訂單數據，例如哪個菜單受歡迎。此外，即使有一個菜單因價格波動要改變，也不用重新印紙本菜單或用黑筆劃掉，線上菜單可高度自營編輯也是一大優勢。</p><blockquote><p>中餐廳與意大利餐廳，菜單導航方式是否相同？</p></blockquote><p>回顧系統在餐廳點餐時的經歷，系統可以看到每種菜單的提供方式都大不相同。在某些商店中，菜單說明很重要，照片很重要，某些商店則可以快速瀏覽整個菜單。因此，用戶將有權力選擇要怎麼瀏覽這些商店的菜單導航體驗。</p><p>Table Order 的菜單順序設計，以能均勻儲存各商店的菜單信息為考量。另外，未來將以各種觀看方法（例如圖像的類型或描述的類型）添加客制的菜單，進一步考慮模板設計。</p><p><img src="https://lh3.googleusercontent.com/-fsfcXAcyh5ddOQfHj867nTtdyOyNtVWOEr2lL-7JN7yyOyknGGQn-GWbCodQtVVTxXBfnBcI1qZCxwv86o0bZgWWsSuTuH5HyQlOdQ7Ec4IhaQqRVlSlToYXjrar8HlxSvTSg0zyWRD8eEBIzmZNB9QKTaX_sEG9DRC0j651W2EAVDQGIj7qwsvQjKc2zn3fVv30O0_0f-ND0Q7jWmbrUDhMsP7LdX1wC1YRXvs2nnmVX2rg2N0uqsoxXW9Jn_201XH7Z9JQh7nZS3rRpYi4M1eRP21KfZvs1n-7tkTThPYkvdMteak7eyOreqykBayRzMpu9Z0YUmj24q6dDZopbOLj8qye4HmQmvp8259nZrgdwR4MuW_Xf_ORVJo7cO0_lIQIqaZx4allA55TrTSpJ_vaq1sFpbPvlBi5IMhiCHy94RritJxZQrTwYyqECjDra9MXfboTd-nPnaOU0as2kLcDUB5myUtGne1aE4mV6DaSp-F06UjznHO-DR_a19SAxoY31BoRC16FE4iiSo0pcCcCsAREshaw5E8w0J7_MNQDg2OUQHxqr5fa8ULb-Fs3Gk28NfDdbMtv4gbQT74lm9IJqtKb56mpNl72rrvFm_UfZt2eWCj0mYXyCjtfyJDxo6XJznW9HNl2d8CPcje975Quzx-TbEo8ft5TK3Z7uTyHZ0fFb__hPkcr0nYYmA2hWm8DB20Xr2UjxEKZLtZU8MXbww9H7iND6vz2rLZtoPL05-VJvG3uDvk=w656-h1280-no" alt="菜單導航"></p><h1 id="別人覺得這個菜單如何？"><a href="#別人覺得這個菜單如何？" class="headerlink" title="別人覺得這個菜單如何？"></a>別人覺得這個菜單如何？</h1><p>選擇餐館或咖啡館時最重要的事情之一就是評論。商店的評論是非常有用的信息，可通過他人的意見提供客觀信息。Table Order 提供了在菜單的基礎上查看用戶照片，評分，評論等的功能，而不是全面的商店體驗，因此使用者可以更詳細地查看評論 。同樣，可以通過自然滾動瀏覽評論照片，就像使用社群軟體瀏覽貼文一樣。</p><p>為了使這些審閱平台提供更多信息和更高質量，來自多個用戶的良好審閱至關重要。系統正在設計一種審查方法，該方法可以包含諸如食物量，味道和辣味等詳細信息，以便於編寫關鍵內容。</p><p><img src="https://lh3.googleusercontent.com/RKkqBEUWuVEVRWY7hUu1_i2WseuXlZeB643XDYhpkCDlQf-8xjtKyrEnkVZsGLOuBifUiYB1RM_RtgbnhRCI3VoaJBok41Og4PHT5jvanbhq_vEwIpZqMPNEEn6TdQOKBAPSg1OQDkXfQ4fhCpjEyNJwKjKO68yK88TVD1X827u52WNokHp7FYYlq8ZXdRZRJZXcK7cWyfhrYVJ6DzO8ZDwfspS6iOgtgD7lrZDyXNtIEYmcF9-G381XYq22podPK9Gyh-jxmStYFA20IwUCGHeC8rrlqZoUIyBfxGWBxlqjOmOutg3oW2O6DchlMcVhR6QoyuDDWWqvSde_z9AD-01v2fJbfD7RcwtUTZNq-mIPCiBqpz7mgrxhoOT7aU1I-t0RouHrcLcaU59kqRyV3X_YXEt3RbUKV523Z4QBnIc-xwW85_rq3mcmLQbpV-JA5lI20rd5lwVon8fIwBZyI5gNxhARDeoJyeArfnKqhgdKYG_CEox0kS2iv2SF6CtQ3C_HsYssMvmmmTsACvAbC_1Xrtdx3PKQ3OLN92j0eJPoXGKVAd_yrfTZsH6j9UE-bFfhKQpl5xVX21jO_6TYT0xjeGia_9pog1ZMqyrc4cjZECV8vjS7xwTdG-zvwG8LLBJlCBz12ccuZCiWPzFYByhNbaxTbYXFSZGl8yB1Jjs090psFaiX-U7AZnzO_g3oyIKlVXDa_V7ocSg9o2vVuVhoyc2QFoFgH5tk59mLrJbVDNS5skswGws=w966-h1174-no" alt="菜單評論"></p><h1 id="我的訂單進度，一目了然"><a href="#我的訂單進度，一目了然" class="headerlink" title="我的訂單進度，一目了然"></a>我的訂單進度，一目了然</h1><p>了解我的訂單進度以及何時下達包裹訂單也很重要。Table Order 上的訂單會提供狀態的通知，例如準備/烹飪/服務已完成以及帶有步驟的事故單，以便可以快速共享狀態。</p><p>另一方面，使用者可以隨時發出有關訂單狀態的回覆，但是什麼時候是寫回覆的最佳時間呢？如果太晚了，我記不清了，或者太快了，可能是在我吃完飯之前。根據 Naver 過往資料統計和 beta 測試中累積的統計信息，會依據每個公司的情況和特徵，對 Table Order 進行分類和應用，目前仍在測試最合適的模型。</p><p><img src="https://lh3.googleusercontent.com/BMQIcFt9651Rrd-9lzZn7tO9hNQNp6Do-RtyVlIBzHmcgNB3eELlccCeYEGVomRplhdME13vMPVeLezOZ-e3Nock63Rp65FqV_wbFEZ11qBRTgygORafgyNqRImMDIzQKVVuQjGhPtyj-BOiRA6nca6Ts2lwusweIo2DX6R6IxNcu3BDR0qKGZGnsnsmjwuF2bzWrduYmErABF4WfUYQYMxACZZuoyoDrhsbS3qYPrK3OrftJMLWRAVcpT1hQerhIy3RArBddk3U4ewufgVjcsI84eo6qkW7v7ooXueTaZ3YU-iFAhSAV9rLzuPDDcBbZjuxEfZCdbUneLd0w6R9ci-wf8r10jB-SMKD2qzhiP5KrltnmdH-cVg0IuqAvRDFFuRIRN_FI_WHRTtRVITqKDLbnkNdRAv8_kjn9O5igNZyoNwkdgvKQOudAmAoxWxePXK1QNpMK9slBPKcZKVaejVDeS5-qvF2WMIotc0bg61hPLOUHS1Z_0XQ57zXneKn2dcGpaba-9STslBY7Q8KDD9urUlzj8ORaBQLO-WRDh71WFrWb0rVQNMhPTuSI0KtNkgaKMT5htaxCsagFN1MPdUBIGp9rx4G88XKfzRnW7f1TnMCTDbOmtzOOLygc1j-2yXvOMIuD5_dRRdvhjZEDXJnfj57cJ0ve7Xv7ZktPq8fNnnIgqCfNCVbtXsg9iv9K-2jws63ER1iU4clVrakABfsPkquulMgZbSyE_NO81Y2m6o_JGeraypw=w966-h1269-no" alt="我的訂單"></p><h1 id="成為常客的捷徑，老闆提供的優惠券"><a href="#成為常客的捷徑，老闆提供的優惠券" class="headerlink" title="成為常客的捷徑，老闆提供的優惠券"></a>成為常客的捷徑，老闆提供的優惠券</h1><p>除了立即累積的 NaverPay Point 優惠外，系統還帶來了一些概念，例如使用者在外面看到的集點卷。家裡只有一張集點卷忘了帶出門嗎？如果使用者使用的是可自行集點的 Table Order，則不必擔心，當使用者獲得獎勵時會收到通知。另外，為每個商店收集優惠券和集點並立即查看它們很方便。將來會添加各種優惠券類型，因此請使用它們。</p><p><img src="https://lh3.googleusercontent.com/WSFepfEVuaKAvWJWR2X8vYZlrAILBL_ajqmSXpGklqfOQfiCiuHDX5t25oQw_ZY_gLnUfw7UbcwCneimk6SRU1m6XrdPKL0TyVk-SjcI3KHStRrEpKxparf_FaKAnLe3IgWaR9KyZPpYjwdMSEuuA_NiekgXZfi1sP6VSF7mjFKEKIVlw90VI_yXE0kiZ6QtRBSZkCfvcSOuH9_QQc2q7c6-q4xyZKPVM3le_A66kTv9MFKzyY5NbedDCCDUZdPKbmbQ9picATJgDst7c_b63G0i5f2Hmq4o268szVf51tg5kTAQZ-_nZX9llNJO3l1BbfVj-BTQFk6Uf-TCulcaWjqgUouPbmY3CL9R6KAd1r42MRUL5MEdHqrkSUbar5YazxQkJUcWvzk9DYcaorY5p5SGsZE3WfM2fzvaILKwZ5EOebDEJfvvwfa6-YZ6wzo7yk4ZTVLzxPc9Ds2d07ia09FBekCAP7Ax5dY_EofRMVtkplKNC5ddQsbBb3oOqXo15esKTwyXd6zfJuA_2G3K7dVx-_dG5oWyfGmL-psy4Ro5JApTiCeJfYtJsnNoc9wzxNGgRiMnqZGfxkXWrJRXQziJK2fUzCrGj9jLuiv09AbHaBfp0ByPsdXGlZi3KGjz52KmmtLioTwEjA1MBzBm9PU2rJwoI8nByJQY_-CAMN5gjTNQgGSyUO7Cknk80rglswbMVi5WzxTf__b4EEj_WOtqTvs26w-ljd8wpMY7d9kpWGmZfIxlpmk=w966-h1146-no" alt="集點 &amp; 優惠券"></p><h1 id="智能商店管理"><a href="#智能商店管理" class="headerlink" title="智能商店管理"></a>智能商店管理</h1><p>系統還透過合作夥伴後台創建了 Table Order 管理工具，以便老闆可以輕鬆地創建和操作上述各種功能。老闆可以通過設置“使用者操作時間”連接“菜單”來建立午餐、晚餐、工作日和周末等不同的菜單。</p><p>在工作時間內，老闆可以根據桌數或擁擠情況，選擇地操作餐桌座位兩種類型的 Card 視圖和 Table 視圖。通過此操作，老闆可以立即檢查商店的狀態，因此不必走到大廳，老闆可以專注於烹飪和操作。</p><p><img src="https://lh3.googleusercontent.com/HOZkhxmM_T3rUOzmXb8NUBYRIqPEcH9oQe9ReHKeGIwZlUZ1MDa1yKKo-balld5tBADi0YYh4D-LevCXRIJl79I0DNEYjHeQAgPHvqs9HlwPfAQAUKdQcTVNArHsIUWM5xOVbc_8cb6trQGSTdd-H_e_yd8quPuUOLZ9mIxCG4HHL6SndTEJjjTc3E7zy_uJKnkN87EsTjNMi2u5K4vGjK03TKxVlGBStLSfkghwN0DnhqAPoSNmdBjasfWAJSigYsH4_p8mMn1pnIBTk-Q_R6sesoybsBhj2eXdYmRFi-eQtdZipOpq2n2s25mQHolf5hZ9D_9paAe1sg-vv82MvOtrghERbUVhtuLh1SMWmyqR2JIVdqIy9lIUYBTRCMmR8wejvm-6P6VAHJxMqWYEzGHgtyaqCVG_txrWTseRg4ekf2HIIjdm46zwBOyA2fXHZAKm0V4ICG_fKnZuSRcR8OGpQ7P2E-o4SQz__4AyEQUFirpC5WGN4z4EFDChb5p4fdqdH5YV3keQd3eUe9Y0JrjvAllaGpUUcpNr9Odr4D8wecrmxHjvXm_ukM77330a_hJpSo-iWvrD9FoGqGNHMn_pFNevW7yuhb6b7FndHUa3u4FW2kuCK3LZAoLn0x8t2029mrfXjrsxUcaysbeQ0yAR-KltuGi9YWt-iEPil46xQCYySYODDniWKmb31hG5zwrNdod347Xq7rCKEoPsEfqdDOSR4CoYVFeCam6dKrOT-jNw8tZv-6jd=w622-h1280-no" alt="智能商店管理"></p><h1 id="線下品牌設計"><a href="#線下品牌設計" class="headerlink" title="線下品牌設計"></a>線下品牌設計</h1><p>提供老闆各式線下品牌宣傳設計，包含海報、名片、立牌等等。</p><p><img src="https://lh3.googleusercontent.com/FUSeSIVW_9rF-gzfpopRZrPcDgTWXA0yHE_0PuYwFijro10tkOgTx7H3dmfBqrvwA9oJebI8Ucho14c82n4d5-PCDsfzjUrvqBazJfv6fr-kZby0PaM2RlO_lzuuSvWkHaLQ6QtYwe9AS75YRQaSOBhoc-AAID7jzErDqCW4E0AO7DS6ysArYbhbYiOWNpP5McBwvTUw6SkBxupnszYhdL-B6_xLd-vYq98JLibrg2fJQEuMPp7uvUTHhthcJGo05hKurmN9hLqnZh1os1wTWLAS9kS0ngycLm0iEQ6p2MYXDaw7vfKCGpVa6Jd9oPp_7kGBmBDK8IXqZYKLXFdoUbIQOoXU1uCjzOF3hDEwJ6dzXKyUN2CP1AtPFlFZ4T3i2A3x6M_xNU0eVgyNQrJ3TCkI5JdHnOTeRZzhBDaEVk-Mxy6VcCo0o9EnROIHQYJSwHQOB0ds5Z2ERIRXUh9X4UMFrkTsMMbByaOubRlGTsR21kIDjNrfewHp9HS9JJUtfZICZX2vhy79h5-1g6YrFS5O3avUnm3NGN7Fe-OHyIgEhc29A5BCFYvu6Lp-3-RKKDmkejuZTQtrHahutPIoM2woVSUfU9ASJa6-CjIECU2BJ2du6H_gBSNyOZyqw6OXkngbsCrXRUrwST1ZF_46JK1LK0BLMmGOYoyDqfkPzEdU6m0JLcQdegZYLNMGYCT2gXmRpVvQOBkpZxeqfZeoYhPcf8tsAkO4zuDF1jfwBp0b02M83XSdudM=w966-h841-no" alt="線下品牌設計"></p><h1 id="總結"><a href="#總結" class="headerlink" title="總結"></a>總結</h1><p>下圖為使用者 &amp; 老闆在 Table Order 中得到的優勢圖。</p><p><img src="https://lh3.googleusercontent.com/dYB97w9E6EjZQmRoxE8LOGOqjM9C2KTOR73CeQt1C_8aj7TaQnMeqAUqnrOAAjiNDGyapNhM9cyjI4Ru7-AopcO10DLh_gSG87u1XDQrX7hbUd98iuuKqOabhWbAqNop1pd0QswoREPurXvzk3aDn4vbBW7Ko--xPATdisNbkVW9VccA41cGAoPRKoDKjXNu275F32w5zV71qtIF81FcsQNnW-di0CyL9GSxbVnUHXjfV65vujoPgKIobvcy8vsf9hZbrVzf0RoUQv6-zyeD93poFiSO7VmDxMsxLisAbXfDz175gxzn3AdPr9A8UAd7-xaZNiszrKtXv-G-E405SRUIxeoyRze4mULQmYdDauIadxU7CgUlKRbSR0GDNCVBlkxBWVaB0s4j6VZuDj5rRRezK3rRXnmZXhzH41K9aG7T6OhWtrh0QPoDwSTxvroD-v1ayI0IcRSQ1AG9oDst6uNGZNxlTFw_lEK3etpjbqDUVplxt-Ct10jgoAgMfFMI8MoMi8KhYCbtzHsqcLZMsdzp9c18g0_85fY72Sux9y5NLFmL6bws6BjFtAovPw2paxaWGivTdnnVffjLIRsbjGX33jAESJmq3b2HIpmapF08z2eeH5PMs-zWC-RjJ0p7gOSurC--efBJP8OJvqAoekj6EIC8OLGeRjtMCBOD6SoZNoP6K8_HUnFuYjd0ye0sR0A558hnTefdj67GAuKFPlwbZrZM2OqFU-PTTpiRyTYsqeXpklBgnd1X=w966-h516-no" alt="使用者 &amp; 老闆互惠"></p><blockquote><p>心得：看完後覺得能讓老闆自行設計不同時間顯示不同的客制菜單是很不容易的一件事，當中又要把操作簡易化，設計模板是很重要的一環。這些模板（自己常吃、新口味、老闆推薦、受歡迎的菜單…）雖然設計簡單卻能把大量想表達的訊息清楚地展示出來，非常值得學習。後台部分讓老闆自行選擇用 Card 或是 Table 模式瀏覽餐廳狀況也很清楚，方便隨時根據現場資訊做判斷處理。未來如果 Real-Time 生產有不同的方式可以切換瀏覽或許對控場人員來說更好。</p></blockquote><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><ul><li><a href="https://blog.naver.com/nvr_design/221668077330" target="_blank" rel="noopener">네이버 ‘테이블주문’을 소개합니다.</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Naver 是韓國最大網際網路服務公司，台灣人比較熟悉的 Line 通訊軟體就是他旗下經營的子公司。最近發現 Naver 有一個設計部落格，裡面內容介紹各種旗下軟體的 UIUX，所以就挖了一篇出來多學習看看。&lt;/p&gt;
    
    </summary>
    
      <category term="UXUI" scheme="http://annilla.github.io/categories/UXUI/"/>
    
      <category term="Naver" scheme="http://annilla.github.io/categories/UXUI/Naver/"/>
    
    
      <category term="UX" scheme="http://annilla.github.io/tags/UX/"/>
    
      <category term="UI" scheme="http://annilla.github.io/tags/UI/"/>
    
      <category term="Naver" scheme="http://annilla.github.io/tags/Naver/"/>
    
  </entry>
  
  <entry>
    <title>Deep Learning by Python - Use Keras-Sequential Model Example</title>
    <link href="http://annilla.github.io/2020/03/22/Python/Deep-Learning-by-Python-Use-Keras-Sequential-Model-Example/"/>
    <id>http://annilla.github.io/2020/03/22/Python/Deep-Learning-by-Python-Use-Keras-Sequential-Model-Example/</id>
    <published>2020-03-21T16:00:00.000Z</published>
    <updated>2020-03-21T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>model API 分為 Sequential （循序型） 和 Functional（多功能型）。</p><ol><li>Sequential API: 用於單輸入單輸出，簡單的 model 由簡單的 layers 串接組成。</li><li>Functional API: 用於多輸入多輸出，layers 可有分支並可共用而組成複雜模型。</li></ol><p>簡單的keras 的工作流程如下:</p><ol><li>創建 model</li><li>創建和添加 layer 到 model</li><li>compile (編譯) model</li><li>Train model</li><li>訓練完成後可用於 prediction (預測) 或 evaluation (評估)</li></ol><p>本篇只是測試安裝環境是否成功，所以只會練習到工作流程第 4 點。</p><a id="more"></a><h1 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h1><p>DL (Deep Learning) 是擁有多個且多層神經元之 NN (Neural Network 神經網路)，而所謂的多層通常是指隱藏層（Hidden Layer）。DL 要用幾層、每層要有幾個節點（神經元）、每個節點間要如何相連、要採用什麼激勵函數等（統稱網路架構），都是由我們決定，因此可以說是 NN 的天賦；而權重與誤差則是透過大量資料自動學習而得，可以視為是 NN 後天的努力結果。</p><p><img src="https://miro.medium.com/proxy/1*5egrX--WuyrLA7gBEXdg5A.png" alt="Deep Learning"></p><h1 id="此篇要練習的完整程式碼"><a href="#此篇要練習的完整程式碼" class="headerlink" title="此篇要練習的完整程式碼"></a>此篇要練習的完整程式碼</h1><p>這次要練習的完整程式碼如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 引入要用的函數</span></span><br><span class="line"><span class="keyword">from</span> keras.models <span class="keyword">import</span> Sequential</span><br><span class="line"><span class="keyword">from</span> keras.layers <span class="keyword">import</span> Dense, Activation</span><br><span class="line"><span class="keyword">from</span> keras.utils <span class="keyword">import</span> np_utils</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment"># 準備測試資料</span></span><br><span class="line">data = np.random.random((<span class="number">1000</span>,<span class="number">784</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 準備要逼近的目標資料</span></span><br><span class="line">labels = np.random.randint(<span class="number">10</span>, size=(<span class="number">1000</span>,<span class="number">1</span>))</span><br><span class="line">labels = np_utils.to_categorical(labels,<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 創建 model</span></span><br><span class="line">model = Sequential()</span><br><span class="line"><span class="comment"># 創建和添加 layer 到 model</span></span><br><span class="line">model.add(Dense(<span class="number">64</span>, activation=<span class="string">'relu'</span>, input_dim=<span class="number">784</span>))</span><br><span class="line">model.add(Dense(<span class="number">64</span>, activation=<span class="string">'relu'</span>))</span><br><span class="line">model.add(Dense(<span class="number">10</span>, activation=<span class="string">'softmax'</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># compile (編譯) model</span></span><br><span class="line">model.compile(optimizer=<span class="string">'rmsprop'</span>,</span><br><span class="line">              loss=<span class="string">'categorical_crossentropy'</span>,</span><br><span class="line">              metrics=[<span class="string">"accuracy"</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># Train model</span></span><br><span class="line">model.fit(data, labels)</span><br></pre></td></tr></table></figure><p>以下我們分段解說程式碼。</p><h1 id="引入要用的函數"><a href="#引入要用的函數" class="headerlink" title="引入要用的函數"></a>引入要用的函數</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> keras.models <span class="keyword">import</span> Sequential</span><br><span class="line"><span class="keyword">from</span> keras.layers <span class="keyword">import</span> Dense, Activation</span><br><span class="line"><span class="keyword">from</span> keras.utils <span class="keyword">import</span> np_utils</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br></pre></td></tr></table></figure><ul><li>keras.models: 從 Keras 引入 models（模型），Sequential 是 linear stack of layers（多個網絡層的線性堆疊），單輸入單輸出。</li><li>keras.layers: 從 Keras 引入 layers（層）的 Dense 類型。Dense 類型的層（layers）為具有64個神經元。</li><li>keras.utils: 從 Keras 引入 utils（工具）的 np_utils 函數。</li><li>np 即 numpy，而 NumPy 是 Python 語言的一個擴充程式庫。</li></ul><h1 id="準備測試資料"><a href="#準備測試資料" class="headerlink" title="準備測試資料"></a>準備測試資料</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data = np.random.random((<span class="number">1000</span>,<span class="number">784</span>))</span><br></pre></td></tr></table></figure><p>建立一組測試資料，使用 np.random.random 在 [0, 1) 中產生隨機數，DATA 為 1000 行 784 列（1000x784）的陣列。</p><h1 id="準備要逼近的目標資料"><a href="#準備要逼近的目標資料" class="headerlink" title="準備要逼近的目標資料"></a>準備要逼近的目標資料</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">labels = np.random.randint(<span class="number">10</span>, size=(<span class="number">1000</span>,<span class="number">1</span>))</span><br><span class="line">labels = np_utils.to_categorical(labels,<span class="number">10</span>)</span><br></pre></td></tr></table></figure><ul><li><a href="https://www.itread01.com/content/1541532849.html" target="_blank" rel="noopener">numpy.random.randint</a>是矩陣變數，其語法為 numpy.random.randint(low, high=None, size=None)。labels 結果 為 1 維隨機整數組（1000x1）ex: <code>array([0],[8],[6],…[9])</code>，因沒有 high 的值， 數值隨機介於[0,10)。</li><li><a href="https://www.itread01.com/content/1549602019.html" target="_blank" rel="noopener">to_categorical</a> 將類別向量轉換为二進制（只有0和1）的矩陣類型，原來 labels 為 1 維隨機整數組（1000x1），to_categorical 按照 10 個類別將這 1 維隨機整數組的每個值都轉換為矩陣裡的一個行向量。</li></ul><p>舉例來說，<code>array([0],[8],[6],…[9])</code>的1維整數組，to_categorical 按照 10 個類別將 array 轉換為<br>array<br>[[1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]<br> [0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]<br> [0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]…<br> [0. 0. 0. 0. 0. 0. 0. 0. 0. 1.]]</p><h1 id="創建和添加-layer-到-model"><a href="#創建和添加-layer-到-model" class="headerlink" title="創建和添加 layer 到 model"></a>創建和添加 layer 到 model</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">model = Sequential()</span><br><span class="line">model.add(Dense(<span class="number">64</span>, activation=<span class="string">'relu'</span>, input_dim=<span class="number">784</span>))</span><br><span class="line">model.add(Dense(<span class="number">64</span>, activation=<span class="string">'relu'</span>))</span><br><span class="line">model.add(Dense(<span class="number">10</span>, activation=<span class="string">'softmax'</span>))</span><br></pre></td></tr></table></figure><ul><li>定義Sequential模型，並model.add添加層。</li><li>此範例第一步添加 Dense 類型的層（layers）為具有64個神經元。由於模型需要知道它所期望的輸入尺寸，順序模型中的第一層需要接收關於其輸入尺寸的參數信息（Dense支持通過參數 input_dim 指定輸入參數信息，而某些 3D 時序層支持 input_dim 和 input_length 參數。</li><li>ReLU為激勵函數（Activation Function）之一，<a href="https://mropengate.blogspot.com/2017/02/deep-learning-role-of-activation.html" target="_blank" rel="noopener">詳見此</a>。</li><li>Softmax為激勵函數（Activation Function）之一，<a href="https://blog.csdn.net/bitcarmanlee/article/details/82320853" target="_blank" rel="noopener">詳見此</a>。</li></ul><h1 id="compile-編譯-model"><a href="#compile-編譯-model" class="headerlink" title="compile (編譯) model"></a>compile (編譯) model</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">model.compile(optimizer=<span class="string">'rmsprop'</span>,</span><br><span class="line">              loss=<span class="string">'categorical_crossentropy'</span>,</span><br><span class="line">              metrics=[<span class="string">"accuracy"</span>])</span><br></pre></td></tr></table></figure><ul><li>模型在使用前必須編譯模型（model.compile）</li><li>Optimizer (優化器)為 RMSprop：優化器目的是建立優化模型，優化目標函數並訓練出最好的模型，其功能是通過改善訓練方式，來最小化 (或最大化) 損失函數。RMSprop，<a href="https://zhuanlan.zhihu.com/p/34230849" target="_blank" rel="noopener">詳見此</a></li><li>loss (損失函數)為 categorical_crossentropy：損失函數基本上可以分成兩個面向(分類和回歸)，但都是希望最小化損失。loss(損失)就是實際和預測的殘差，損失愈小愈好。categorical_crossentropy，<a href="https://blog.csdn.net/legalhighhigh/article/details/81409551" target="_blank" rel="noopener">詳見此</a></li><li>metric (度量函數) 來評估模型性能，’accuracy’為評估指標。<a href="https://www.cnblogs.com/weiyinfu/p/9783776.html" target="_blank" rel="noopener">詳見此</a></li></ul><h1 id="Train-model"><a href="#Train-model" class="headerlink" title="Train model"></a>Train model</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">model.fit(data, labels)</span><br></pre></td></tr></table></figure><p>最後設定參數輸入 data 與目標 labels，來 model.fit，也就是訓練模型。<br>執行結果，如圖表示以 TensorFlow 作為引擎使用，損失率為 2.3494，準確度為 0.0920。</p><p><img src="https://cdn-images-1.medium.com/max/1600/1*dIwMENM7YtaYqdFOOYnQvw.png" alt="執行結果"></p><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><ul><li><p><a href="https://laoweizz.blogspot.com/2018/12/keras.html" target="_blank" rel="noopener">Keras 簡介</a></p></li><li><p><a href="https://medium.com/@baubibi/%E9%80%9F%E8%A8%98ai%E8%AA%B2%E7%A8%8B-%E6%B7%B1%E5%BA%A6%E5%AD%B8%E7%BF%92%E5%85%A5%E9%96%80-%E4%B8%80-68e27912ce30" target="_blank" rel="noopener">速記AI課程－深度學習入門（一）</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;model API 分為 Sequential （循序型） 和 Functional（多功能型）。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Sequential API: 用於單輸入單輸出，簡單的 model 由簡單的 layers 串接組成。&lt;/li&gt;
&lt;li&gt;Functional API: 用於多輸入多輸出，layers 可有分支並可共用而組成複雜模型。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;簡單的keras 的工作流程如下:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;創建 model&lt;/li&gt;
&lt;li&gt;創建和添加 layer 到 model&lt;/li&gt;
&lt;li&gt;compile (編譯) model&lt;/li&gt;
&lt;li&gt;Train model&lt;/li&gt;
&lt;li&gt;訓練完成後可用於 prediction (預測) 或 evaluation (評估)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;本篇只是測試安裝環境是否成功，所以只會練習到工作流程第 4 點。&lt;/p&gt;
    
    </summary>
    
      <category term="Python" scheme="http://annilla.github.io/categories/Python/"/>
    
    
      <category term="Python" scheme="http://annilla.github.io/tags/Python/"/>
    
      <category term="Deep Learning" scheme="http://annilla.github.io/tags/Deep-Learning/"/>
    
      <category term="Keras" scheme="http://annilla.github.io/tags/Keras/"/>
    
      <category term="TensorFlow" scheme="http://annilla.github.io/tags/TensorFlow/"/>
    
  </entry>
  
</feed>
