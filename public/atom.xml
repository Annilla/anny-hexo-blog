<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Anny Chang - F2E &amp; UI Designer</title>
  
  <subtitle>Design thinking is EVERYWHERE</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://annilla.github.io/"/>
  <updated>2018-11-03T16:00:00.000Z</updated>
  <id>http://annilla.github.io/</id>
  
  <author>
    <name>Anny Chang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Anny Chang&#39;s Resume - 履歷</title>
    <link href="http://annilla.github.io/3017/12/03/Resume/"/>
    <id>http://annilla.github.io/3017/12/03/Resume/</id>
    <published>3017-12-02T16:00:00.000Z</published>
    <updated>2018-11-03T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>My resume.</p><a id="more"></a><h1 id="Professional-Info"><a href="#Professional-Info" class="headerlink" title="Professional Info"></a>Professional Info</h1><h2 id="專長"><a href="#專長" class="headerlink" title="專長"></a>專長</h2><ul><li><p>設計 <code>UI</code> 介面、 <code>RWD</code> 網頁製作、 <code>SPA</code> 程式撰寫</p></li><li><p>擅用設計 <code>UI</code> 軟體（<code>Sketch</code>, <code>Adobe XD</code>, <code>Illustrator</code>, <code>Photoshop</code>）</p></li></ul><h2 id="研討會-工作坊"><a href="#研討會-工作坊" class="headerlink" title="研討會 / 工作坊"></a>研討會 / 工作坊</h2><table><thead><tr><th>時間</th><th>研討會 / 工作坊</th><th>分享主題</th></tr></thead><tbody><tr><td>2017.08</td><td>Kingston 2017 Mobile Team Workshop</td><td><a href="https://speakerdeck.com/annilla/use-webpack-plus-vue-loader-in-vs2017" target="_blank" rel="noopener">Use Webpack + Vue-Loader in VS2017</a></td></tr><tr><td>2016.11</td><td>前端魔法師十一月份小聚</td><td><a href="https://speakerdeck.com/annilla/facebook-instant-articles-ce-shi-dao-fa-bu" target="_blank" rel="noopener">Facebook Instant Articles - 測試到發布</a></td></tr></tbody></table><h2 id="證照"><a href="#證照" class="headerlink" title="證照"></a>證照</h2><table><thead><tr><th>時間</th><th>證書</th></tr></thead><tbody><tr><td>2017.03</td><td>國際 TOEIC 藍色證書 765分</td></tr><tr><td>2015.11</td><td>國家技術士網頁設計丙級證照</td></tr><tr><td>2014.12</td><td>國際 ACA Illustrator CS6 證照</td></tr><tr><td>2013.12</td><td>Adobe Master Of Rich Media Web Design Courses 證書</td></tr><tr><td>2013.06</td><td>中華民國斐陶斐榮譽學會榮譽會員 （碩士應屆第一名）</td></tr><tr><td>2013.03</td><td>國際 ACA Flash CS6 證照</td></tr><tr><td>2013.03</td><td>國際 ACA Dreamweaver CS6 證照</td></tr><tr><td>2012.11</td><td>國際 ACA Photoshop CS6 證照</td></tr><tr><td>2011.12</td><td>Adobe Digital Graphic Design Courses 證書</td></tr><tr><td>高中</td><td>全民英檢中級 證書</td></tr></tbody></table><h3 id="Adobe-Badges-國際ACA認證獎章"><a href="#Adobe-Badges-國際ACA認證獎章" class="headerlink" title="Adobe Badges (國際ACA認證獎章)"></a><a href="https://www.youracclaim.com/users/chiao-ni-chang" target="_blank" rel="noopener">Adobe Badges (國際ACA認證獎章)</a></h3><h2 id="受訓"><a href="#受訓" class="headerlink" title="受訓"></a>受訓</h2><table><thead><tr><th>時間</th><th>課程</th></tr></thead><tbody><tr><td>2018.10</td><td>29761 使用微軟 T-SQL 查詢資料</td></tr><tr><td>2017.09</td><td>Skilltree JavaScript 實務測試新手班 第三梯</td></tr><tr><td>2017.06</td><td>網站測試開發 with WebdriverIO 實戰講堂</td></tr><tr><td>2014.11</td><td>色彩溝通立即上手</td></tr><tr><td>2014.10</td><td>網路活動創意規劃與會員行銷管理</td></tr><tr><td>2014.09</td><td>如何提升網路關鍵字行銷的成效</td></tr><tr><td>2014.09</td><td>JR-基層管理幹部工作關係與團隊力提昇</td></tr><tr><td>2014.08</td><td>eDM電子郵件行銷及電子報經營</td></tr><tr><td>2014.08</td><td>JM-基層幹部工作改善與執行力提昇培訓</td></tr></tbody></table><h1 id="Work​-Experience​​​"><a href="#Work​-Experience​​​" class="headerlink" title="Work​ Experience​​​"></a>Work​ Experience​​​</h1><table><thead><tr><th>時間</th><th>公司</th><th>職稱</th></tr></thead><tbody><tr><td>2017.06.12 - NOW</td><td>Kingston Technology</td><td>UI Designer &amp; Front-end Developer</td></tr><tr><td>2015.04.06 - 2017.06.11</td><td>JUKSY 街星</td><td>網頁UI設計 / 網頁前端工程師</td></tr><tr><td>2013.07.01 - 2015.04.03</td><td>微璽科技股份有限公司</td><td>商業設計 / 網頁UI設計</td></tr></tbody></table><h1 id="Education"><a href="#Education" class="headerlink" title="Education"></a>Education</h1><table><thead><tr><th>時間</th><th>學校</th></tr></thead><tbody><tr><td>2011 - 2013</td><td>國立台灣師範大學, 數學系碩士班數學教育組</td></tr><tr><td>2007 - 2011</td><td>國立台灣師範大學, 數學系學士班</td></tr><tr><td>2004 - 2007</td><td>中山女高</td></tr></tbody></table><h1 id="Skills"><a href="#Skills" class="headerlink" title="Skills"></a>Skills</h1><ul><li><p>SKETCH</p></li><li><p>ADOBE XD</p></li><li><p>PHOTOSHOP</p></li><li><p>ILLUSTRATOR</p></li><li><p>VSCODE / VS2017</p></li><li><p>GITHUB</p></li><li><p>SOURCETREE</p></li><li><p>NPM</p></li><li><p>WEBPACK / GULP</p></li></ul><h1 id="Languages"><a href="#Languages" class="headerlink" title="Languages"></a>Languages</h1><ul><li><p>HTML / PUG</p></li><li><p>CSS / SASS(SCSS) / STYLUS / POSTCSS</p></li><li><p>JS / JQUERY / VUE / ES6</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;My resume.&lt;/p&gt;
    
    </summary>
    
      <category term="Resume" scheme="http://annilla.github.io/categories/Resume/"/>
    
    
  </entry>
  
  <entry>
    <title>Anny Chang&#39;s Portfolio - 作品集</title>
    <link href="http://annilla.github.io/3017/12/01/Portfolio/"/>
    <id>http://annilla.github.io/3017/12/01/Portfolio/</id>
    <published>3017-11-30T16:00:00.000Z</published>
    <updated>2017-12-02T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>My portfolio.</p><a id="more"></a><h1 id="Design-Collection"><a href="#Design-Collection" class="headerlink" title="Design Collection"></a>Design Collection</h1><h2 id="Behance-https-www-behance-net-annilla"><a href="#Behance-https-www-behance-net-annilla" class="headerlink" title="Behance: https://www.behance.net/annilla"></a>Behance: <a href="https://www.behance.net/annilla" target="_blank" rel="noopener">https://www.behance.net/annilla</a></h2><h1 id="Web-Collection"><a href="#Web-Collection" class="headerlink" title="Web Collection"></a>Web Collection</h1><table><thead><tr><th>作品</th><th>分類</th><th>內容</th></tr></thead><tbody><tr><td>網頁</td><td>公司</td><td>Reflow Supplement Page</td></tr><tr><td>系統</td><td>公司</td><td>System Profile Management (Web)</td></tr><tr><td>系統</td><td>公司</td><td>NXT (Web)</td></tr><tr><td>系統</td><td>公司</td><td>Workflow Compliance (Web)</td></tr><tr><td>網頁</td><td>公司</td><td>Kingston Mobile Team Portal</td></tr><tr><td>系統</td><td>公司</td><td>B2B (Web)</td></tr><tr><td>系統</td><td>公司</td><td>Material Requirement Planning (Web)</td></tr><tr><td>系統</td><td>公司</td><td>Empolyee Authentication Service (Web)</td></tr><tr><td>系統</td><td>公司</td><td>Notes SignOff APP (Mobile Web App)</td></tr><tr><td>系統</td><td>公司</td><td>Quotation System (Web &amp; iOS App Design)</td></tr><tr><td>網站</td><td>綜合</td><td><a href="https://www.juksy.com/" target="_blank" rel="noopener">JUKSY 街星</a></td></tr><tr><td>網頁</td><td>展覽</td><td><a href="https://www.juksy.com/events/avengersstation" target="_blank" rel="noopener">《復仇者聯盟》世界巡迴展</a></td></tr><tr><td>網頁</td><td>電影</td><td><a href="https://www.juksy.com/events/MMPR2017" target="_blank" rel="noopener">《金剛戰士》Power Rangers GO GO！</a></td></tr><tr><td>網頁</td><td>名人</td><td><a href="https://www.juksy.com/events/idareyoujune" target="_blank" rel="noopener">放肆越限 ● I Dare You</a> - 陳建州 &amp; 四葉草</td></tr><tr><td>網頁</td><td>名人</td><td><a href="https://www.juksy.com/events/dope2017may" target="_blank" rel="noopener">回家才DOPE ● Home Sweet Home</a> - 兄弟本色 &amp; 邵雨薇</td></tr><tr><td>網頁</td><td>名人</td><td><a href="https://www.juksy.com/events/northsouth2017April" target="_blank" rel="noopener">南北潮什麼 / From North to South</a> - 盧廣仲 &amp; 柯佳嬿</td></tr><tr><td>網頁</td><td>名人</td><td><a href="https://www.juksy.com/events/outofcontrol2017" target="_blank" rel="noopener">瘋面人物 / Out of control</a> - 許瑋甯 &amp; 吳慷仁</td></tr><tr><td>網頁</td><td>名人</td><td><a href="https://www.juksy.com/events/month1702valentine/" target="_blank" rel="noopener">我單故我在 Valentine, So what?</a> - 藍正龍</td></tr><tr><td>網頁</td><td>名人</td><td><a href="https://www.juksy.com/events/month1701F5reborn" target="_blank" rel="noopener">人生F5鍵 Reborn</a> - 瑤瑤</td></tr><tr><td>網頁</td><td>名人</td><td><a href="https://www.juksy.com/events/month1612waittoaction" target="_blank" rel="noopener">扳勢回潮　等不及的蓄勢待發！ Wait  to action</a> - 吳建豪</td></tr><tr><td>網頁</td><td>電影</td><td><a href="https://www.juksy.com/events/assassin2016creed" target="_blank" rel="noopener">刺客教條 12/28(三)跨年最強檔</a></td></tr><tr><td>網頁</td><td>名人</td><td><a href="https://www.juksy.com/events/month1611donjudge" target="_blank" rel="noopener">Don’t Judge me！玩跳．TONE</a> - 安心亞</td></tr><tr><td>網頁</td><td>電影</td><td><a href="https://www.juksy.com/events/fantastic2016beasts" target="_blank" rel="noopener">《怪獸與牠們的產地》JUKSY特別企劃</a></td></tr><tr><td>網頁</td><td>廠商</td><td><a href="https://www.juksy.com/events/brand201611angeliapets" target="_blank" rel="noopener">耍YOUNG無極限，玩酷做自己</a> - Angelia  &amp;  Pets</td></tr><tr><td>網頁</td><td>廠商</td><td><a href="https://www.juksy.com/events/brand201611samsung360" target="_blank" rel="noopener">精彩視界 一觸可及</a> - SAMSUNG</td></tr><tr><td>網頁</td><td>廠商</td><td><a href="https://www.juksy.com/events/brand201611fashioncity" target="_blank" rel="noopener">分享屬於你的[城市時尚]─你的城市‧由你演繹</a> - SAMSUNG 打卡分享照片</td></tr><tr><td>網頁</td><td>名人</td><td><a href="https://www.juksy.com/events/month1610bromance" target="_blank" rel="noopener">The Bromance！絕對合拍</a> - 蕭敬騰</td></tr><tr><td>網頁</td><td>名人</td><td><a href="https://www.juksy.com/events/month1609intoblack" target="_blank" rel="noopener">大勢黑潮 INTO BLACK</a> - SPEXIAL</td></tr><tr><td>網頁</td><td>電影</td><td><a href="https://www.juksy.com/events/train2016zombie" target="_blank" rel="noopener">屍速列車 屍裡逃生</a></td></tr><tr><td>網頁</td><td>遊戲</td><td><a href="https://www.juksy.com/events/pokemon2016go" target="_blank" rel="noopener">成神之路有你有我！寶可夢全攻略</a></td></tr><tr><td>網頁</td><td>名人</td><td><a href="https://www.juksy.com/events/month1608hithot" target="_blank" rel="noopener">熱浪來襲HITHOT</a> - 劉以豪</td></tr><tr><td>網頁</td><td>穿搭</td><td><a href="https://www.juksy.com/events/summer2016girlstyle" target="_blank" rel="noopener">熱辣無極限！2016年夏日潮妞穿搭公式</a></td></tr><tr><td>網頁</td><td>穿搭</td><td><a href="https://www.juksy.com/events/summer2016menstyle" target="_blank" rel="noopener">型到出火！體感41度的TO DO LIST</a></td></tr><tr><td>網頁</td><td>投票活動</td><td>JUKSY超新星（連結失效）</td></tr><tr><td>網頁</td><td>名人</td><td>用歌聲唱出最真的自己（連結失效） - 汪小敏</td></tr><tr><td>網站</td><td>公司</td><td><a href="http://www.taxxtron-tayu.com/" target="_blank" rel="noopener">京達國際股份有限公司</a></td></tr><tr><td>網站</td><td>購物</td><td><a href="http://web.ntnu.edu.tw/~60040004S/" target="_blank" rel="noopener">LOVEBABY讓您在家也能呵護寶貝</a></td></tr><tr><td>網站</td><td>研討會</td><td><a href="http://tame.tw/pme36/" target="_blank" rel="noopener">PME36</a></td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;My portfolio.&lt;/p&gt;
    
    </summary>
    
      <category term="Portfolio" scheme="http://annilla.github.io/categories/Portfolio/"/>
    
    
      <category term="Portfolio" scheme="http://annilla.github.io/tags/Portfolio/"/>
    
      <category term="作品集" scheme="http://annilla.github.io/tags/%E4%BD%9C%E5%93%81%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>Google Material Studies - Rally</title>
    <link href="http://annilla.github.io/2019/04/05/UXUI/Google-Material-Studies-Rally/"/>
    <id>http://annilla.github.io/2019/04/05/UXUI/Google-Material-Studies-Rally/</id>
    <published>2019-04-04T16:00:00.000Z</published>
    <updated>2019-04-04T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>Material Guildline 應該很多設計師都閱讀過 N 遍了，但要設計時如何在框架下做到客制這件事應該還是很疑惑。官網上提出了幾個業界的實例分享，這點讓我很有興趣，所以接下來我會一一對這些案例做介紹。因為我上班做的案子比較多是系統類的設計，所以我第一個想介紹比較類似的是 Rally 這個案例。下面內容會一邊介紹，一邊穿插自己在職場上的一些心得或想法。</p><a id="more"></a><h1 id="案例背景"><a href="#案例背景" class="headerlink" title="案例背景"></a>案例背景</h1><p>Rally 是一個管理財務的 APP，它會追蹤使用者的花費習慣並產生預測和適當的警示通知。Rally 是設計來呈現大量且密集的資訊，讓使用者可管理和研究資料模式。</p><h3 id="數據性導向之美-Data-driven-aesthetic"><a href="#數據性導向之美-Data-driven-aesthetic" class="headerlink" title="數據性導向之美 (Data-driven aesthetic)"></a>數據性導向之美 (Data-driven aesthetic)</h3><p>UI 採用暗灰色提高質感，並用亮色系凸顯資料。在資料與背景顏色高對比之下，讓使用者更容易閱讀 APP 內的圖表。</p><p><img src="https://storage.googleapis.com/spec-host-backup/mio-design%2Fassets%2F16CNi69TWdOluvYdoeNwd5QK4P5nkE48-%2Fcasestudies-rally-brandattributes.png" alt="Rally UI" title="Rally UI"></p><p>UI 設計專注在查看、研究和了解資料。圖表呈現在儀表板上，讓使用者查看花費摘要和單一交易的細節。此 UI 設計透過排版、顏色和形狀的凸顯，讓畫面是密集且直覺的。</p><blockquote><p>心得：蠻喜歡這樣的暗色背景搭亮色的配色，但因目前公司的一般使用者還是比較習慣白色背景的配色模式，所以暗色背景的搭配在考慮時間和緊急度下，我自己是只敢用在自己小組內部用的專案上，比較沒有時間上的壓力。</p></blockquote><h1 id="產品架構"><a href="#產品架構" class="headerlink" title="產品架構"></a>產品架構</h1><p>Rally 架構是層級式的，讓使用者透過不同分類查看他們的財務。</p><p>內容根據個人財務區分不同的 sections，像是帳戶、預算、帳單。首頁著重在讓使用者前往這些 sections 的導向。</p><h3 id="導覽列"><a href="#導覽列" class="headerlink" title="導覽列"></a>導覽列</h3><p>因為 Rally 專注在呈現和描述不同面向的財務資訊，所以如何讓使用者能輕易的在這些sections 移動是很重要的。Rally 有一個固定位置的導覽列讓使用者能方便的切換 sections。在桌機和平板，Rally 使用的是直列式的導覽列。在手機，則是用橫向標籤的方式。這項的導航模式很理想，雖然它們總是在屏幕上，但佔用的空間非常小。</p><p><img src="https://storage.googleapis.com/spec-host-backup/mio-design%2Fassets%2F1PIJeS6GJLIExYX9mWOmb7UzWB0-Nl5VB%2Fcasestudies-family-rally.png" alt="Rally 導覽列" title="Rally 導覽列"></p><p>在直列式的導覽列中，每個目的地會用一個獨特的 icon 呈現。當 section 被點選的時候，icon 就會變亮且標題會出現在 icon 下方。</p><p><img src="https://storage.googleapis.com/spec-host-backup/mio-design%2Fassets%2F1-qsgxAELdMrSDPRKV-l-N_2dW5fYeljj%2Fcasestudies-rally-rail.png" alt="直列式的導覽列" title="直列式的導覽列"></p><p>在橫向標籤導覽中，當 section 被點選的時候，icon 就會變亮且標題會出現在 icon 右方，其他 icon 將會適當的移動位置。</p><p><img src="https://storage.googleapis.com/spec-host-backup/mio-design%2Fassets%2F1dHfpA4R1RVHn5zRSxInMllujv_C7pxv7%2Fcasestudies-rally-tabs.png" alt="橫向標籤導覽" title="橫向標籤導覽"></p><blockquote><p>心得：這邊如果導覽項目數目很少，這樣設計ok。但要注意往後的擴充性，若是 section 的數目增加是否要增加 sub section，手機上方 tab 的空間是否會不夠呈現，這些都是可能會碰到的問題。</p></blockquote><h1 id="排版"><a href="#排版" class="headerlink" title="排版"></a>排版</h1><p>Rally 使用 12 grid system。</p><video src="https://storage.googleapis.com/spec-host-backup/mio-design%2Fassets%2F1lAQUZTvSoen3matP1gpDJqVpKnZpARy6%2Fcasestudies-rally-grid-1a.mp4" autoplay loop style="max-width: 100%; display: block; margin-left: auto; margin-right: auto;">your browser does not support the video tag</video><h3 id="視覺層級"><a href="#視覺層級" class="headerlink" title="視覺層級"></a>視覺層級</h3><p>Rally 使用色彩或紗幕來區分視覺上的層級。</p><p>舉例：當使用者滑動下方資料的時候，為確保統計圖固定在上方，使用不同的色彩來區分視覺層級。</p><video src="https://storage.googleapis.com/spec-host-backup/mio-design%2Fassets%2F1dq6I1nDovqvUydVHH5jTeI9VA6ftfz7H%2Frally-flow1-170808-casestudies-rally-elevation-1a.mp4" autoplay loop style="max-width: 100%; display: block; margin-left: auto; margin-right: auto;">your browser does not support the video tag</video><p>舉例：當有 popup 出現時，背景使用紗幕霧化背景。</p><p><img src="https://storage.googleapis.com/spec-host-backup/mio-design%2Fassets%2F1eBiwYfz1_8oSLrlWN_9uNjA_TGVqRBS2%2Fcasestudies-rally-elevation-scrim.png" alt="霧化背景" title="霧化背景"></p><blockquote><p>心得：用色彩和霧化效果來做層級區分我覺得還蠻實用且能提升質感。但在霧化背景的方式，需要考量到開發者是否能配合。若還有捨棄不了 IE 瀏覽器的公司，則會因為裝置的限制而必須要有第二方案來替代霧化的方式，比如說改用暗色且透明度低的樣式。</p></blockquote><h1 id="顏色"><a href="#顏色" class="headerlink" title="顏色"></a>顏色</h1><p>有時候需要顯示多個圖表在一個螢幕上，且每個圖表包含多個 sections。為了能足夠表達狀態， Rally 的配色採用 1 個主色調加上 5 個配色。這個設計讓系統呈現可讀性高且獨特的信息圖表。</p><p>當三個圖表出現在同一個螢幕上，每個圖表使用其中的兩個顏色。</p><ol><li>Primary Green and Dark Green.</li><li>Orange and Yellow.</li><li>Purple and Blue.</li></ol><p><img src="https://storage.googleapis.com/spec-host-backup/mio-design%2Fassets%2F1TnwFyAe31SQDfL21qM9hZ1dcGQVRyB23%2Fcasestudies-rally-color-75percentzoom.png" alt="配色" title="配色"></p><h3 id="顏色主題"><a href="#顏色主題" class="headerlink" title="顏色主題"></a>顏色主題</h3><p>除了 6 色以外， Rally 還有一個針對這 6 個顏色延伸 10 色版的調色盤。如下圖。</p><ul><li>圓圈形狀代表在此 APP 中有用到的色版</li><li>“P” 代表主色調</li><li>其他沒有文字的圓圈則是配色</li></ul><p><img src="https://storage.googleapis.com/spec-host-backup/mio-design%2Fassets%2F17gZmwIGdzlDr-Hl2jTu2SSgc_ATBGaPt%2Fcasestudies-rally-color-palettes.png" alt="顏色主題" title="顏色主題"></p><blockquote><p>心得：我還沒用過那麼多的配色設計過，因為顏色越多，需要考量的點會更複雜，可能需要找時間嘗試看看。</p></blockquote><h1 id="文字與圖示"><a href="#文字與圖示" class="headerlink" title="文字與圖示"></a>文字與圖示</h1><p>Rally 用兩種字體：Eczar 和 Roboto Condensed。</p><ol><li>Roboto Condensed：介面預設字體，適合密集的佈局。</li><li>Eczar：只用在首要標題和純數字清單，適合呈現數據。</li></ol><p><img src="https://storage.googleapis.com/spec-host-backup/mio-design%2Fassets%2F1t7i8LPPdmRkpdLV4u-p0oHvlhRTRbEb3%2Fcasestudies-rally-type.png" alt="字體" title="字體"></p><p>Rally 使用客製化的 icon 來呈現不同的 sections。</p><ol><li>所有圖示使用一樣的格線架構確保一致性。</li><li>所有 Rally 圖示</li></ol><p><img src="https://storage.googleapis.com/spec-host-backup/mio-design%2Fassets%2F1zqz0w6AEK_D9Kxb8ntWTb8lXJHkGjakk%2Fcasestudies-rally-icons.png" alt="圖示" title="圖示"></p><blockquote><p>心得：在數據表達的部分使用另一種字體這是一個不錯的點子，可以凸顯出數據的呈現，會想要嘗試看看。圖示的部分，在統一格線架構下設計很合理，但在一般專案時間不足的狀況下，通常我會直接使用 Material Icons ，省去設計圖示這塊。</p></blockquote><h1 id="形狀"><a href="#形狀" class="headerlink" title="形狀"></a>形狀</h1><p>元件根據大小使用不同的形狀類型，將形狀做分類可以讓螢幕一次放多個元件，分類包含：</p><ol><li>小元件 (S)：文字輸入區塊(Filled text fields)。</li><li>中元件 (M)：卡片(Cards)。</li><li>大元件 (L)：數據表格(Data Tables)。</li></ol><p>元件都是 0 圓角。</p><p><img src="https://storage.googleapis.com/spec-host-backup/mio-design%2Fassets%2F1RpTrPB3UprQBcFfZh6ZnI4xNtUEyThIQ%2Frally-shape.png" alt="形狀分類" title="形狀分類"></p><p><img src="https://storage.googleapis.com/spec-host-backup/mio-design%2Fassets%2F1HuOHmVEu0rKr8Bfes708nHM9osOWiHIm%2Frally-shape-b.png" alt="形狀元件" title="形狀元件"></p><h1 id="元件"><a href="#元件" class="headerlink" title="元件"></a>元件</h1><h3 id="卡片和清單"><a href="#卡片和清單" class="headerlink" title="卡片和清單"></a>卡片和清單</h3><p>在 overview 頁面使用卡片去呈現多個財務摘要，像是 Accounts 和 Bills。</p><p><img src="https://storage.googleapis.com/spec-host-backup/mio-design%2Fassets%2F1gDGHc1gTW-FsOvmmXjZ6i5UF_U9CS0Ga%2Fcasestudies-rally-cards-1.png" alt="卡片" title="卡片"></p><p>當點選 Accounts，摘要資訊卡片會展開顯示更多細節在清單中。</p><p><img src="https://storage.googleapis.com/spec-host-backup/mio-design%2Fassets%2F128elUbInT1Me7Ra3gJGsndRDRq6JbAcn%2Fcasestudies-rally-list.png" alt="清單" title="清單"></p><h3 id="橫幅、提示bar和對話框"><a href="#橫幅、提示bar和對話框" class="headerlink" title="橫幅、提示bar和對話框"></a>橫幅、提示bar和對話框</h3><ul><li>橫幅(Banners)：比較不那麼重要的訊息選擇用橫幅的方式呈現，通常會搭配圖示。</li><li>提示 bar 和對話框(Snackbars and dialogs)：重要的訊息則是用提示 bar 和對話框呈現，並不會包含圖示。</li></ul><p>在平板上的橫幅呈現在導覽列旁。</p><p><img src="https://storage.googleapis.com/spec-host-backup/mio-design%2Fassets%2F1X3ShTSv1KbUgazHtrp7wzXApy36TH1na%2Fcasestudies-rally-alerts-tablet.png" alt="橫幅 - 平板" title="橫幅 - 平板"></p><p>在手機上的橫幅呈現在最上方。</p><p><img src="https://storage.googleapis.com/spec-host-backup/mio-design%2Fassets%2F1qcuHjBEJaoYI-_Vel0SlCTr4MXrlO3Ta%2Fcasestudies-rally-alerts-mobile.png" alt="橫幅 - 手機" title="橫幅 - 手機"></p><p>在桌機上的橫幅則是自己一個直欄位專門呈現。</p><p><img src="https://storage.googleapis.com/spec-host-backup/mio-design%2Fassets%2F1aEZcxrXD6L__739kup3Zzi5x73UFoIiz%2Fcasestudies-rally-alerts-desktop.png" alt="橫幅 - 桌機" title="橫幅 - 桌機"></p><p>重要訊息出現提示 bar 或對話框。</p><p><img src="https://storage.googleapis.com/spec-host-backup/mio-design%2Fassets%2F1UGbGapFacfgXBv5ijUiAjwNBKmw2v9yh%2Fcasestudies-rally-dialogs-mobile.png" alt="對話框" title="對話框"></p><p><img src="https://storage.googleapis.com/spec-host-backup/mio-design%2Fassets%2F1ccB2eglPzvAai1YC4QgkxgYlFErDtJFs%2Fcasestudies-rally-snackbar.png" alt="提示 bar" title="提示 bar"></p><blockquote><p>心得：沒有將這三個元件一起混用的經驗，頂多用其中的兩個而已，所以他這樣從訊息的重要性來區分用哪種元件的方式很值得參考。</p></blockquote><h1 id="交互動作"><a href="#交互動作" class="headerlink" title="交互動作"></a>交互動作</h1><p>Rally 在登入頁面顯示動畫 logo 增加 APP 的印象。</p><video src="https://storage.googleapis.com/spec-host-backup/mio-design%2Fassets%2F1SdTGjLEmVjxVQfQHUxjrbWEO9GEnbHab%2F01-rally-launch.mp4" autoplay loop style="max-width: 100%; display: block; margin-left: auto; margin-right: auto;">your browser does not support the video tag</video><p>當用戶點開一個帳戶時，畫面會使用從內到外漸變展開的子頁面。點選返回後，則會從外到內漸變縮合回上一頁。加強使用者對深度的感知。</p><video src="https://storage.googleapis.com/spec-host-backup/mio-design%2Fassets%2F1SjV2Eky-4d80UhOL4dm9k-EhG-r8IDm2%2F02-rally-parentchild.mp4" autoplay loop style="max-width: 100%; display: block; margin-left: auto; margin-right: auto;">your browser does not support the video tag</video><p>點選頁籤則是使用左右滑動的漸變動畫。</p><video src="https://storage.googleapis.com/spec-host-backup/mio-design%2Fassets%2F1SkeVD6imJA_MwjipNR-DbNh1xw4au9yy%2F02-rally-tabs.mp4" autoplay loop style="max-width: 100%; display: block; margin-left: auto; margin-right: auto;">your browser does not support the video tag</video><p>當引入新頁面元素時會使用上方的進度條作為導引。使用時間差的轉圈動畫來凸顯圓餅圖。</p><video src="https://storage.googleapis.com/spec-host-backup/mio-design%2Fassets%2F1SmqucW2ugbXboWf8SSjVngVtm63_VLxf%2F03-rally-sequencing.mp4" autoplay loop style="max-width: 100%; display: block; margin-left: auto; margin-right: auto;">your browser does not support the video tag</video><p>對話框使用彈跳的方式，以傳達訊息的急迫感。</p><video src="https://storage.googleapis.com/spec-host-backup/mio-design%2Fassets%2F1SrDQ1yFyIyFYWewhvEIIBZ9Mm0S-6G2z%2F04-rally-overshoot.mp4" autoplay loop style="max-width: 100%; display: block; margin-left: auto; margin-right: auto;">your browser does not support the video tag</video><blockquote><p>心得：對於父子頁面漸變展開的動畫提升深度感知這點很認同，但在實作上還沒有真正的實行過，可以思考或和其他程式開發者討論實際在 web 或 app 撰寫時的執行難度。</p></blockquote><p>總結：讀完這篇研究後，對於 Material Design 在系統設計上的應用來說，我覺得是很實用的，畢竟要做系統通常都是要大量顯示資訊，如何有條理讓使用者理解顯示資訊變得很重要。這篇在配色和交互動作的部分是很值得參考的案例。</p><h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><ul><li><a href="https://material.io/design/material-studies/rally.html" target="_blank" rel="noopener">Material Studies - Rally</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Material Guildline 應該很多設計師都閱讀過 N 遍了，但要設計時如何在框架下做到客制這件事應該還是很疑惑。官網上提出了幾個業界的實例分享，這點讓我很有興趣，所以接下來我會一一對這些案例做介紹。因為我上班做的案子比較多是系統類的設計，所以我第一個想介紹比較類似的是 Rally 這個案例。下面內容會一邊介紹，一邊穿插自己在職場上的一些心得或想法。&lt;/p&gt;
    
    </summary>
    
      <category term="UXUI" scheme="http://annilla.github.io/categories/UXUI/"/>
    
      <category term="Material Design" scheme="http://annilla.github.io/categories/UXUI/Material-Design/"/>
    
    
      <category term="UX" scheme="http://annilla.github.io/tags/UX/"/>
    
      <category term="UI" scheme="http://annilla.github.io/tags/UI/"/>
    
      <category term="Material Design" scheme="http://annilla.github.io/tags/Material-Design/"/>
    
  </entry>
  
  <entry>
    <title>Google Material Theming - Workflow Tools</title>
    <link href="http://annilla.github.io/2019/03/01/UXUI/Google-Material-Theming-Workflow-Tools/"/>
    <id>http://annilla.github.io/2019/03/01/UXUI/Google-Material-Theming-Workflow-Tools/</id>
    <published>2019-02-28T16:00:00.000Z</published>
    <updated>2019-02-28T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>之前我有寫過一篇<a href="/2018/09/13/UXUI/UX-UI-Workflow-Tool-in-2018/">我的 Design Workflow</a>，主要使用 <code>Sketch</code> 設計、 <code>XD</code> 做 prototype ，並利用 <code>Abstract</code> 做版控。 Material Design 官方也有一套 Workflow 並有配套的 Tools，今天就帶大家來一探究竟 Material 的 Workflow Tools。</p><a id="more"></a><h2 id="Material-Theming"><a href="#Material-Theming" class="headerlink" title="Material Theming"></a>Material Theming</h2><p>在介紹 Tool 前我們先來看看 <code>Material Theming</code> 是什麼？ Material Theming 就是將 Material Design 系統性的做客制，能更好地突出品牌識別效果。那如何將客制系統化呢？Tools 就佔了很重要的地位，我們來看看下列幾個系統化的工具吧。</p><video src="https://storage.googleapis.com/spec-host-backup/mio-design%2Fassets%2F1b7zteqiB7LCxy1R_NQwQZZ3_c8JqLE7T%2Ftheming-overview-applyingtheming.mp4" autoplay loop style="max-width: 100%; display: block; margin-left: auto; margin-right: auto;">your browser does not support the video tag</video><h3 id="Material-Theme-Editor"><a href="#Material-Theme-Editor" class="headerlink" title="Material Theme Editor"></a>Material Theme Editor</h3><p><code>Material Theme Editor</code> 我第一次看就嚇到了！怎麼會有這麼好用的共用元件工具。Material Theme Editor 透過在 Sketch 安裝 plugin，自動生成共用 Material Design Library，且透過此 plugin 還可以快速改變整個 Library 的 style ，像是圓角、配色組合、文字樣式等等。突然覺得我自己之前做的共用 Material Design Library 好手工喔ORZ～超喜歡這個很有彈性的 Tool 設計，我考慮下個新專案開始將 Material Theme Editor 生成的 Library 加入使用行列，到時候心有餘力再分享一篇使用心得囉～</p><video src="https://storage.googleapis.com/spec-host-backup/mio-tools%2Fassets%2F1U9gJolER8kqyFS1QzU7qhCRa7KRgebPb%2Ftheme-editor-sitecrop-hero-final.mp4" autoplay loop style="max-width: 100%; display: block; margin-left: auto; margin-right: auto;">your browser does not support the video tag</video><h3 id="Color-Tool"><a href="#Color-Tool" class="headerlink" title="Color Tool"></a>Color Tool</h3><p>配色工具的網站外面比比皆是。但是此 Color Tool 主要是在 Material 的指導原則下自動生成配色，在使用者選擇主色調後，經過演算挑出系統化的配色。我覺得這對設計師來說也節省了更多時間，不用再自己查相近色、互補色等，程式會自動為你配出適合的顏色。我下個新專案等不急要來 try try 看了~ XD</p><p><img src="https://beta-static.photobucket.com/images/ae138/anny09117011/0/d221bb30-b37c-47ff-a365-36f08935f061-original.png?width=1920&amp;height=1080&amp;fit=bounds" alt="Color Tool" title="Color Tool"></p><h3 id="Gallery"><a href="#Gallery" class="headerlink" title="Gallery"></a>Gallery</h3><p>之前有用過 <code>Zeplin</code> 分享設計量測 prototype 給 developer，但因為要付費就不想用了。現在很多設計工具都可以線上分享 prototype ， sketch、XD 都可以。Google 也自己開發了一套 gallery 的功能可以線上分享 prototype ，他除了可以觀察每個設計元件的 spec 和評語外，還可以設定螢幕要鎖定成手機、平板、桌電等尺寸，重點是他免費而且無空間限制，更多 Gallery 用法可參考<a href="https://material.io/tools/gallery/about.html#more-tips-on-using-gallery" target="_blank" rel="noopener">連結</a>。最近剛好有案子前端需要多人協同合作就拿來放在 Gallery，我覺得意外好用，只是就一定要有 google 的帳號才能看 Gallery 有點不合理，希望他以後改成只要有 email 就能加入 share 中。</p><p><img src="https://cdn-images-1.medium.com/max/1200/1*IsLM8aDdA9MZCD7T_x8FjA.gif" alt="Gallery" title="Gallery"></p><p>目前我個人是非常看好這幾個 Material Tools 的，希望新專案能慢慢加入使用，讓 Design &amp; Developer Workflow 更流暢。</p><h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><ul><li><a href="https://material.io/design/material-theming/#" target="_blank" rel="noopener">Material Theming</a></li><li><a href="https://material.io/tools/theme-editor/" target="_blank" rel="noopener">Material Theme Editor</a></li><li><a href="https://material.io/tools/color/#!/?view.left=0&amp;view.right=0&amp;primary.color=6002ee" target="_blank" rel="noopener">Material Design Color Tool</a></li><li><a href="https://gallery.io" target="_blank" rel="noopener">Google Gallery</a></li><li><a href="https://material.io/tools/gallery/about.html#more-tips-on-using-gallery" target="_blank" rel="noopener">More tips on using Gallery</a></li><li><a href="https://medium.com/sketch-app-sources/first-week-of-using-google-gallery-sketch-c97dd94c8676" target="_blank" rel="noopener">First week of using Google Gallery + Sketch</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前我有寫過一篇&lt;a href=&quot;/2018/09/13/UXUI/UX-UI-Workflow-Tool-in-2018/&quot;&gt;我的 Design Workflow&lt;/a&gt;，主要使用 &lt;code&gt;Sketch&lt;/code&gt; 設計、 &lt;code&gt;XD&lt;/code&gt; 做 prototype ，並利用 &lt;code&gt;Abstract&lt;/code&gt; 做版控。 Material Design 官方也有一套 Workflow 並有配套的 Tools，今天就帶大家來一探究竟 Material 的 Workflow Tools。&lt;/p&gt;
    
    </summary>
    
      <category term="UXUI" scheme="http://annilla.github.io/categories/UXUI/"/>
    
      <category term="Material Design" scheme="http://annilla.github.io/categories/UXUI/Material-Design/"/>
    
    
      <category term="UX" scheme="http://annilla.github.io/tags/UX/"/>
    
      <category term="UI" scheme="http://annilla.github.io/tags/UI/"/>
    
      <category term="Material Design" scheme="http://annilla.github.io/tags/Material-Design/"/>
    
      <category term="Sketch" scheme="http://annilla.github.io/tags/Sketch/"/>
    
  </entry>
  
  <entry>
    <title>Google Material Design - Introduction</title>
    <link href="http://annilla.github.io/2019/02/09/UXUI/Google-Material-Design-Introduction/"/>
    <id>http://annilla.github.io/2019/02/09/UXUI/Google-Material-Design-Introduction/</id>
    <published>2019-02-08T16:00:00.000Z</published>
    <updated>2019-02-08T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>從 2018 年 8 月開始 Material Design 進行大幅度的更新。到目前為止發展出許多豐富的資源、工具和工作流，讓設計師、工程師們合作更順利，也積極舉辦比賽、研討會並分享業界使用示例讓大家有更多互相學習的空間，最近會寫一系列關於 Google Material Design 的文章，雖然已經使用 Material Design 超過一年了，但還是想透過閱讀新文件的機會，來邊學邊分享給大家XD</p><a id="more"></a><h2 id="Introduction-Google-Material-Design"><a href="#Introduction-Google-Material-Design" class="headerlink" title="Introduction - Google Material Design"></a>Introduction - Google Material Design</h2><h3 id="設計目標-Goals"><a href="#設計目標-Goals" class="headerlink" title="設計目標 Goals"></a>設計目標 Goals</h3><ol><li><p>創建(Create)：創建一種視覺語言，將好的設計原則與科技結合。</p></li><li><p>統一(Unify)：跨平台設備下開發單一的底層系統，統一用戶體驗。</p></li><li><p>客製化(Customize)：擴展 Material 的視覺語言，為創新和品牌識別提供可靈活變化的基礎程式。</p></li></ol><h3 id="設計原則-Principles"><a href="#設計原則-Principles" class="headerlink" title="設計原則 Principles"></a>設計原則 Principles</h3><p>Material 是一種譬喻。Material Design 的靈感來自物理世界和其組成，包括它們如何反射光線和投射陰影。把我們所使用的媒介重新想像成紙張和墨水材質的變化。</p><ol><li><p>大膽、圖形導向、有意象的：Material Design 是依印刷設計方法來設計，包含字體設計(typography)、格線系統(grids)、間距(space)、比例(scale)、顏色(color)和意象(imagery)等。Material Design 創造層次感且有意義的體驗，讓使用者沈浸在環境中。</p></li><li><p>互動(Motion)蘊含意義：透過細微的反饋和關聯的漸變，來保持使用者動作的連續性和聚焦的效果。當元素出現在屏幕上時，它們會變化並重新組織環境，並通過互動產生新的變化。</p></li><li><p>靈活的基礎程式：Material Design 系統可以依品牌來擴展其視覺語言。它是由許多客製化的程式基底組成，可以無痛依設計加入組件(components)、插件(plug-ins)和設計元素(design elements)。</p></li><li><p>跨平台：Material Design 在不同平台保持相同的 UI，在 Android、 iOS、Flutter 和 web 上使用相同的共用組件。</p></li></ol><p>Material Design 維持每月更新的速度，對設計和工程師呈現其功能和擴展性，有興趣可以在官方<a href="https://github.com/material-components/material-components/blob/develop/ROADMAP.md/" target="_blank" rel="noopener">github</a>看到最新的釋出內容。下回我們將介紹 Material Design 的 Workflow 工作流，還有許多超好用的工具，我們下回見！</p><h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><ul><li><a href="https://material.io/design/introduction/#" target="_blank" rel="noopener">Material Design Introduction</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;從 2018 年 8 月開始 Material Design 進行大幅度的更新。到目前為止發展出許多豐富的資源、工具和工作流，讓設計師、工程師們合作更順利，也積極舉辦比賽、研討會並分享業界使用示例讓大家有更多互相學習的空間，最近會寫一系列關於 Google Material Design 的文章，雖然已經使用 Material Design 超過一年了，但還是想透過閱讀新文件的機會，來邊學邊分享給大家XD&lt;/p&gt;
    
    </summary>
    
      <category term="UXUI" scheme="http://annilla.github.io/categories/UXUI/"/>
    
      <category term="Material Design" scheme="http://annilla.github.io/categories/UXUI/Material-Design/"/>
    
    
      <category term="UX" scheme="http://annilla.github.io/tags/UX/"/>
    
      <category term="UI" scheme="http://annilla.github.io/tags/UI/"/>
    
      <category term="Material Design" scheme="http://annilla.github.io/tags/Material-Design/"/>
    
  </entry>
  
  <entry>
    <title>.NET Core Upgrade 2.2 with Webpack4 &amp; Vue</title>
    <link href="http://annilla.github.io/2019/01/01/DotnetCore/NET-Core-Upgrade-2-2-with-Webpack4-Vue/"/>
    <id>http://annilla.github.io/2019/01/01/DotnetCore/NET-Core-Upgrade-2-2-with-Webpack4-Vue/</id>
    <published>2018-12-31T16:00:00.000Z</published>
    <updated>2018-12-31T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>紀錄 .NET Core 升級到 2.2 和 Webpack 升到 4 要注意的地方～</p><a id="more"></a><hr><h2 id="NET-Core-2-2-設定"><a href="#NET-Core-2-2-設定" class="headerlink" title=".NET Core 2.2 設定"></a>.NET Core 2.2 設定</h2><h3 id="csproj-專案檔"><a href="#csproj-專案檔" class="headerlink" title="csproj 專案檔"></a>csproj 專案檔</h3><p><code>TargetFramework</code> 版本要改成 2.2, <code>PackageReference</code> 改成單一個 <code>Microsoft.AspNetCore.App</code>，就可以囉～</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Project</span> <span class="attr">Sdk</span>=<span class="string">"Microsoft.NET.Sdk.Web"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">PropertyGroup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TargetFramework</span>&gt;</span>netcoreapp2.2<span class="tag">&lt;/<span class="name">TargetFramework</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">PropertyGroup</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ItemGroup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">PackageReference</span> <span class="attr">Include</span>=<span class="string">"Microsoft.AspNetCore.App"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ItemGroup</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Project</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Program-cs"><a href="#Program-cs" class="headerlink" title="Program.cs"></a>Program.cs</h3><p>修改 <code>Program.cs</code> 中 <code>class</code> 內的程式，參考如下程式片段。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">namespace dotnet_core_vue_cli</span><br><span class="line">&#123;</span><br><span class="line">  public class Program</span><br><span class="line">  &#123;</span><br><span class="line">      public static void Main(string[] args)</span><br><span class="line">      &#123;</span><br><span class="line">        CreateWebHostBuilder(args).Build().Run();</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      public static IWebHostBuilder CreateWebHostBuilder(string[] args) =&gt;</span><br><span class="line">        WebHost.CreateDefaultBuilder(args)</span><br><span class="line">          .UseStartup&lt;Startup&gt;();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="VScode-VS2017-launch-設定"><a href="#VScode-VS2017-launch-設定" class="headerlink" title="VScode / VS2017 launch 設定"></a>VScode / VS2017 launch 設定</h2><p>為了在 webpack 上可以依據環境變數判斷不同的 bundle 內容，所以分別在 VScode / VS2017 的 launch 檔案設定環境變數。</p><h3 id="vscode-launch-json-for-VScode"><a href="#vscode-launch-json-for-VScode" class="headerlink" title=".vscode/launch.json (for VScode)"></a>.vscode/launch.json (for VScode)</h3><p><code>.vscode/launch.json</code> 在環境變數加上 <code>&quot;NODE_ENV=development&quot;: &quot;&quot;</code> 。這邊有個小技巧，就是 <code>=development</code> 是放在前面，而不是在後面的雙引號，這部分應該是一個小 Bug，但目前先用這個方式解決。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">  "env": &#123;</span><br><span class="line">    "ASPNETCORE_ENVIRONMENT": "Development",</span><br><span class="line">    "NODE_ENV=development": ""</span><br><span class="line">  &#125;,</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3 id="Properties-launchSettings-json-for-VS2017"><a href="#Properties-launchSettings-json-for-VS2017" class="headerlink" title="Properties/launchSettings.json (for VS2017)"></a>Properties/launchSettings.json (for VS2017)</h3><p><code>Properties/launchSettings.json</code> 則直接加上環境變數即可。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">  "environmentVariables": &#123;</span><br><span class="line">    "ASPNETCORE_ENVIRONMENT": "Development",</span><br><span class="line">    "NODE_ENV": "development"</span><br><span class="line">  &#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><hr><h2 id="Webpack4-設定"><a href="#Webpack4-設定" class="headerlink" title="Webpack4 設定"></a>Webpack4 設定</h2><h3 id="package-json"><a href="#package-json" class="headerlink" title="package.json"></a>package.json</h3><p>更新所有 package 並執行 npm install，參考如下設定。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"dotnet-core-vue-cli"</span>,</span><br><span class="line">  ...</span><br><span class="line">  "scripts": &#123;</span><br><span class="line">    "hmr": "cross-env ASPNETCORE_ENVIRONMENT=Development NODE_ENV=development dotnet run",</span><br><span class="line">    "build": "webpack --config webpack.pro.js"</span><br><span class="line">  &#125;,</span><br><span class="line">  "dependencies": &#123;</span><br><span class="line">    "vue": "^2.5.21"</span><br><span class="line">  &#125;,</span><br><span class="line">  ...</span><br><span class="line">  "devDependencies": &#123;</span><br><span class="line">    "@babel/core": "^7.2.2",</span><br><span class="line">    "@babel/preset-env": "^7.2.0",</span><br><span class="line">    "aspnet-webpack": "^3.0.0",</span><br><span class="line">    "babel-loader": "^8.0.4",</span><br><span class="line">    "cross-env": "^5.2.0",</span><br><span class="line">    "css-loader": "^2.1.0",</span><br><span class="line">    "cssnano": "^4.1.8",</span><br><span class="line">    "file-loader": "^3.0.1",</span><br><span class="line">    "mini-css-extract-plugin": "^0.5.0",</span><br><span class="line">    "node-sass": "^4.11.0",</span><br><span class="line">    "postcss-loader": "^3.0.0",</span><br><span class="line">    "postcss-preset-env": "^6.5.0",</span><br><span class="line">    "sass-loader": "^7.1.0",</span><br><span class="line">    "uglifyjs-webpack-plugin": "^2.1.1",</span><br><span class="line">    "vue-loader": "^15.4.2",</span><br><span class="line">    "vue-style-loader": "^4.1.2",</span><br><span class="line">    "vue-template-compiler": "^2.5.21",</span><br><span class="line">    "webpack": "^4.28.2",</span><br><span class="line">    "webpack-cli": "^3.1.2",</span><br><span class="line">    "webpack-dev-middleware": "^3.4.0",</span><br><span class="line">    "webpack-hot-middleware": "^2.24.3",</span><br><span class="line">    "webpack-merge": "^4.1.5"</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="babelrc"><a href="#babelrc" class="headerlink" title=".babelrc"></a>.babelrc</h3><p>因為升到 <code>babel</code> 7 之後套件會整個改成 <code>@</code> 開頭的，所以舊的同名 package 就可以刪掉了。所以 <code>babelrc</code> 設定檔也要改成如下片段。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;presets&quot;: [</span><br><span class="line">    [</span><br><span class="line">      &quot;@babel/preset-env&quot;,</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;modules&quot;: false</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="postcss-config-js"><a href="#postcss-config-js" class="headerlink" title="postcss.config.js"></a>postcss.config.js</h3><p>升級 <code>Vue-loader</code> 相容 <code>Webpack</code> 4 後就不會有自動 <code>autoprefixer</code> 的功能，需要自行引入 <code>postCSS</code> 來做這件事情。所以 <code>postcss.config.js</code> 設定檔要新增如下片段。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  plugins: &#123;</span><br><span class="line">    <span class="string">'postcss-preset-env'</span>: &#123;&#125;,</span><br><span class="line">    <span class="string">'cssnano'</span>: &#123;&#125;,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="webpack-base-config-pro-js"><a href="#webpack-base-config-pro-js" class="headerlink" title="webpack.base|config|pro.js"></a>webpack.base|config|pro.js</h3><blockquote><p>這邊升級後沒有用最新 <code>vue-cli</code> 3 的原因是因為 <code>aspnet-webpack</code> HMR 預設吃的 <code>webpack</code> 設定是最外層的 <code>webpack.config.js</code>，但最新 <code>Vue-cli</code> 3 已經把 <code>webpack.config.js</code> 藏起來了，改成 <code>vue.config.js</code> 做後續加工處理，且我們不使用 <code>node server</code> ，而是用 <code>dotnet server</code> 做 <code>HMR</code>，所以其實已經不需要 <code>vue-cli</code> 3 了。</p></blockquote><p>因為我們需要分成 <code>develop</code> 和 <code>production</code> 的 <code>webpack</code> 設定，所以就可以把 <code>webpack</code> 的結構拆成一個共用的基底 <code>webpack.base.js</code>，然後 <code>develop</code> 就透過 <code>webpack-merge</code> 將 <code>base</code> 結合 <code>webpack.config.js</code>，而 <code>production</code> 則是將 <code>base</code> 結合 <code>webpack.pro.js</code>。</p><p>以下擷取部分比較重要的地方跟大家分享。</p><ul><li>webpack.base.js</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>)</span><br><span class="line"><span class="keyword">const</span> MiniCssExtractPlugin = <span class="built_in">require</span>(<span class="string">"mini-css-extract-plugin"</span>)</span><br><span class="line"><span class="keyword">const</span> VueLoaderPlugin = <span class="built_in">require</span>(<span class="string">'vue-loader/lib/plugin'</span>)</span><br><span class="line"><span class="keyword">const</span> devMode = process.env.NODE_ENV === <span class="string">'development'</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  ...</span><br><span class="line">  <span class="built_in">module</span>: &#123;</span><br><span class="line">    rules: [</span><br><span class="line">      &#123; <span class="comment">// vue-loader 已經沒有預設 autoprefixer，所以 CSS 的部分要加上 postCSS</span></span><br><span class="line">        test: <span class="regexp">/\.vue$/</span>,</span><br><span class="line">        use: <span class="string">'vue-loader'</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        test: <span class="regexp">/\.js$/</span>,</span><br><span class="line">        use: <span class="string">'babel-loader'</span>,</span><br><span class="line">        exclude: <span class="regexp">/node_modules/</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123; <span class="comment">// MiniCssExtractPlugin 目前在 HMR 模式沒辦法打包成獨立的 CSS 檔案，所以在開發模式的時候，必須使用 vue-style-loader 替代，變成 meta 內的 style。</span></span><br><span class="line">        test: <span class="regexp">/\.scss?$/</span>,</span><br><span class="line">        use: [</span><br><span class="line">          devMode ? <span class="string">'vue-style-loader'</span> : MiniCssExtractPlugin.loader,</span><br><span class="line">          &#123;</span><br><span class="line">            loader: <span class="string">'css-loader'</span>,</span><br><span class="line">            options: &#123;</span><br><span class="line">              importLoaders: <span class="number">2</span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="string">'postcss-loader'</span>, <span class="comment">// for autoprefix</span></span><br><span class="line">          <span class="string">'sass-loader'</span></span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        test: <span class="regexp">/\.(png|jpg|gif|svg)$/</span>,</span><br><span class="line">        loader: <span class="string">'file-loader'</span>,</span><br><span class="line">        options: &#123;</span><br><span class="line">          publicPath: <span class="string">'imgs/'</span>,</span><br><span class="line">          outputPath: <span class="string">'imgs/'</span>,</span><br><span class="line">          name: <span class="string">'[name].[ext]?[hash]'</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  plugins: [</span><br><span class="line">    <span class="comment">// Webpack4 需使用 MiniCssExtractPlugin 打包 CSS 成獨立的 CSS</span></span><br><span class="line">    <span class="keyword">new</span> MiniCssExtractPlugin(&#123;</span><br><span class="line">      filename: <span class="string">"css/main.css"</span></span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="comment">// Webpack4 需使用 VueLoaderPlugin 才能正確讀取 .vue</span></span><br><span class="line">    <span class="keyword">new</span> VueLoaderPlugin()</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>webpack.config.js</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> merge = <span class="built_in">require</span>(<span class="string">'webpack-merge'</span>)</span><br><span class="line"><span class="keyword">const</span> base = <span class="built_in">require</span>(<span class="string">'./webpack.base'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用 webpack-merge 將 base 和 config 結合</span></span><br><span class="line"><span class="built_in">module</span>.exports = merge(base, &#123;</span><br><span class="line">  <span class="comment">/* mode 替換掉以前的 process.env</span></span><br><span class="line"><span class="comment">    new webpack.DefinePlugin(&#123;</span></span><br><span class="line"><span class="comment">      'process.env': &#123;</span></span><br><span class="line"><span class="comment">        NODE_ENV: '"development"'</span></span><br><span class="line"><span class="comment">      &#125;</span></span><br><span class="line"><span class="comment">    &#125;),</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">  mode: <span class="string">'development'</span>,</span><br><span class="line">  devServer: &#123;</span><br><span class="line">    historyApiFallback: <span class="literal">true</span>,</span><br><span class="line">    noInfo: <span class="literal">false</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  devtool: <span class="string">'#eval-source-map'</span>,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li>webpack.pro.js</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> merge = <span class="built_in">require</span>(<span class="string">'webpack-merge'</span>)</span><br><span class="line"><span class="keyword">const</span> base = <span class="built_in">require</span>(<span class="string">'./webpack.base'</span>)</span><br><span class="line"><span class="keyword">const</span> UglifyJsPlugin = <span class="built_in">require</span>(<span class="string">'uglifyjs-webpack-plugin'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用 webpack-merge 將 base 和 pro 結合</span></span><br><span class="line"><span class="built_in">module</span>.exports = merge(base, &#123;</span><br><span class="line">  <span class="comment">/* mode 替換掉以前的 process.env</span></span><br><span class="line"><span class="comment">    new webpack.DefinePlugin(&#123;</span></span><br><span class="line"><span class="comment">      'process.env': &#123;</span></span><br><span class="line"><span class="comment">        NODE_ENV: '"production"'</span></span><br><span class="line"><span class="comment">      &#125;</span></span><br><span class="line"><span class="comment">    &#125;),</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">  mode: <span class="string">'production'</span>,</span><br><span class="line">  devtool: <span class="string">'#source-map'</span>,</span><br><span class="line">  <span class="comment">// 新的 Webpack 4 把優化的部份都移到 optimization 設定</span></span><br><span class="line">  <span class="comment">// 所以 UglifyJsPlugin 替代掉之前的 webpack.optimize.UglifyJsPlugin</span></span><br><span class="line">  optimization: &#123;</span><br><span class="line">    minimizer: [<span class="keyword">new</span> UglifyJsPlugin()]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>今天的範例在 <a href="https://github.com/Annilla/dotnet-core-vue-cli/tree/v2.2.0" target="_blank" rel="noopener">github</a>，下回見～</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;紀錄 .NET Core 升級到 2.2 和 Webpack 升到 4 要注意的地方～&lt;/p&gt;
    
    </summary>
    
      <category term=".NET Core" scheme="http://annilla.github.io/categories/NET-Core/"/>
    
    
      <category term=".NET Core" scheme="http://annilla.github.io/tags/NET-Core/"/>
    
      <category term="dotnet" scheme="http://annilla.github.io/tags/dotnet/"/>
    
      <category term="Vue" scheme="http://annilla.github.io/tags/Vue/"/>
    
      <category term="Webpack" scheme="http://annilla.github.io/tags/Webpack/"/>
    
      <category term="SPA" scheme="http://annilla.github.io/tags/SPA/"/>
    
      <category term="MVC" scheme="http://annilla.github.io/tags/MVC/"/>
    
      <category term="VScode" scheme="http://annilla.github.io/tags/VScode/"/>
    
  </entry>
  
  <entry>
    <title>Adobe XD New Feature - Auto-Animate</title>
    <link href="http://annilla.github.io/2018/12/02/UXUI/Adobe-XD-New-Feature-Auto-Animate/"/>
    <id>http://annilla.github.io/2018/12/02/UXUI/Adobe-XD-New-Feature-Auto-Animate/</id>
    <published>2018-12-01T16:00:00.000Z</published>
    <updated>2018-12-01T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>Adobe XD 新功能 Auto-animate 在 2018 年 10 月釋放，雖然現在介紹好像有點晚了，但看了介紹就覺得超威的，想要好好整理一篇順便收集目前線上不錯的 Auto-animate reference。</p><a id="more"></a><hr><h2 id="auto-animate-是什麼？"><a href="#auto-animate-是什麼？" class="headerlink" title="auto-animate 是什麼？"></a><code>auto-animate</code> 是什麼？</h2><p>一般來說設計師要模擬互動的過程，通常是靠著複製並微調數個 <code>artboards</code> ，並透過使用者點擊切換這些 <code>artboards</code> 來呈現互動效果，但以往 <code>XD</code> 的功能只能做到點擊淡入下個 <code>artboard</code>，過程是直接的切換而沒有漸進式的變化。新功能 <code>auto-animate</code> 則是讓設計師使用 <code>XD</code> 在同個元件不同 <code>artboards</code> 做屬性的微調後，對該元件加上 <code>auto-animate</code> 後就會自動呈現 <code>transition</code> 的效果，且觸發條件除了舊的 <code>tap</code>（點擊） 外還新增了 <code>drag</code>（拖拉） 的觸發動作，這樣就可以模擬手機左右滑或上下滑的互動效果，聽起來超令人興奮的。至於元件可支援的 <code>auto-animate</code> 屬性例如：大小、位置、旋轉等等，可參考此<a href="https://helpx.adobe.com/xd/kb/supported-auto-animate-features-in-xd.html" target="_blank" rel="noopener">官網說明</a>。</p><blockquote><p>PS. XD prototype 的觸發動作除了 <code>Tap</code> 和 <code>Drag</code> 外還有 <code>Time</code> 和 <code>Voice</code>，這個等以後有機會研究再跟大家分享。</p></blockquote><hr><h2 id="如何製作-auto-animate？"><a href="#如何製作-auto-animate？" class="headerlink" title="如何製作 auto-animate？"></a>如何製作 <code>auto-animate</code>？</h2><p>在解釋步驟前先來看一張官網 demo 左右拖拉互動的效果圖。</p><p><img src="https://helpx.adobe.com/content/dam/help/en/xd/help/create-prototypes-using-auto-animate/jcr_content/main-pars/image/Drag.gif" alt="模擬左右拖拉互動效果" title="模擬左右拖拉互動效果"></p><p>製作流程：</p><p>1) 將第一個使用者看到的 <code>artboard</code> 設為首頁（成功設置完 <code>artboard</code> 左上角會有房子的藍色 logo 圖示）。</p><p>2) 將要展示的滑動過程依順序將 <code>artboard</code> 一個一個連結好。其中要設定的參數如下：</p><ul><li>Trigger: 設置 Drag 屬性</li><li>Action: 設置 Auto-Animate</li><li>Destination: 設置要連結的下個 artboard </li><li>Easing: 選擇 transition 過程要使用的變換函數 (同 CSS)</li></ul><p>設定參數可參考下圖。<br><img src="https://helpx.adobe.com/content/dam/help/en/xd/help/create-prototypes-using-auto-animate/jcr_content/main-pars/procedure_1208997114/proc_par/step_2/step_par/image/Setting-up-Drag.png" alt="auto-animate 設定參數" title="auto-animate 設定參數"></p><p>將將！是不是很 easy ~</p><hr><h2 id="線上-auto-animate-作品分享"><a href="#線上-auto-animate-作品分享" class="headerlink" title="線上 auto-animate 作品分享"></a>線上 <code>auto-animate</code> 作品分享</h2><p>免費的 XD 作品我通常都是來找<a href="https://www.xdguru.com/3" target="_blank" rel="noopener">XDGuro</a>，大家可以自行來挖寶，下面推薦一些我看到不錯的 <code>auto-animate</code> 作品。</p><h3 id="Auto-Animate-–-Free-XD-UI-kit"><a href="#Auto-Animate-–-Free-XD-UI-kit" class="headerlink" title="Auto Animate – Free XD UI kit"></a><a href="https://www.xdguru.com/auto-animate-free-ui-kit-xd/" target="_blank" rel="noopener">Auto Animate – Free XD UI kit</a></h3><p><img src="https://www.xdguru.com/wp-content/uploads/2018/11/Auto-Animate-Free-UI-kit-1014x487.jpg" alt="Auto Animate – Free XD UI kit" title="Auto Animate – Free XD UI kit"></p><p>這是官方寫的 demo ，裡面列出了各種常用的動畫效果，例如：Loading Bar, Number Counter, Day/Night Switch, Drag Carrousel, Pull to Refresh, Swipe Away, Parallax… 你想得到的都做得出來。真的是太神奇了～有用 XD 的設計師必載的參考文件！！</p><h3 id="Mobile-XD-scrolling-interaction"><a href="#Mobile-XD-scrolling-interaction" class="headerlink" title="Mobile XD scrolling interaction"></a><a href="https://www.xdguru.com/mobile-xd-scrolling-interaction/" target="_blank" rel="noopener">Mobile XD scrolling interaction</a></h3><p><img src="https://www.xdguru.com/wp-content/uploads/2018/11/Mobile-XD-scrolling-interaction-1014x487.jpg" alt="Mobile XD scrolling interaction" title="Mobile XD scrolling interaction"></p><p>這個作品也是我一看到就立馬收藏的好物！他模擬了最上方 User 資訊如何縮放漸變的過程，互動感覺非常流暢～喜歡！！</p><h3 id="Ice-Cream-App-animation"><a href="#Ice-Cream-App-animation" class="headerlink" title="Ice Cream App animation"></a><a href="https://www.xdguru.com/ice-cream-app-animation-xd/" target="_blank" rel="noopener">Ice Cream App animation</a></h3><p><img src="https://www.xdguru.com/wp-content/uploads/2018/10/Ice-Cream-App-animation-1014x487.jpg" alt="Ice Cream App animation" title="Ice Cream App animation"></p><p>這個作品也用到了經典的點擊和拖拉效果，也值得收藏!<br>比較可惜的是左右滑動換冰淇淋的部分不知道為什麼有些卡卡的，還要再多研究一下XD</p><p>看完了這些讓我更加愛上 <code>XD</code>，最近發現他也開放 plugin 功能，但目前還沒看到什麼厲害的 plugin，另外版本控制這部分也是我期待的一點，希望他能盡快有這些功能～哈哈 （使用著 Sketch 卻望著 XD 的設計師心聲）</p><h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><ul><li><a href="https://helpx.adobe.com/xd/help/create-prototypes-using-auto-animate.html" target="_blank" rel="noopener">Create prototypes using auto-animate</a></li><li><a href="https://helpx.adobe.com/xd/kb/supported-auto-animate-features-in-xd.html" target="_blank" rel="noopener">Supported properties for auto-animate in XD artboard transitions</a></li><li><a href="https://www.xdguru.com/auto-animate-free-ui-kit-xd/" target="_blank" rel="noopener">Auto Animate – Free XD UI kit</a></li><li><a href="https://www.xdguru.com/mobile-xd-scrolling-interaction/" target="_blank" rel="noopener">Mobile XD scrolling interaction</a></li><li><a href="https://www.xdguru.com/ice-cream-app-animation-xd/" target="_blank" rel="noopener">Ice Cream App animation</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Adobe XD 新功能 Auto-animate 在 2018 年 10 月釋放，雖然現在介紹好像有點晚了，但看了介紹就覺得超威的，想要好好整理一篇順便收集目前線上不錯的 Auto-animate reference。&lt;/p&gt;
    
    </summary>
    
      <category term="UXUI" scheme="http://annilla.github.io/categories/UXUI/"/>
    
    
      <category term="UX" scheme="http://annilla.github.io/tags/UX/"/>
    
      <category term="UI" scheme="http://annilla.github.io/tags/UI/"/>
    
      <category term="Adobe XD" scheme="http://annilla.github.io/tags/Adobe-XD/"/>
    
  </entry>
  
  <entry>
    <title>Git Control for Using Abstract to Manage Sketch Files</title>
    <link href="http://annilla.github.io/2018/11/04/UXUI/Git-Control-for-Using-Abstract-to-Manage-Sketch-Files/"/>
    <id>http://annilla.github.io/2018/11/04/UXUI/Git-Control-for-Using-Abstract-to-Manage-Sketch-Files/</id>
    <published>2018-11-03T16:00:00.000Z</published>
    <updated>2018-11-03T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>這篇要來介紹 <code>Abstract</code> 的主要功能，和我平常會怎麼使用他來做版本控制。</p><a id="more"></a><hr><h2 id="Projects-所有專案"><a href="#Projects-所有專案" class="headerlink" title="Projects 所有專案"></a>Projects 所有專案</h2><p>登入後的首頁就是顯示所有專案的頁面。專案分為 <code>ACTIVE</code> 和 <code>ARCHIVED</code>，這兩個分類主要是讓設計師團隊去區分哪些專案是還在進行的，哪些專案是已經結案的。專案只會越來越多，所以我覺得這個功能很好，可以在團隊合作時能很快的找到要設計的專案。我自己目前是一人設計，但目前管理的專案就有十幾個以上，往後專案數量只會遞增，所以我覺得這個功能對設計師來說是十分貼心。但要注意若要使用專案分類的話，是要自己去手動設定的喔，並不會自動知道你的專案已經結案了，所以這部分是手動設定也蠻合理的。</p><p><img src="https://beta-static.photobucket.com/images/ae138/anny09117011/0/79600760-97d1-4505-b81e-7dd0d6cd4695-original.png?width=1920&amp;height=1080&amp;fit=bounds" alt="Projects/ACTIVE" title="Projects/ACTIVE"></p><p><img src="https://beta-static.photobucket.com/images/ae138/anny09117011/0/7599faba-bf4e-4736-af79-1dee3bbe27dd-original.png?width=1920&amp;height=1080&amp;fit=bounds" alt="Projects/ARCHIVED" title="Projects/ARCHIVED"></p><blockquote><p>Tip: 預設專案的排序是照名稱，如果想要專案特別置頂的話，可以按專案卡片上的星星就會強制置頂囉～</p></blockquote><p>要開新專案就按 <code>New Project</code> 新增，詳細操作可以參考官網的<a href="https://www.goabstract.com/how-it-works/" target="_blank" rel="noopener">說明</a>，這裡就不再贅述。</p><p><img src="https://beta-static.photobucket.com/images/ae138/anny09117011/0/79908a0c-dfe0-4d82-8602-d953432d2a8b-original.png?width=1920&amp;height=1080&amp;fit=bounds" alt="New Project" title="New Project"></p><hr><h2 id="Project-Overview-專案概況"><a href="#Project-Overview-專案概況" class="headerlink" title="Project Overview 專案概況"></a>Project Overview 專案概況</h2><p>點擊進入單一專案後，會看到 <code>Overview</code> 頁面，這頁是把專案的概況整理成一張張的小卡，讓設計師能快速回憶過往設計並能儘快進入狀態。比較特別的是其中有一個小卡 <code>About</code>，類似小白板的感覺，主要功能是紀錄專案的描述和相關文件的參照，我覺得這個部分超棒的！！！因為要設計一個專案，絕對是有許許多多的需求，這些需求總有一個管理的地方，而 Abstract 運用了這張卡片讓流程可以順利的參照。但美中不足的是如果可以像 <code>Azure Devops</code> 有個 task board 聯繫 git，並在 merge 的時候有 close task 的功能，將會對設計師團隊有很大的助益。</p><p><img src="https://beta-static.photobucket.com/images/ae138/anny09117011/0/bdb60393-6e94-4cdd-84bd-e076e4fbe051-original.png?width=1920&amp;height=1080&amp;fit=bounds" alt="Project Overview" title="Project Overview"></p><hr><h2 id="Project-Master-專案主分支"><a href="#Project-Master-專案主分支" class="headerlink" title="Project Master 專案主分支"></a>Project Master 專案主分支</h2><p>Master 就是此專案的主要 branch，分為 Overview/Commits/Files 三個小功能。正常來說 <code>Abstract</code> 不會讓設計師去 commit Master branch，所以如果在這裡去點擊 <code>EDIT IN SKETCH</code> 做任何變更是不會讓使用者 commit 上去的。在 Master branch 設計師只會有兩種選擇，要麻獨立開啟檔案不給你做 commit，要麻就是建議你開 branch 做完後再 merge 回來，這一點跟一般的 git 不太一樣，畢竟設計檔案也不會有用到 hotfix 的時候，所以這樣防呆也比較安全。</p><p><img src="https://beta-static.photobucket.com/images/ae138/anny09117011/0/bf99cae2-8cb9-43df-8b0a-f3c9075237dd-original.png?width=1920&amp;height=1080&amp;fit=bounds" alt="Project Master Files" title="Project Master Files"></p><p><img src="https://beta-static.photobucket.com/images/ae138/anny09117011/0/0241e0aa-e8ef-4b4b-a733-f206d6d27e43-original.png?width=1920&amp;height=1080&amp;fit=bounds" alt="Project Master Commits" title="Project Master Commits"></p><hr><h2 id="Project-Branches-專案分支"><a href="#Project-Branches-專案分支" class="headerlink" title="Project Branches 專案分支"></a>Project Branches 專案分支</h2><p>這個功能是 <code>Abstract</code> 的核心。上一段提到正常的版本控制流程如同 git 一般，應該要做 <code>NEW BRANCH</code> 的動作開新分隻，並在新分支做 <code>EDIT IN SKETCH</code>，儲存完後對分支進行 commit 的動作，確定都修改完成最後才會將數個 commit merge 到 Master branch。這樣做除了多人設計師可以合作外，如果像我一樣孤獨的設計師也有好處嗎？答案絕對是YES! 因為設計跟寫程式不一樣，同一個需求，常常需要多種設計方案來比較，但 BOSS 又是那種看不到畫面就感覺不到的人，所以這時候開 branch 就非常好用。不同 branch 代表不同的設計方案，這樣既不會干擾原設計，又可以將最後確定要做的 branch 做 merge，其他不需要的方案也可以留底做紀錄。超愛！！</p><p><img src="https://beta-static.photobucket.com/images/ae138/anny09117011/0/b5f848aa-f7c2-4264-acdd-3bfc20f6d294-original.png?width=1920&amp;height=1080&amp;fit=bounds" alt="Project Branches" title="Project Branches"></p><blockquote><p>Tip: 對每張預覽圖點進去都可以做 COMMENT/COMPARE/INSPECT 的功能。 COMMENT 就是給不同設計師合作時的討論。 COMPARE 就是可以比對設計圖修改前後的不同處。 INSPECT 是新功能尚未開放，但我猜應該是讓設計師可跟工程師溝通的 spec，這部分我目前是先用 Sketch 的 plugin 輸出成互動的 HTML 解決，如果 Abstract 之後有開放此功能的話，將會是一大福音。</p></blockquote><p><img src="https://beta-static.photobucket.com/images/ae138/anny09117011/0/fbc759f3-7c31-4f1b-a19b-c7f3370ed00c-original.png?width=1920&amp;height=1080&amp;fit=bounds" alt="Pages" title="Pages"></p><hr><h2 id="2018-對應-Sketch-Library-的功能"><a href="#2018-對應-Sketch-Library-的功能" class="headerlink" title="2018 對應 Sketch Library 的功能"></a>2018 對應 Sketch Library 的功能</h2><p>Sketch 的新功能 <code>Library</code>， Abstract 也有支援，而且使用起來相當順暢。當已經有一組設計元件/框架想要共用多個不同的專案時，我們可以開一個單獨的專案並將其 sketch 檔案 import 為 Library 做管理。在另一個要使用此 Library 的專案在 Files 的子頁面做 <code>Link Library</code> 的動作。這樣只要原本 Library 的元件有做修改，有使用到此共用元件的專案也會一併更新，如此一來就可以做到 Library 和一般專案分開管理，又可以做到互相關聯。這個新功能雖然是 Sketch 研發，但搭配上 Abstract 後更是如虎添翼，打 BOSS 嚇嚇叫！詳細實作可參考官網<a href="https://support.goabstract.com/hc/en-us/articles/360016370931-Build-a-Library" target="_blank" rel="noopener">說明</a>。</p><blockquote><p>Tip: <code>Import Sketch file as Library</code> 後檔案的 icon 會變成粉紫色鑽石（預設是橘黃色），這樣就表示有新增 Library 成功喔～</p></blockquote><p><img src="https://beta-static.photobucket.com/images/ae138/anny09117011/0/bca763f0-6d8e-4786-976d-2235d8fe625d-original.png?width=1920&amp;height=1080&amp;fit=bounds" alt="Library" title="Library"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;這篇要來介紹 &lt;code&gt;Abstract&lt;/code&gt; 的主要功能，和我平常會怎麼使用他來做版本控制。&lt;/p&gt;
    
    </summary>
    
      <category term="UXUI" scheme="http://annilla.github.io/categories/UXUI/"/>
    
    
      <category term="UX" scheme="http://annilla.github.io/tags/UX/"/>
    
      <category term="UI" scheme="http://annilla.github.io/tags/UI/"/>
    
      <category term="Sketch" scheme="http://annilla.github.io/tags/Sketch/"/>
    
      <category term="Abstract" scheme="http://annilla.github.io/tags/Abstract/"/>
    
  </entry>
  
  <entry>
    <title>2018 My Sketch Useful Plugins</title>
    <link href="http://annilla.github.io/2018/11/04/UXUI/2018-My-Sketch-Useful-Plugins/"/>
    <id>http://annilla.github.io/2018/11/04/UXUI/2018-My-Sketch-Useful-Plugins/</id>
    <published>2018-11-03T16:00:00.000Z</published>
    <updated>2018-11-03T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>這次整理我平常有用且覺得好用的 <code>Sketch Plugin</code> 有哪些，有了這些 Plugin 讓我又節省了許多寶貴的時間。</p><a id="more"></a><hr><h2 id="Abstract-版本控制"><a href="#Abstract-版本控制" class="headerlink" title="Abstract 版本控制"></a>Abstract 版本控制</h2><p>這個不用多說了，之前有先寫了一篇專門講 <code>Abstract</code> 版本控制的文章，連結參考<a href="../Git-Control-for-Using-Abstract-to-Manage-Sketch-Files">這裡</a>。</p><hr><h2 id="Content-Generator-內容生成器"><a href="#Content-Generator-內容生成器" class="headerlink" title="Content Generator 內容生成器"></a>Content Generator 內容生成器</h2><p>每次設計時作個資、照片等假資料又讓你心力憔悴了嗎？不用怕，<code>Content Generator</code> 讓你事半功倍，再也不用去 google 搜集資料。只要選起來要替換的部分，再設定要替換的內容即可輕輕鬆鬆完成。</p><p>Github: <a href="https://github.com/timuric/Content-generator-sketch-plugin" target="_blank" rel="noopener">https://github.com/timuric/Content-generator-sketch-plugin</a></p><p>Demo:</p><p>Generating pictures<br><img src="https://raw.githubusercontent.com/timuric/Content-generator-for-sketch-app/master/tutorial/userpics.gif" alt="Generating pictures" title="Generating pictures"></p><p>Generating names<br><img src="https://raw.githubusercontent.com/timuric/Content-generator-for-sketch-app/master/tutorial/names.gif" alt="Generating names" title="Generating names"></p><p>其他更多 Demo，去 repo 就看的到囉～</p><hr><h2 id="Paddy-間距設定工具"><a href="#Paddy-間距設定工具" class="headerlink" title="Paddy 間距設定工具"></a>Paddy 間距設定工具</h2><p>這個工具主要是因為 Sketch 如果要做按鈕等中間文字長度不固定的元件時，每次都需要重新拉上下左右的間距。使用此工具可以設定固定的間距減少重工的發生。當修改文字或內容時，會自動變更外面的形狀以符合設定。Sketch 未來會把此功能加進去，所以此工具的開發者目前不再繼續維護，但在 Sketch 將新功能加進去之前，還是可以用此工具來設定間距。</p><p>Github: <a href="https://github.com/DWilliames/paddy-sketch-plugin" target="_blank" rel="noopener">https://github.com/DWilliames/paddy-sketch-plugin</a></p><p>Demo:<br><img src="https://github.com/DWilliames/paddy-sketch-plugin/raw/master/.images/GIFs/main.gif" alt="Paddy" title="Paddy"></p><hr><h2 id="Sketch-Measure-生成-spec-工具"><a href="#Sketch-Measure-生成-spec-工具" class="headerlink" title="Sketch Measure 生成 spec 工具"></a>Sketch Measure 生成 spec 工具</h2><p>設計師和工程師之間要如何溝通 design spec 一直是一個很重要的環節。市面上有很多相關的付費軟體，但 <code>Sketch Measure</code> 的優勢就在於它是免費且可以生成獨立的 <code>HTML</code> 靜態檔（不需上網），只要有瀏覽器即可開啟。我想 Sketch 往後一定會出相關的功能，不過目前用此工具的感覺還不錯，且生成出來的畫面很漂亮。</p><p>Github: <a href="https://github.com/utom/sketch-measure" target="_blank" rel="noopener">https://github.com/utom/sketch-measure</a></p><p>Demo: <a href="http://utom.design/news/" target="_blank" rel="noopener">http://utom.design/news/</a><br><img src="https://camo.githubusercontent.com/87118bae9cca2b18441601d87ca8d6682984afa7/687474703a2f2f75746f6d2e64657369676e2f6578706f72744032782e706e67" alt="Sketch Measure" title="Sketch Measure"></p><hr><h2 id="Sketch-Palettes-調色盤儲存器"><a href="#Sketch-Palettes-調色盤儲存器" class="headerlink" title="Sketch Palettes 調色盤儲存器"></a>Sketch Palettes 調色盤儲存器</h2><p>會使用到 <code>Sketch Palettes</code> 功能的時機是因為我想把某一個專案的調色盤顏色群組，整個拿到另一個專案裡使用。他的用法是先匯出顏色群組，然後再另一個檔案進行匯入，使用上蠻直覺的。</p><p>Github: <a href="https://github.com/andrewfiorillo/sketch-palettes" target="_blank" rel="noopener">https://github.com/andrewfiorillo/sketch-palettes</a></p><p>Demo:<br><img src="https://github.com/andrewfiorillo/sketch-palettes/raw/master/palettes.png" alt="Sketch Palettes" title="Sketch Palettes"></p><hr><h2 id="Symbol-Instance-Locator-尋找符號工具"><a href="#Symbol-Instance-Locator-尋找符號工具" class="headerlink" title="Symbol Instance Locator 尋找符號工具"></a>Symbol Instance Locator 尋找符號工具</h2><p>Symbol 在 Sketch 是一個很好用的功能，可以建立一個元件讓許多頁面共用。但若是想找某個 Symbol 用在哪些地方的話要怎麼辦呢？我之前就遇到只要在某些頁面將 symbol 替換成另一個組件的問題，<code>Symbol Instance Locator</code> 可以列出所有用到此 symbol 的地方，點擊即可跳往所在頁面，非常實用。</p><p>Github: <a href="https://github.com/sonburn/symbol-instance-locator" target="_blank" rel="noopener">https://github.com/sonburn/symbol-instance-locator</a></p><p>Demo:<br><img src="https://raw.githubusercontent.com/sonburn/symbol-instance-locator/master/images/screenshot.png" alt="Symbol Instance Locator" title="Symbol Instance Locator"></p><hr><h2 id="Symbol-Organizer-符號整理器"><a href="#Symbol-Organizer-符號整理器" class="headerlink" title="Symbol Organizer 符號整理器"></a>Symbol Organizer 符號整理器</h2><p>每次建立 Symbol 時， Sketch 都會將元件新增在另一個 Symbol Page 上，久而久之，Symbol Page 就會變得凌亂不堪。<code>Symbol Organizer</code> 就是為了解決此問題才下載的，他可以依據設定值快速幫你排好所有在 Symbol Page 上的 Symbol，不用一個一個調間距啥鬼的，看完超感動！！如果一般頁面也可以用就好了，因為此工具僅適用在 Symbol Page 上，美中不足啊！如果有人有看到類似的工具快跟我說ＸＤ</p><p>Github: <a href="https://github.com/sonburn/symbol-organizer" target="_blank" rel="noopener">https://github.com/sonburn/symbol-organizer</a></p><p>Demo:<br><img src="https://raw.githubusercontent.com/sonburn/symbol-organizer/master/images/screenshot.png" alt="Symbol Organizer" title="Symbol Organizer"></p><hr><h2 id="Unsplash-圖片生成器"><a href="#Unsplash-圖片生成器" class="headerlink" title="Unsplash 圖片生成器"></a>Unsplash 圖片生成器</h2><p>這是 Unsplash 和 Sketch 官方合作的工具。為什麼我已經安裝 <code>Content Generator</code> 內容生成器，卻還要裝 <code>Unsplash</code> 呢？ 原因很簡單，因為 <code>Unsplash</code> 的圖片很漂亮，為了要讓 BOSS 能減少打槍的次數，用美美的圖片 Demo 是非常重要的戰力。我也經常去搜尋他的免費照片做設計，是個超佛心的網站。</p><p>Github: <a href="https://github.com/BohemianCoding/unsplash-sketchplugin" target="_blank" rel="noopener">https://github.com/BohemianCoding/unsplash-sketchplugin</a></p><p>Demo:<br><img src="https://github.com/BohemianCoding/unsplash-sketchplugin/raw/master/docs/unsplash-screenshot-001.png" alt="Unsplash" title="Unsplash"></p><hr><p>很感謝這些開發者做這些 Plugins ，讓設計師們能節省很多寶貴的時間，除了能更順利的闖關之外，還可以去做更多有意義的事情。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;這次整理我平常有用且覺得好用的 &lt;code&gt;Sketch Plugin&lt;/code&gt; 有哪些，有了這些 Plugin 讓我又節省了許多寶貴的時間。&lt;/p&gt;
    
    </summary>
    
      <category term="UXUI" scheme="http://annilla.github.io/categories/UXUI/"/>
    
    
      <category term="UX" scheme="http://annilla.github.io/tags/UX/"/>
    
      <category term="UI" scheme="http://annilla.github.io/tags/UI/"/>
    
      <category term="Sketch" scheme="http://annilla.github.io/tags/Sketch/"/>
    
  </entry>
  
  <entry>
    <title>UX/UI Workflow Tool in 2018</title>
    <link href="http://annilla.github.io/2018/09/13/UXUI/UX-UI-Workflow-Tool-in-2018/"/>
    <id>http://annilla.github.io/2018/09/13/UXUI/UX-UI-Workflow-Tool-in-2018/</id>
    <published>2018-09-12T16:00:00.000Z</published>
    <updated>2018-09-12T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>這篇要和大家分享平時設計 UX/UI 的時候我會用到的工具。以及在一堆爆炸的工作量中，要怎麼運用工具存活下來的故事 XD 。那我們就趕快開始吧。</p><a id="more"></a><p>這邊主要先介紹平常會用到的 Tool “粗略簡介”，中間會附註其他類似的工具，最後說明我的設計工作流。比較技術性的使用方式要等後續再慢慢出一些專門的文章。</p><hr><h2 id="Abstract"><a href="#Abstract" class="headerlink" title="Abstract"></a>Abstract</h2><p><img src="http://i965.photobucket.com/albums/ae138/anny09117011/Blog/full-speed-ahead-img2.png" alt="Abstract" title="Abstract"></p><p><a href="https://www.goabstract.com/" target="_blank" rel="noopener">Abstract</a> 是針對 Sketch 的版本控制工具。</p><blockquote><p>“One place to version, manage, and collaborate on your Sketch files.” </p></blockquote><p>就如同使用 git 一般，所有的修改異動都會以 commit 的方式在雲端。再也不用像以往使用 adobe 系列狂複製做檔案備份的動作，使用 Abstract 就可以隨時查看要的版本，設計師再也不用害怕老闆說：“還是第一個版本好”(ＱＱ～心在淌血)。如果多人修改也可以開不同的分支(branch)，最後將確認的版本 merge 到 Master 即可。這簡直是設計師的救星啊～太多專案真的記不清之前做了什麼事，人也是會老的啊～(誤)</p><blockquote><p>其他類似的工具：<a href="https://plantapp.io/" target="_blank" rel="noopener">Plant</a>, <a href="https://kactus.io/" target="_blank" rel="noopener">Kactus</a>，網路上也有蠻多比較文章，可參考<a href="https://blog.prototypr.io/abstract-vs-kactus-vs-plant-a-guide-of-version-control-solutions-for-sketch-7da0a8ab5105" target="_blank" rel="noopener">這篇</a></p></blockquote><hr><h2 id="Sketch"><a href="#Sketch" class="headerlink" title="Sketch"></a>Sketch</h2><p><img src="http://i965.photobucket.com/albums/ae138/anny09117011/Blog/2018-09-13_1456.png" alt="Sketch" title="Sketch"></p><p><a href="https://www.sketchapp.com/" target="_blank" rel="noopener">Sketch</a> 設計 UI 的工具，我想他的大名鼎鼎幾乎每位介面設計師都聽過吧。其實我第一次接觸他的契機是因為我需要 “加快” 我的產出速度，為什麼這樣說呢？是設計師的話一定用過 Adobe 的 Illustrator, Photoshop，假設要你設計一個簡單的聯絡人清單介面，用 Adobe 系列做是非常手工的一件事情。但透過 Sketch 大量的外部 plugin 支援，只要引用幾個簡單的 plugin ，就可以快速產出假的聯絡人名稱、假照片、固定的間距(padding)。除此之外，還可以透過 plugin 輸出 spec 給工程師參考，再也不用自己拼命測量、打色碼，告訴工程師要怎麼切版了。為了要在團隊裡同時支撐大量專案的設計，如何在同樣高品質下，提升速度才是能讓自己存活的關鍵。</p><blockquote><p>其他類似的工具：<a href="https://www.adobe.com/tw/products/xd.html" target="_blank" rel="noopener">Adobe XD</a></p></blockquote><hr><h2 id="Adobe-XD"><a href="#Adobe-XD" class="headerlink" title="Adobe XD"></a>Adobe XD</h2><p><img src="http://i965.photobucket.com/albums/ae138/anny09117011/Blog/xd-riverflow1-720x620.jpg" alt="Adobe XD" title="Adobe XD"></p><p>誒～～等等，剛剛不是說你是用 Sketch，<a href="https://www.adobe.com/tw/products/xd.html" target="_blank" rel="noopener">Adobe XD</a> 是相似的工具，那你相似的工具怎麼一次就用了兩款了呢？你以為我這麼愛搞死自己啊～還不是因為兩者的出發利基點不同，各有優缺點，所以只好截長補短囉。用 Sketch 主要還是因為有版控的關係，畢竟是以存活為優先啊。而 XD 的優勢呢主要是在他的 prototype ，可以很直覺的拉一拉，就可以輸出 URL 提供 user 使用測試，不用寫程式也可以先收集反饋，不然等到寫好程式又被打槍設計就會進入輪迴地獄了。但近期 XD 和 Sketch 兩者的功能越來越相像， Sketch 新增了 prototype 功能(但還有些小 bug)，而 XD 也在著手開發 plugin 生態，這兩個目前還是不分軒輊。目前本人還是偏向可搭版控功能的 Sketch 為主，而 XD 為輔的狀態。</p><blockquote><p>其他類似的工具：<a href="https://www.invisionapp.com/" target="_blank" rel="noopener">inVision</a>，inVision 除了可以線上做 prototype 之外，還主打模擬過場互動動畫，這款做動畫的威力可說是相當強大，有可能未來會強勢殺出。但目前主要是追求速度的提升，製作互動動畫的部分就沒多重琢磨，可能往後比較有空閒的時間再多加研究。</p></blockquote><hr><h2 id="設計工作流"><a href="#設計工作流" class="headerlink" title="設計工作流"></a>設計工作流</h2><p>我的設計流程大約是這樣的：</p><ol><li>接到需求</li><li>打開版控軟體 Abstract 創立新專案 (既有舊專案則同步檔案至最新)</li><li>用 Abstract 開 new branch</li><li>從 Abstract branch 打開 Sketch 設計 UI</li><li>設計一段落，建立 commit 上 Abstract</li><li>從 Sketch 檔案輸出靜態圖片</li><li>使用 Adobe XD 建立 prototype</li><li>輸出 prototype 網址給使用者測試</li><li>得到使用者回饋後，再決定 Abstract 是否要 merge 此 branch 到 Master 或是繼續新增 commit。最差的可能是全部被打槍，只好從 Master 再另開 branch 來做。</li></ol><p>上面的步驟依據使用者回饋多寡做多次的循環至 OK 為止。</p><p>以上是我到目前為止採用的 design workflow，提供給大家參考。之後會寫一系列關於 UX, UI 的工具使用技巧或介紹大咖的 design pattern 如何幫助我有效率的產出，敬請期待～</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;這篇要和大家分享平時設計 UX/UI 的時候我會用到的工具。以及在一堆爆炸的工作量中，要怎麼運用工具存活下來的故事 XD 。那我們就趕快開始吧。&lt;/p&gt;
    
    </summary>
    
      <category term="UXUI" scheme="http://annilla.github.io/categories/UXUI/"/>
    
    
      <category term="UX" scheme="http://annilla.github.io/tags/UX/"/>
    
      <category term="UI" scheme="http://annilla.github.io/tags/UI/"/>
    
      <category term="Sketch" scheme="http://annilla.github.io/tags/Sketch/"/>
    
      <category term="Adobe XD" scheme="http://annilla.github.io/tags/Adobe-XD/"/>
    
      <category term="Abstract" scheme="http://annilla.github.io/tags/Abstract/"/>
    
  </entry>
  
  <entry>
    <title>D3 v4 with Vue - CANVAS Donut Chart</title>
    <link href="http://annilla.github.io/2018/09/11/D3/D3-v4-with-Vue-CANVAS-Donut-Chart/"/>
    <id>http://annilla.github.io/2018/09/11/D3/D3-v4-with-Vue-CANVAS-Donut-Chart/</id>
    <published>2018-09-10T16:00:00.000Z</published>
    <updated>2018-09-10T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>此篇練習使用 <code>CANVAS</code> 來做甜甜圈圖。這篇是這個系列的最後一篇了，我們趕緊來看吧。</p><a id="more"></a><hr><h2 id="甜甜圈圖動畫"><a href="#甜甜圈圖動畫" class="headerlink" title="甜甜圈圖動畫"></a>甜甜圈圖動畫</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">animationLine(elapsed) &#123;</span><br><span class="line">  <span class="keyword">let</span> duration = <span class="number">700</span>;</span><br><span class="line">  <span class="keyword">let</span> t = <span class="built_in">Math</span>.min(<span class="number">1</span>, elapsed / duration); <span class="comment">// compute how far through the animation we are (0 to 1)</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// Clear Canvas</span></span><br><span class="line">  <span class="keyword">this</span>.ctx.clearRect(<span class="number">0</span>, <span class="number">0</span>, <span class="keyword">this</span>.conWidth, <span class="keyword">this</span>.conHeight);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/*-------------------------</span></span><br><span class="line"><span class="comment">    甜甜圈</span></span><br><span class="line"><span class="comment">  -------------------------*/</span></span><br><span class="line">  <span class="keyword">this</span>.ctx.save();</span><br><span class="line">  <span class="keyword">this</span>.pie.forEach(<span class="function">(<span class="params">e, i</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 開始繪製</span></span><br><span class="line">    <span class="keyword">this</span>.ctx.beginPath();</span><br><span class="line">    <span class="keyword">this</span>.ctx.arc(</span><br><span class="line">      <span class="keyword">this</span>.conWidth / <span class="number">2</span>,</span><br><span class="line">      <span class="keyword">this</span>.conHeight / <span class="number">2</span>,</span><br><span class="line">      <span class="keyword">this</span>.radius,</span><br><span class="line">      e.startAngle,</span><br><span class="line">      e.startAngle + (e.endAngle - e.startAngle) * t</span><br><span class="line">    );</span><br><span class="line">    <span class="comment">// 邊框色</span></span><br><span class="line">    <span class="keyword">this</span>.ctx.lineWidth = <span class="keyword">this</span>.chartOuterRadius - <span class="keyword">this</span>.chartInnerRadius;</span><br><span class="line">    <span class="keyword">this</span>.ctx.strokeStyle = e.color;</span><br><span class="line">    <span class="keyword">this</span>.ctx.globalAlpha = t;</span><br><span class="line">    <span class="keyword">this</span>.ctx.stroke();</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/*-------------------------</span></span><br><span class="line"><span class="comment">    甜甜圈文字</span></span><br><span class="line"><span class="comment">  -------------------------*/</span></span><br><span class="line">  <span class="keyword">this</span>.pie.forEach(<span class="function">(<span class="params">e, i</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> theta = e.startAngle + (e.endAngle - e.startAngle) / <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">let</span> x = <span class="keyword">this</span>.radius * <span class="built_in">Math</span>.cos(theta);</span><br><span class="line">    <span class="keyword">let</span> y = <span class="keyword">this</span>.radius * <span class="built_in">Math</span>.sin(theta);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 開始繪製</span></span><br><span class="line">    <span class="keyword">this</span>.ctx.textAlign = <span class="string">"center"</span>;</span><br><span class="line">    <span class="keyword">this</span>.ctx.textBaseline = <span class="string">"middle"</span>;</span><br><span class="line">    <span class="keyword">this</span>.ctx.font = <span class="string">"16px sans-serif"</span>;</span><br><span class="line">    <span class="keyword">this</span>.ctx.fillStyle = <span class="string">"#fff"</span>;</span><br><span class="line">    <span class="keyword">this</span>.ctx.fillText(</span><br><span class="line">      e.percentage,</span><br><span class="line">      <span class="keyword">this</span>.conWidth / <span class="number">2</span> + x,</span><br><span class="line">      <span class="keyword">this</span>.conHeight / <span class="number">2</span> + y</span><br><span class="line">    );</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">this</span>.ctx.restore();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// if this animation is over</span></span><br><span class="line">  <span class="keyword">if</span> (t === <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="comment">// stop this timer since we are done animating.</span></span><br><span class="line">    <span class="keyword">this</span>.timer.stop();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>因為甜甜圈不需要 x 軸、 y 軸等靜態元素，標籤的部分用 HTML render 就好，所以只要把甜甜圈動畫長好就完成囉!線上 demo <a href="https://annilla.github.io/d3-practice-vue-canvas/dist/">在此</a>，也可以在<a href="https://github.com/Annilla/d3-practice-vue-canvas/blob/master/src/components/DonutChart.vue" target="_blank" rel="noopener">Github</a>查看完整程式碼，此主題到這裡告一段亂～之後會有全新的篇章，謝謝收看 ：）</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;此篇練習使用 &lt;code&gt;CANVAS&lt;/code&gt; 來做甜甜圈圖。這篇是這個系列的最後一篇了，我們趕緊來看吧。&lt;/p&gt;
    
    </summary>
    
      <category term="D3" scheme="http://annilla.github.io/categories/D3/"/>
    
    
      <category term="Vue" scheme="http://annilla.github.io/tags/Vue/"/>
    
      <category term="D3" scheme="http://annilla.github.io/tags/D3/"/>
    
      <category term="CANVAS" scheme="http://annilla.github.io/tags/CANVAS/"/>
    
  </entry>
  
  <entry>
    <title>D3 v4 with Vue - CANVAS Vertical Bar Chart</title>
    <link href="http://annilla.github.io/2018/08/05/D3/D3-v4-with-Vue-CANVAS-Vertical-Bar-Chart/"/>
    <id>http://annilla.github.io/2018/08/05/D3/D3-v4-with-Vue-CANVAS-Vertical-Bar-Chart/</id>
    <published>2018-08-04T16:00:00.000Z</published>
    <updated>2018-08-04T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>作者：Anny Chang</p><p>此篇練習使用 <code>CANVAS</code> 來做直條圖。因為和橫條圖的結構很相像，所以這邊就直接進入直條圖動畫的部分。</p><a id="more"></a><hr><h2 id="直條圖動畫"><a href="#直條圖動畫" class="headerlink" title="直條圖動畫"></a>直條圖動畫</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">animationLine(elapsed) &#123;</span><br><span class="line">  <span class="keyword">let</span> duration = <span class="number">800</span>;</span><br><span class="line">  <span class="keyword">let</span> t = <span class="built_in">Math</span>.min(<span class="number">1</span>, elapsed / duration); <span class="comment">// compute how far through the animation we are (0 to 1)</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// Clear Canvas</span></span><br><span class="line">  <span class="keyword">this</span>.ctx.clearRect(<span class="number">0</span>, <span class="number">0</span>, <span class="keyword">this</span>.conWidth, <span class="keyword">this</span>.conHeight);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 繪製不須動畫的元素</span></span><br><span class="line">  <span class="keyword">this</span>.drawStatic();</span><br><span class="line"></span><br><span class="line">  <span class="comment">/*-------------------------</span></span><br><span class="line"><span class="comment">    直條</span></span><br><span class="line"><span class="comment">  -------------------------*/</span></span><br><span class="line">  <span class="keyword">this</span>.ctx.save();</span><br><span class="line">  <span class="keyword">this</span>.bars.forEach(<span class="function">(<span class="params">e, i</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 開始繪製</span></span><br><span class="line"><span class="keyword">this</span>.ctx.beginPath();</span><br><span class="line">  <span class="keyword">this</span>.ctx.rect(e.x, e.y + e.height * (<span class="number">1</span> - t), e.width, e.height * t);</span><br><span class="line">    <span class="keyword">this</span>.ctx.globalAlpha = t;</span><br><span class="line">    <span class="keyword">this</span>.ctx.fillStyle = e.color;</span><br><span class="line">    <span class="keyword">this</span>.ctx.fill();</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/*-------------------------</span></span><br><span class="line"><span class="comment">    直條文字</span></span><br><span class="line"><span class="comment">  -------------------------*/</span></span><br><span class="line">  <span class="keyword">this</span>.ctx.font = <span class="string">"12px sans-serif"</span>;</span><br><span class="line">  <span class="keyword">this</span>.ctx.textBaseline = <span class="string">"bottom"</span>;</span><br><span class="line">  <span class="keyword">this</span>.ctx.textAlign = <span class="string">"center"</span>;</span><br><span class="line">  <span class="keyword">this</span>.ctx.fillStyle = <span class="string">"gray"</span>;</span><br><span class="line">  <span class="keyword">this</span>.bars.forEach(<span class="function">(<span class="params">e, i</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 開始繪製</span></span><br><span class="line">    <span class="keyword">this</span>.ctx.fillText(e.number, e.x + <span class="keyword">this</span>.barWidth / <span class="number">2</span>, e.y);</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">this</span>.ctx.restore();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// if this animation is over</span></span><br><span class="line">  <span class="keyword">if</span> (t === <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="comment">// stop this timer since we are done animating.</span></span><br><span class="line">    <span class="keyword">this</span>.timer.stop();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><blockquote><p>繪製的前後順序會影響繪製出來的圖層疊加效果，越後面繪製出來的元素會蓋在舊的元素上方。所以不需動畫的元素(ex: X軸、Y軸、標籤…)才特別拉出來寫成一個 function 放在繪製動畫之前。</p></blockquote><hr><h2 id="不需動畫的元素"><a href="#不需動畫的元素" class="headerlink" title="不需動畫的元素"></a>不需動畫的元素</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br></pre></td><td class="code"><pre><span class="line">drawStatic() &#123;</span><br><span class="line">  <span class="keyword">let</span> tickSize = <span class="number">6</span>; <span class="comment">// 軸點大小</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/*-------------------------</span></span><br><span class="line"><span class="comment">    X軸</span></span><br><span class="line"><span class="comment">  -------------------------*/</span></span><br><span class="line">  <span class="keyword">this</span>.xTick = <span class="keyword">this</span>.custom</span><br><span class="line">    .append(<span class="string">"g"</span>)</span><br><span class="line">    .attr(<span class="string">"class"</span>, <span class="string">"axis axisX"</span>)</span><br><span class="line">    .call(<span class="keyword">this</span>.xAxis)</span><br><span class="line">    .selectAll(<span class="string">"g.tick"</span>);</span><br><span class="line">  <span class="comment">// 繪製X軸點</span></span><br><span class="line">  <span class="keyword">this</span>.ctx.beginPath();</span><br><span class="line">  <span class="comment">// 黑色刻點</span></span><br><span class="line">  <span class="keyword">this</span>.xTick.each(<span class="function">(<span class="params">el, index, arr</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> node = d3.select(arr[index]);</span><br><span class="line">    <span class="keyword">let</span> xTrans = node.attr(<span class="string">"transform"</span>);</span><br><span class="line">    <span class="keyword">let</span> xPos = <span class="built_in">Number</span>(xTrans.split(<span class="string">","</span>)[<span class="number">0</span>].split(<span class="string">"("</span>)[<span class="number">1</span>]) + <span class="keyword">this</span>.chartLeft;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 跳過 0 的軸點</span></span><br><span class="line">    <span class="keyword">if</span> (index === <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 繪製軸點</span></span><br><span class="line">    <span class="keyword">this</span>.ctx.moveTo(xPos, <span class="keyword">this</span>.chartTop + <span class="keyword">this</span>.chartHeight);</span><br><span class="line">    <span class="keyword">this</span>.ctx.lineTo(xPos, <span class="keyword">this</span>.chartTop + <span class="keyword">this</span>.chartHeight + tickSize);</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">this</span>.ctx.stroke();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 繪製X軸線</span></span><br><span class="line">  <span class="keyword">this</span>.ctx.beginPath();</span><br><span class="line">  <span class="keyword">this</span>.ctx.moveTo(<span class="keyword">this</span>.chartLeft, <span class="keyword">this</span>.chartTop + <span class="keyword">this</span>.chartHeight);</span><br><span class="line">  <span class="keyword">this</span>.ctx.lineTo(</span><br><span class="line">    <span class="keyword">this</span>.chartLeft + <span class="keyword">this</span>.chartHeight,</span><br><span class="line">    <span class="keyword">this</span>.chartTop + <span class="keyword">this</span>.chartWidth</span><br><span class="line">  );</span><br><span class="line">  <span class="keyword">this</span>.ctx.stroke();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 繪製X軸文字</span></span><br><span class="line">  <span class="keyword">this</span>.ctx.textAlign = <span class="string">"center"</span>;</span><br><span class="line">  <span class="keyword">this</span>.ctx.textBaseline = <span class="string">"top"</span>;</span><br><span class="line">  <span class="keyword">this</span>.xTick.each(<span class="function">(<span class="params">el, index, arr</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> node = d3.select(arr[index]);</span><br><span class="line">    <span class="keyword">let</span> xTrans = node.attr(<span class="string">"transform"</span>);</span><br><span class="line">    <span class="keyword">let</span> xPos = <span class="built_in">Number</span>(xTrans.split(<span class="string">","</span>)[<span class="number">0</span>].split(<span class="string">"("</span>)[<span class="number">1</span>]) + <span class="keyword">this</span>.chartLeft;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.ctx.fillText(</span><br><span class="line">      node.property(<span class="string">"innerText"</span>),</span><br><span class="line">      xPos,</span><br><span class="line">    <span class="keyword">this</span>.chartTop + <span class="keyword">this</span>.chartHeight + tickSize</span><br><span class="line">      );</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 繪製X軸標籤</span></span><br><span class="line">  <span class="keyword">this</span>.data.forEach(<span class="function">(<span class="params">el, index</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 圓點</span></span><br><span class="line">    <span class="comment">// 開始繪製</span></span><br><span class="line">    <span class="keyword">this</span>.ctx.save();</span><br><span class="line">    <span class="keyword">this</span>.ctx.beginPath();</span><br><span class="line">    <span class="comment">// 繪製點</span></span><br><span class="line">    <span class="keyword">this</span>.ctx.arc(</span><br><span class="line">      <span class="keyword">this</span>.chartLeft + index * <span class="number">100</span>,</span><br><span class="line">      <span class="keyword">this</span>.chartTop + <span class="keyword">this</span>.chartHeight + <span class="number">50</span>,</span><br><span class="line">      <span class="number">5</span>,</span><br><span class="line">      <span class="number">0</span>,</span><br><span class="line">      <span class="number">2</span> * <span class="built_in">Math</span>.PI</span><br><span class="line">    );</span><br><span class="line">    <span class="comment">// 填色</span></span><br><span class="line">    <span class="keyword">this</span>.ctx.fillStyle = <span class="keyword">this</span>.color(index);</span><br><span class="line">    <span class="keyword">this</span>.ctx.fill();</span><br><span class="line">    <span class="comment">// 結束繪製</span></span><br><span class="line">    <span class="keyword">this</span>.ctx.closePath();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 文字</span></span><br><span class="line">    <span class="keyword">this</span>.ctx.textAlign = <span class="string">"left"</span>;</span><br><span class="line">    <span class="keyword">this</span>.ctx.textBaseline = <span class="string">"middle"</span>;</span><br><span class="line">  <span class="keyword">this</span>.ctx.font = <span class="string">"16px sans-serif"</span>;</span><br><span class="line">    <span class="keyword">this</span>.ctx.fillStyle = <span class="string">"#000"</span>;</span><br><span class="line">    <span class="keyword">this</span>.ctx.fillText(</span><br><span class="line">      el.name,</span><br><span class="line">      <span class="keyword">this</span>.chartLeft + index * <span class="number">100</span> + <span class="number">10</span>,</span><br><span class="line">      <span class="keyword">this</span>.chartTop + <span class="keyword">this</span>.chartHeight + <span class="number">50</span></span><br><span class="line">    );</span><br><span class="line">    <span class="keyword">this</span>.ctx.restore();</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/*-------------------------</span></span><br><span class="line"><span class="comment">    Y軸</span></span><br><span class="line"><span class="comment">  -------------------------*/</span></span><br><span class="line">  <span class="keyword">this</span>.yTick = <span class="keyword">this</span>.custom</span><br><span class="line">    .append(<span class="string">"g"</span>)</span><br><span class="line">    .attr(<span class="string">"class"</span>, <span class="string">"axis axisY"</span>)</span><br><span class="line">    .call(<span class="keyword">this</span>.yAxis)</span><br><span class="line">    .selectAll(<span class="string">"g.tick"</span>);</span><br><span class="line">  <span class="comment">// 繪製Y軸點</span></span><br><span class="line">  <span class="keyword">this</span>.ctx.save();</span><br><span class="line">  <span class="keyword">this</span>.ctx.beginPath();</span><br><span class="line">  <span class="comment">// 內部灰色刻線</span></span><br><span class="line">  <span class="keyword">this</span>.yTick.each(<span class="function">(<span class="params">el, index, arr</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> node = d3.select(arr[index]);</span><br><span class="line">    <span class="keyword">let</span> yTrans = node.attr(<span class="string">"transform"</span>);</span><br><span class="line">    <span class="keyword">let</span> yPos = <span class="built_in">Number</span>(yTrans.split(<span class="string">","</span>)[<span class="number">1</span>].split(<span class="string">")"</span>)[<span class="number">0</span>]) + <span class="keyword">this</span>.chartTop;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 跳過 0 的軸點</span></span><br><span class="line">    <span class="keyword">if</span> (index === <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 繪製軸點</span></span><br><span class="line">    <span class="keyword">this</span>.ctx.moveTo(<span class="keyword">this</span>.chartLeft, yPos);</span><br><span class="line">    <span class="keyword">this</span>.ctx.lineTo(<span class="keyword">this</span>.chartLeft + <span class="keyword">this</span>.chartWidth, yPos);</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">this</span>.ctx.strokeStyle = <span class="string">"#efefef"</span>; <span class="comment">// 線顏色</span></span><br><span class="line">  <span class="keyword">this</span>.ctx.stroke();</span><br><span class="line">  <span class="keyword">this</span>.ctx.restore();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 最上方的刻點</span></span><br><span class="line">  <span class="keyword">this</span>.ctx.beginPath();</span><br><span class="line">  <span class="keyword">this</span>.ctx.moveTo(<span class="keyword">this</span>.chartLeft - tickSize, <span class="keyword">this</span>.chartTop);</span><br><span class="line">  <span class="keyword">this</span>.ctx.lineTo(<span class="keyword">this</span>.chartLeft, <span class="keyword">this</span>.chartTop);</span><br><span class="line">  <span class="keyword">this</span>.ctx.stroke();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 繪製Y軸線</span></span><br><span class="line">  <span class="keyword">this</span>.ctx.beginPath();</span><br><span class="line">  <span class="keyword">this</span>.ctx.moveTo(<span class="keyword">this</span>.chartLeft, <span class="keyword">this</span>.chartTop);</span><br><span class="line">  <span class="keyword">this</span>.ctx.lineTo(<span class="keyword">this</span>.chartLeft, <span class="keyword">this</span>.chartTop + <span class="keyword">this</span>.chartHeight);</span><br><span class="line">  <span class="keyword">this</span>.ctx.stroke();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 繪製Y軸文字</span></span><br><span class="line">  <span class="keyword">this</span>.ctx.textAlign = <span class="string">"right"</span>;</span><br><span class="line">  <span class="keyword">this</span>.ctx.textBaseline = <span class="string">"middle"</span>;</span><br><span class="line">  <span class="keyword">this</span>.yTick.each(<span class="function">(<span class="params">el, index, arr</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> node = d3.select(arr[index]);</span><br><span class="line">    <span class="keyword">let</span> yTrans = node.attr(<span class="string">"transform"</span>);</span><br><span class="line">    <span class="keyword">let</span> yPos = <span class="built_in">Number</span>(yTrans.split(<span class="string">","</span>)[<span class="number">1</span>].split(<span class="string">")"</span>)[<span class="number">0</span>]) + <span class="keyword">this</span>.chartTop;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.ctx.fillText(</span><br><span class="line">      node.property(<span class="string">"innerText"</span>),</span><br><span class="line">      <span class="keyword">this</span>.chartLeft - tickSize,</span><br><span class="line">      yPos</span><br><span class="line">    );</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 繪製Y軸標籤</span></span><br><span class="line">  <span class="comment">// start by saving the current context (current orientation, origin)</span></span><br><span class="line">  <span class="keyword">this</span>.ctx.save();</span><br><span class="line">  <span class="keyword">this</span>.ctx.translate(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">  <span class="keyword">this</span>.ctx.rotate(-<span class="built_in">Math</span>.PI / <span class="number">2</span>);</span><br><span class="line">  <span class="keyword">this</span>.ctx.textAlign = <span class="string">"center"</span>;</span><br><span class="line">  <span class="keyword">this</span>.ctx.textBaseline = <span class="string">"top"</span>;</span><br><span class="line">  <span class="keyword">this</span>.ctx.font = <span class="string">"16px sans-serif"</span>;</span><br><span class="line">  <span class="keyword">this</span>.ctx.fillText(<span class="string">"件數"</span>, -(<span class="keyword">this</span>.chartTop + <span class="keyword">this</span>.chartHeight / <span class="number">2</span>), <span class="number">0</span>);</span><br><span class="line">  <span class="keyword">this</span>.ctx.restore(); <span class="comment">// now restore the canvas flipping it back to its original orientation</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>線上 demo <a href="https://annilla.github.io/d3-practice-vue-canvas/dist/">在此</a>，也可以在<a href="https://github.com/Annilla/d3-practice-vue-canvas/blob/master/src/components/BarVChart.vue" target="_blank" rel="noopener">Github</a>查看完整程式碼，下次我們要講最後一個甜甜圈圖了，之後我們將會有新的主題～敬請期待 ：）</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;作者：Anny Chang&lt;/p&gt;
&lt;p&gt;此篇練習使用 &lt;code&gt;CANVAS&lt;/code&gt; 來做直條圖。因為和橫條圖的結構很相像，所以這邊就直接進入直條圖動畫的部分。&lt;/p&gt;
    
    </summary>
    
      <category term="D3" scheme="http://annilla.github.io/categories/D3/"/>
    
    
      <category term="Vue" scheme="http://annilla.github.io/tags/Vue/"/>
    
      <category term="D3" scheme="http://annilla.github.io/tags/D3/"/>
    
      <category term="CANVAS" scheme="http://annilla.github.io/tags/CANVAS/"/>
    
  </entry>
  
  <entry>
    <title>D3 v4 with Vue - CANVAS Horizontal Bar Chart</title>
    <link href="http://annilla.github.io/2018/07/07/D3/D3-v4-with-Vue-CANVAS-Horizontal-Bar-Chart/"/>
    <id>http://annilla.github.io/2018/07/07/D3/D3-v4-with-Vue-CANVAS-Horizontal-Bar-Chart/</id>
    <published>2018-07-06T16:00:00.000Z</published>
    <updated>2018-07-06T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>此篇練習使用 <code>CANVAS</code> 來做橫條圖。主要的隨機資料和準備 <code>Canvas</code> 畫布在折線圖那篇有解釋過，所以這邊就直接進入橫條圖動畫的部分。</p><a id="more"></a><hr><h2 id="橫條圖動畫"><a href="#橫條圖動畫" class="headerlink" title="橫條圖動畫"></a>橫條圖動畫</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">animationLine(elapsed) &#123;</span><br><span class="line">  <span class="keyword">let</span> duration = <span class="number">800</span>;</span><br><span class="line">  <span class="keyword">let</span> t = <span class="built_in">Math</span>.min(<span class="number">1</span>, elapsed / duration); <span class="comment">// compute how far through the animation we are (0 to 1)</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// Clear Canvas</span></span><br><span class="line">  <span class="keyword">this</span>.ctx.clearRect(<span class="number">0</span>, <span class="number">0</span>, <span class="keyword">this</span>.conWidth, <span class="keyword">this</span>.conHeight);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 繪製不須動畫的元素</span></span><br><span class="line">  <span class="keyword">this</span>.drawStatic();</span><br><span class="line"></span><br><span class="line">  <span class="comment">/*-------------------------</span></span><br><span class="line"><span class="comment">  橫條</span></span><br><span class="line"><span class="comment">  -------------------------*/</span></span><br><span class="line">  <span class="keyword">this</span>.ctx.save();</span><br><span class="line">  <span class="keyword">this</span>.bars.forEach(<span class="function">(<span class="params">e, i</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 開始繪製</span></span><br><span class="line">    <span class="keyword">this</span>.ctx.beginPath();</span><br><span class="line">    <span class="keyword">this</span>.ctx.rect(e.x, e.y, e.width * t, e.height);</span><br><span class="line">    <span class="keyword">this</span>.ctx.globalAlpha = t;</span><br><span class="line">    <span class="keyword">this</span>.ctx.fillStyle = e.color;</span><br><span class="line">    <span class="keyword">this</span>.ctx.fill();</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/*-------------------------</span></span><br><span class="line"><span class="comment">  橫條文字</span></span><br><span class="line"><span class="comment">  -------------------------*/</span></span><br><span class="line">  <span class="keyword">this</span>.ctx.textBaseline = <span class="string">"middle"</span>;</span><br><span class="line">  <span class="keyword">this</span>.ctx.font = <span class="string">"16px sans-serif"</span>;</span><br><span class="line">  <span class="keyword">this</span>.bars.forEach(<span class="function">(<span class="params">e, i</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> x = e.width + <span class="keyword">this</span>.chartLeft - <span class="number">5</span>; <span class="comment">// 修正x太低數值的文字改在橫條外顯示</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 修正x太低數值的文字改在橫條外顯示</span></span><br><span class="line">  <span class="keyword">if</span> (x &lt; <span class="keyword">this</span>.chartLeft + <span class="number">50</span>) &#123;</span><br><span class="line">    <span class="keyword">this</span>.ctx.fillStyle = <span class="string">"#000"</span>;</span><br><span class="line">    <span class="keyword">this</span>.ctx.textAlign = <span class="string">"left"</span>;</span><br><span class="line">    x = e.width + <span class="keyword">this</span>.chartLeft + <span class="number">5</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">this</span>.ctx.fillStyle = <span class="string">"#fff"</span>;</span><br><span class="line">    <span class="keyword">this</span>.ctx.textAlign = <span class="string">"right"</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.ctx.fillText(e.number, x, e.y + <span class="keyword">this</span>.barWidth / <span class="number">2</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">this</span>.ctx.restore();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// if this animation is over</span></span><br><span class="line">  <span class="keyword">if</span> (t === <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="comment">// stop this timer since we are done animating.</span></span><br><span class="line">    <span class="keyword">this</span>.timer.stop();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><blockquote><p>繪製的前後順序會影響繪製出來的圖層疊加效果，越後面繪製出來的元素會蓋在舊的元素上方。所以不需動畫的元素(ex: X軸、Y軸、標籤…)才特別拉出來寫成一個 function 放在繪製動畫之前。</p></blockquote><hr><h2 id="不需動畫的元素"><a href="#不需動畫的元素" class="headerlink" title="不需動畫的元素"></a>不需動畫的元素</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line">drawStatic() &#123; <span class="comment">// 繪製不須動畫的元素</span></span><br><span class="line">  <span class="keyword">let</span> tickSize = <span class="number">6</span>; <span class="comment">// 軸點大小</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/*-------------------------</span></span><br><span class="line"><span class="comment">    X軸</span></span><br><span class="line"><span class="comment">  -------------------------*/</span></span><br><span class="line">  <span class="keyword">this</span>.xTick = <span class="keyword">this</span>.custom</span><br><span class="line">    .append(<span class="string">"g"</span>)</span><br><span class="line">    .attr(<span class="string">"class"</span>, <span class="string">"axis axisX"</span>)</span><br><span class="line">    .call(<span class="keyword">this</span>.xAxis)</span><br><span class="line">    .selectAll(<span class="string">"g.tick"</span>);</span><br><span class="line">  <span class="comment">// 繪製X軸點</span></span><br><span class="line">  <span class="keyword">this</span>.ctx.save();</span><br><span class="line">  <span class="keyword">this</span>.ctx.beginPath();</span><br><span class="line">  <span class="comment">// 中間內部灰線</span></span><br><span class="line">  <span class="keyword">this</span>.xTick.each(<span class="function">(<span class="params">el, index, arr</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> node = d3.select(arr[index]);</span><br><span class="line">    <span class="keyword">let</span> xTrans = node.attr(<span class="string">"transform"</span>);</span><br><span class="line">    <span class="keyword">let</span> xPos = <span class="built_in">Number</span>(xTrans.split(<span class="string">","</span>)[<span class="number">0</span>].split(<span class="string">"("</span>)[<span class="number">1</span>]) + <span class="keyword">this</span>.chartLeft;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 跳過 0 的軸點</span></span><br><span class="line">    <span class="keyword">if</span> (index === <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 繪製軸點</span></span><br><span class="line">    <span class="keyword">this</span>.ctx.moveTo(xPos, <span class="keyword">this</span>.chartTop);</span><br><span class="line">    <span class="keyword">this</span>.ctx.lineTo(xPos, <span class="keyword">this</span>.chartTop + <span class="keyword">this</span>.chartHeight);</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">this</span>.ctx.setLineDash([<span class="number">4</span>, <span class="number">6</span>]);</span><br><span class="line">  <span class="keyword">this</span>.ctx.lineWidth = <span class="number">2</span>;</span><br><span class="line">  <span class="keyword">this</span>.ctx.strokeStyle = <span class="string">"#efefef"</span>; <span class="comment">// 線顏色</span></span><br><span class="line">  <span class="keyword">this</span>.ctx.stroke();</span><br><span class="line">  <span class="keyword">this</span>.ctx.restore();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 繪製X軸文字</span></span><br><span class="line">  <span class="keyword">this</span>.ctx.textAlign = <span class="string">"center"</span>;</span><br><span class="line">  <span class="keyword">this</span>.ctx.textBaseline = <span class="string">"top"</span>;</span><br><span class="line">  <span class="keyword">this</span>.xTick.each(<span class="function">(<span class="params">el, index, arr</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> node = d3.select(arr[index]);</span><br><span class="line">    <span class="keyword">let</span> xTrans = node.attr(<span class="string">"transform"</span>);</span><br><span class="line">    <span class="keyword">let</span> xPos = <span class="built_in">Number</span>(xTrans.split(<span class="string">","</span>)[<span class="number">0</span>].split(<span class="string">"("</span>)[<span class="number">1</span>]) + <span class="keyword">this</span>.chartLeft;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.ctx.fillText(</span><br><span class="line">      node.property(<span class="string">"innerText"</span>),</span><br><span class="line">      xPos,</span><br><span class="line">      <span class="keyword">this</span>.chartTop + <span class="keyword">this</span>.chartHeight</span><br><span class="line">    );</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 繪製X軸標籤</span></span><br><span class="line">  <span class="keyword">this</span>.ctx.save();</span><br><span class="line">  <span class="keyword">this</span>.ctx.textAlign = <span class="string">"center"</span>;</span><br><span class="line">  <span class="keyword">this</span>.ctx.textBaseline = <span class="string">"top"</span>;</span><br><span class="line">  <span class="keyword">this</span>.ctx.font = <span class="string">"16px sans-serif"</span>;</span><br><span class="line">  <span class="keyword">this</span>.ctx.fillText(</span><br><span class="line">    <span class="string">"件數"</span>,</span><br><span class="line">    <span class="keyword">this</span>.conWidth / <span class="number">2</span>,</span><br><span class="line">    <span class="keyword">this</span>.chartTop + <span class="keyword">this</span>.chartHeight + <span class="number">30</span></span><br><span class="line">  );</span><br><span class="line">  <span class="keyword">this</span>.ctx.restore();</span><br><span class="line"></span><br><span class="line">  <span class="comment">/*-------------------------</span></span><br><span class="line"><span class="comment">    Y軸</span></span><br><span class="line"><span class="comment">  -------------------------*/</span></span><br><span class="line">  <span class="keyword">this</span>.yTick = <span class="keyword">this</span>.custom</span><br><span class="line">    .append(<span class="string">"g"</span>)</span><br><span class="line">    .attr(<span class="string">"class"</span>, <span class="string">"axis axisY"</span>)</span><br><span class="line">    .call(<span class="keyword">this</span>.yAxis)</span><br><span class="line">    .selectAll(<span class="string">"g.tick"</span>);</span><br><span class="line">  <span class="comment">// 繪製Y軸點</span></span><br><span class="line">  <span class="keyword">this</span>.ctx.beginPath();</span><br><span class="line">  <span class="comment">// 黑色刻點</span></span><br><span class="line">  <span class="keyword">this</span>.yTick.each(<span class="function">(<span class="params">el, index, arr</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> node = d3.select(arr[index]);</span><br><span class="line">    <span class="keyword">let</span> yTrans = node.attr(<span class="string">"transform"</span>);</span><br><span class="line">    <span class="keyword">let</span> yPos = <span class="built_in">Number</span>(yTrans.split(<span class="string">","</span>)[<span class="number">1</span>].split(<span class="string">")"</span>)[<span class="number">0</span>]) + <span class="keyword">this</span>.chartTop;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 跳過 0 的軸點</span></span><br><span class="line">    <span class="keyword">if</span> (index === <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 繪製軸點</span></span><br><span class="line">    <span class="keyword">this</span>.ctx.moveTo(<span class="keyword">this</span>.chartLeft - tickSize, yPos);</span><br><span class="line">    <span class="keyword">this</span>.ctx.lineTo(<span class="keyword">this</span>.chartLeft, yPos);</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">this</span>.ctx.stroke();</span><br><span class="line">  <span class="comment">// 最下方的刻點</span></span><br><span class="line">  <span class="keyword">this</span>.ctx.beginPath();</span><br><span class="line">  <span class="keyword">this</span>.ctx.moveTo(</span><br><span class="line">    <span class="keyword">this</span>.chartLeft - tickSize,</span><br><span class="line">    <span class="keyword">this</span>.chartTop + <span class="keyword">this</span>.chartHeight</span><br><span class="line">  );</span><br><span class="line">  <span class="keyword">this</span>.ctx.lineTo(<span class="keyword">this</span>.chartLeft, <span class="keyword">this</span>.chartTop + <span class="keyword">this</span>.chartHeight);</span><br><span class="line">  <span class="keyword">this</span>.ctx.stroke();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 繪製Y軸線</span></span><br><span class="line">  <span class="keyword">this</span>.ctx.beginPath();</span><br><span class="line">  <span class="keyword">this</span>.ctx.moveTo(<span class="keyword">this</span>.chartLeft, <span class="keyword">this</span>.chartTop);</span><br><span class="line">  <span class="keyword">this</span>.ctx.lineTo(<span class="keyword">this</span>.chartLeft, <span class="keyword">this</span>.chartTop + <span class="keyword">this</span>.chartHeight);</span><br><span class="line">  <span class="keyword">this</span>.ctx.stroke();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 繪製Y軸文字</span></span><br><span class="line">  <span class="keyword">this</span>.ctx.textAlign = <span class="string">"right"</span>;</span><br><span class="line">  <span class="keyword">this</span>.ctx.textBaseline = <span class="string">"middle"</span>;</span><br><span class="line">  <span class="keyword">this</span>.yTick.each(<span class="function">(<span class="params">el, index, arr</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> node = d3.select(arr[index]);</span><br><span class="line">    <span class="keyword">let</span> yTrans = node.attr(<span class="string">"transform"</span>);</span><br><span class="line">    <span class="keyword">let</span> yPos = <span class="built_in">Number</span>(yTrans.split(<span class="string">","</span>)[<span class="number">1</span>].split(<span class="string">")"</span>)[<span class="number">0</span>]) + <span class="keyword">this</span>.chartTop;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.ctx.fillText(</span><br><span class="line">      node.property(<span class="string">"innerText"</span>),</span><br><span class="line">      <span class="keyword">this</span>.chartLeft - tickSize,</span><br><span class="line">      yPos</span><br><span class="line">    );</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>整個骨架如果熟悉的話，其實就是把動態部分跟靜態部分替換掉想要的圖形就完成囉，線上 demo <a href="https://annilla.github.io/d3-practice-vue-canvas/dist/">在此</a>，也可以在<a href="https://github.com/Annilla/d3-practice-vue-canvas/blob/master/src/components/BarPChart.vue" target="_blank" rel="noopener">Github</a>查看完整程式碼，我們下回見～</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;此篇練習使用 &lt;code&gt;CANVAS&lt;/code&gt; 來做橫條圖。主要的隨機資料和準備 &lt;code&gt;Canvas&lt;/code&gt; 畫布在折線圖那篇有解釋過，所以這邊就直接進入橫條圖動畫的部分。&lt;/p&gt;
    
    </summary>
    
      <category term="D3" scheme="http://annilla.github.io/categories/D3/"/>
    
    
      <category term="Vue" scheme="http://annilla.github.io/tags/Vue/"/>
    
      <category term="D3" scheme="http://annilla.github.io/tags/D3/"/>
    
      <category term="CANVAS" scheme="http://annilla.github.io/tags/CANVAS/"/>
    
  </entry>
  
  <entry>
    <title>D3 v4 with Vue - SVG VS CANVAS</title>
    <link href="http://annilla.github.io/2018/06/17/D3/D3-v4-with-Vue-SVG-VS-CANVAS/"/>
    <id>http://annilla.github.io/2018/06/17/D3/D3-v4-with-Vue-SVG-VS-CANVAS/</id>
    <published>2018-06-16T16:00:00.000Z</published>
    <updated>2018-06-16T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>本篇主要是針對 <code>SVG</code> 和 <code>CANVAS</code> 兩種繪圖方式作比較，並整理各自的優勢。</p><a id="more"></a><hr><h2 id="SVG-amp-CANVAS-繪製原理"><a href="#SVG-amp-CANVAS-繪製原理" class="headerlink" title="SVG &amp; CANVAS 繪製原理"></a>SVG &amp; CANVAS 繪製原理</h2><h3 id="SVG"><a href="#SVG" class="headerlink" title="SVG"></a>SVG</h3><blockquote><p>用 D3 把算好的陣列，呈現在 SVG 的 DOM 上，讓 Vue 來做 rendor 的動作，最後使用 CSS transition 做動畫。</p></blockquote><p><img src="http://i965.photobucket.com/albums/ae138/anny09117011/Blog/lineChartSVG.gif" alt="SVG Rendor DOM" title="SVG"></p><h3 id="CANVAS"><a href="#CANVAS" class="headerlink" title="CANVAS"></a>CANVAS</h3><blockquote><p> Canvas 則是用 “命令” 的方式作圖，JS 就如同一隻虛擬的筆，下指令一筆一畫把圖畫出來。所以，畫出來的東西沒有實體 DOM。動畫也是靠 JS 命令，每段時間清除畫布，不斷地做重新繪製。</p></blockquote><p><img src="http://i965.photobucket.com/albums/ae138/anny09117011/Blog/lineChartCANVAS.gif" alt="JS Draw CANVAS" title="CANVAS"></p><hr><h2 id="CAN-I-USE"><a href="#CAN-I-USE" class="headerlink" title="CAN I USE?"></a>CAN I USE?</h2><h3 id="SVG-1"><a href="#SVG-1" class="headerlink" title="SVG"></a>SVG</h3><p><img src="http://i965.photobucket.com/albums/ae138/anny09117011/Blog/Can%20I%20use%20SVG.jpg" alt="CAN I USE SVG" title="SVG"></p><h3 id="CANVAS-1"><a href="#CANVAS-1" class="headerlink" title="CANVAS"></a>CANVAS</h3><p><img src="http://i965.photobucket.com/albums/ae138/anny09117011/Blog/Can%20I%20use%20CANVAS.jpg" alt="CAN I USE CANVAS" title="CANVAS"></p><hr><h2 id="程式碼長度"><a href="#程式碼長度" class="headerlink" title="程式碼長度"></a>程式碼長度</h2><h3 id="SVG-2"><a href="#SVG-2" class="headerlink" title="SVG"></a>SVG</h3><p><img src="http://i965.photobucket.com/albums/ae138/anny09117011/Blog/SVG%20code%20length.jpg" alt="SVG 程式碼長度" title="SVG"></p><blockquote><p>SVG 399 行 (Whoa! Excellent ~)</p></blockquote><h3 id="CANVAS-2"><a href="#CANVAS-2" class="headerlink" title="CANVAS"></a>CANVAS</h3><p><img src="http://i965.photobucket.com/albums/ae138/anny09117011/Blog/CANVAS%20code%20length.jpg" alt="CANVAS 程式碼長度" title="CANVAS"></p><blockquote><p>CANVAS 603 行 (Oh-no!! So Terrible ~)</p></blockquote><hr><h2 id="執行效能"><a href="#執行效能" class="headerlink" title="執行效能"></a>執行效能</h2><h3 id="SVG-3"><a href="#SVG-3" class="headerlink" title="SVG"></a>SVG</h3><p><img src="http://i965.photobucket.com/albums/ae138/anny09117011/Blog/SVG%20Perform.jpg" alt="SVG 執行效能" title="SVG"></p><blockquote><p>SVG 364 ms</p></blockquote><h3 id="CANVAS-3"><a href="#CANVAS-3" class="headerlink" title="CANVAS"></a>CANVAS</h3><p><img src="http://i965.photobucket.com/albums/ae138/anny09117011/Blog/CANVAS%20Perform.jpg" alt="CANVAS 執行效能" title="CANVAS"></p><blockquote><p>CANVAS 177 ms</p></blockquote><hr><h2 id="整體分析"><a href="#整體分析" class="headerlink" title="整體分析"></a>整體分析</h2><p><img src="http://i965.photobucket.com/albums/ae138/anny09117011/Blog/canvasVSsvgTABLE.jpg" alt="整體分析" title="SVG VS CANVAS"></p><blockquote><p>整體來說，像工業 4.0 這種大數據的資料使用 CANVAS 來繪製會是最恰當的（速度才不會卡卡）。相反的，如果是簡單的數據圖，使用 SVG 會比較容易開發和維護。</p></blockquote><p>本篇就分析到此，下一篇會繼續解說 CANVAS 如何繪製其他種類（ex: 長條圖、圓餅圖…）的數據圖。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本篇主要是針對 &lt;code&gt;SVG&lt;/code&gt; 和 &lt;code&gt;CANVAS&lt;/code&gt; 兩種繪圖方式作比較，並整理各自的優勢。&lt;/p&gt;
    
    </summary>
    
      <category term="D3" scheme="http://annilla.github.io/categories/D3/"/>
    
    
      <category term="Vue" scheme="http://annilla.github.io/tags/Vue/"/>
    
      <category term="D3" scheme="http://annilla.github.io/tags/D3/"/>
    
      <category term="CANVAS" scheme="http://annilla.github.io/tags/CANVAS/"/>
    
      <category term="SVG" scheme="http://annilla.github.io/tags/SVG/"/>
    
  </entry>
  
  <entry>
    <title>D3 v4 with Vue - CANVAS Line Chart</title>
    <link href="http://annilla.github.io/2018/06/16/D3/D3-v4-with-Vue-CANVAS-Line-Chart/"/>
    <id>http://annilla.github.io/2018/06/16/D3/D3-v4-with-Vue-CANVAS-Line-Chart/</id>
    <published>2018-06-15T16:00:00.000Z</published>
    <updated>2018-06-15T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>前幾篇介紹完 <code>SVG</code> 的基本繪圖方式後，我們要來練習使用 <code>CANVAS</code> 來做一樣的折線圖，並在下一篇比較兩者的優缺點。</p><a id="more"></a><hr><h2 id="準備隨機資料-amp-CANVAS-畫布"><a href="#準備隨機資料-amp-CANVAS-畫布" class="headerlink" title="準備隨機資料 &amp; CANVAS 畫布"></a>準備隨機資料 &amp; <code>CANVAS</code> 畫布</h2><p>這邊的 <code>Canvas</code> 畫布因為需要動態計算寬高，所以會利用 <code>js</code> 動態插入 <code>html</code> 中。當視窗進行 <code>resize</code> 時，也是透過 <code>js</code> 清除畫布重新繪製。</p><ul><li>HTML</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- chartContain 主要就是 js 做判別插入 canvas 的定位點 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"chartContain"</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- calPath 是將 D3 動態算出來的值做暫時存放的位置 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">svg</span> <span class="attr">version</span>=<span class="string">"1.1"</span> <span class="attr">id</span>=<span class="string">"calPath"</span>&gt;</span><span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- tooltip 和往常一樣是做滑過顯示資訊的功能 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">:class</span>=<span class="string">"&#123; tooltip: true, hidden: hideTooltip&#125;"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"name"</span>&gt;</span>左營區 / 10月<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"value"</span>&gt;</span>214 件<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在 randomData 完後，插入動態計算的 <code>Canvas</code> 畫布。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">mounted() &#123;</span><br><span class="line">  <span class="comment">// 隨機產生資料</span></span><br><span class="line">  <span class="keyword">this</span>.randomData();</span><br><span class="line">&#125;,</span><br><span class="line">methods: &#123;</span><br><span class="line">  randomData() &#123; <span class="comment">// 隨機產生資料</span></span><br><span class="line">    <span class="keyword">let</span> min = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">let</span> max = <span class="number">500</span>;</span><br><span class="line">    <span class="keyword">let</span> random = [...];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 隨機產生資料</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">      random[i].value.forEach(<span class="function"><span class="params">e</span> =&gt;</span> &#123;</span><br><span class="line">        e.number = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * (max - min + <span class="number">1</span>)) + min;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.data = random;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Init Canvas</span></span><br><span class="line">    <span class="keyword">this</span>.initCanvas();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Window Resize</span></span><br><span class="line">    <span class="built_in">window</span>.addEventListener(<span class="string">"resize"</span>, <span class="keyword">this</span>.initCanvas);</span><br><span class="line">  &#125;,</span><br><span class="line">  initCanvas() &#123; <span class="comment">// 插入動態計算的 Canvas 區塊</span></span><br><span class="line">    <span class="keyword">let</span> chartContain = <span class="built_in">document</span>.querySelector(<span class="string">".chartContain"</span>);</span><br><span class="line">    <span class="keyword">let</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">"canvas"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Clear Canvas Element</span></span><br><span class="line">    <span class="keyword">if</span> (canvas !== <span class="literal">null</span>) &#123;</span><br><span class="line">      canvas.parentNode.removeChild(canvas);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Get Container Width</span></span><br><span class="line">    <span class="keyword">this</span>.conWidth = chartContain.offsetWidth;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// For D3 Draw Canvas</span></span><br><span class="line">    <span class="keyword">this</span>.canvas = d3</span><br><span class="line">      .select(<span class="string">".chartContain"</span>)</span><br><span class="line">      .append(<span class="string">"canvas"</span>)</span><br><span class="line">      .attr(<span class="string">"id"</span>, <span class="string">"canvas"</span>)</span><br><span class="line">      .attr(<span class="string">"class"</span>, <span class="string">"chart"</span>)</span><br><span class="line">      .attr(<span class="string">"width"</span>, <span class="keyword">this</span>.conWidth)</span><br><span class="line">      .attr(<span class="string">"height"</span>, <span class="keyword">this</span>.conHeight);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.ctx = <span class="keyword">this</span>.canvas.node().getContext(<span class="string">"2d"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Set the parent of all other elements</span></span><br><span class="line">    <span class="keyword">this</span>.customBase = <span class="built_in">document</span>.createElement(<span class="string">"custom"</span>);</span><br><span class="line">    <span class="keyword">this</span>.custom = d3.select(<span class="keyword">this</span>.customBase);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Draw Canvas</span></span><br><span class="line">    <span class="keyword">this</span>.drawCanvas();</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.lineChart</span> &#123;</span><br><span class="line">  <span class="comment">/* 說明 */</span></span><br><span class="line">  .detail &#123;</span><br><span class="line">    <span class="selector-tag">color</span>: <span class="selector-tag">gray</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.chartContain</span> &#123; <span class="comment">/* 放置主要畫布的容器 */</span></span><br><span class="line">    <span class="attribute">max-width</span>: <span class="number">600px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    #calPath &#123;</span><br><span class="line">      <span class="selector-tag">display</span>: <span class="selector-tag">none</span>; <span class="comment">/* 隱藏暫時計算的 path 元件 */</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.tooltip</span> &#123;</span><br><span class="line">      ...</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="繪製折線圖"><a href="#繪製折線圖" class="headerlink" title="繪製折線圖"></a>繪製折線圖</h2><p>因為這邊要仿造 <code>SVG</code> 進行動畫，所以會用 <code>d3.timer</code> 的方式，隨著計時器每次清掉畫布再進行重新繪製的動作，所以整體畫面全靠 <code>js</code> 繪製，而不是 <code>html</code> 或 <code>css</code>。</p><p><code>mousemove</code> 的部分是當滑鼠滑過特定的點時，需要判別是否有經過繪製的折點，顯示相對的 <code>tooltip</code> 資訊。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">drawCanvas() &#123;</span><br><span class="line">  <span class="keyword">let</span> canvas = <span class="built_in">document</span>.querySelector(<span class="string">"#canvas"</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/*-------------------------</span></span><br><span class="line"><span class="comment">    動畫</span></span><br><span class="line"><span class="comment">  -------------------------*/</span></span><br><span class="line">  <span class="keyword">this</span>.timer = d3.timer(<span class="function"><span class="params">elapsed</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">this</span>.animationLine(elapsed);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Canvas On Mouseover</span></span><br><span class="line">  canvas.addEventListener(<span class="string">"mousemove"</span>, e =&gt; &#123;</span><br><span class="line">    <span class="keyword">this</span>.showTooltip(e);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><hr><h2 id="折線圖動畫"><a href="#折線圖動畫" class="headerlink" title="折線圖動畫"></a>折線圖動畫</h2><blockquote><p>注意！這邊不使用 <code>requestAnimationFrame()</code> 的原因是不同瀏覽器要加相對應的前綴詞，且 <code>mobile</code> 支持度低，可參考線上 <a href="https://developer.mozilla.org/zh-TW/docs/Web/API/Window.requestAnimationFrame" target="_blank" rel="noopener">MDN</a> 說明。</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">animationLine(elapsed) &#123;</span><br><span class="line">  <span class="keyword">let</span> duration = <span class="number">500</span>;</span><br><span class="line">  <span class="keyword">let</span> t = <span class="built_in">Math</span>.min(<span class="number">1</span>, elapsed / duration); <span class="comment">// compute how far through the animation we are (0 to 1)</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// Clear Canvas</span></span><br><span class="line">  <span class="keyword">this</span>.ctx.clearRect(<span class="number">0</span>, <span class="number">0</span>, <span class="keyword">this</span>.conWidth, <span class="keyword">this</span>.conHeight);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 繪製不須動畫的元素</span></span><br><span class="line">  <span class="keyword">this</span>.drawStatic();</span><br><span class="line"></span><br><span class="line">  <span class="comment">/*-------------------------</span></span><br><span class="line"><span class="comment">    折線</span></span><br><span class="line"><span class="comment">  -------------------------*/</span></span><br><span class="line">  <span class="keyword">this</span>.ctx.save();</span><br><span class="line">  <span class="keyword">this</span>.lines.forEach(<span class="function">(<span class="params">e, i</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> path = <span class="built_in">document</span>.querySelector(<span class="string">"#calPath path"</span>);</span><br><span class="line">    <span class="keyword">let</span> totalLength; <span class="comment">// Path Length</span></span><br><span class="line"></span><br><span class="line">    path.setAttribute(<span class="string">"d"</span>, e.d); <span class="comment">// 這邊將 D3 算好的折點佔存在 #calPath path 上</span></span><br><span class="line">    totalLength = path.getTotalLength();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.ctx.setLineDash([totalLength]);</span><br><span class="line">    <span class="keyword">this</span>.ctx.lineDashOffset = totalLength * (<span class="number">1</span> - t);</span><br><span class="line">    <span class="keyword">this</span>.ctx.beginPath(); <span class="comment">// 開始繪製</span></span><br><span class="line">    <span class="keyword">this</span>.lineCanvas(<span class="keyword">this</span>.dataArray[i]);</span><br><span class="line">    <span class="keyword">this</span>.ctx.strokeStyle = e.color; <span class="comment">// 線顏色</span></span><br><span class="line">    <span class="keyword">this</span>.ctx.stroke(); <span class="comment">// 繪製線</span></span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/*-------------------------</span></span><br><span class="line"><span class="comment">    折點</span></span><br><span class="line"><span class="comment">  -------------------------*/</span></span><br><span class="line">  <span class="keyword">this</span>.dots.forEach(<span class="function">(<span class="params">e, i</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 開始繪製</span></span><br><span class="line">    <span class="keyword">this</span>.ctx.beginPath();</span><br><span class="line">    <span class="comment">// 繪製點</span></span><br><span class="line">    <span class="keyword">this</span>.ctx.arc(e.cx, e.cy, e.r * t, <span class="number">0</span>, <span class="number">2</span> * <span class="built_in">Math</span>.PI);</span><br><span class="line">    <span class="comment">// 填色</span></span><br><span class="line">    <span class="keyword">this</span>.ctx.fillStyle = e.color;</span><br><span class="line">    <span class="keyword">this</span>.ctx.fill();</span><br><span class="line">    <span class="comment">// 邊框色</span></span><br><span class="line">    <span class="keyword">this</span>.ctx.strokeStyle = <span class="string">"#fff"</span>;</span><br><span class="line">    <span class="keyword">this</span>.ctx.stroke();</span><br><span class="line">    <span class="comment">// 結束繪製</span></span><br><span class="line">    <span class="keyword">this</span>.ctx.closePath();</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">this</span>.ctx.restore();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// if this animation is over</span></span><br><span class="line">  <span class="keyword">if</span> (t === <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="comment">// stop this timer since we are done animating.</span></span><br><span class="line">    <span class="keyword">this</span>.timer.stop();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><blockquote><p>繪製的前後順序會影響繪製出來的圖層疊加效果，越後面繪製出來的元素會蓋在舊的元素上方。所以不需動畫的元素(ex: X軸、Y軸、標籤…)才特別拉出來寫成一個 function 放在繪製動畫之前。</p></blockquote><hr><h2 id="不需動畫的元素"><a href="#不需動畫的元素" class="headerlink" title="不需動畫的元素"></a>不需動畫的元素</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br></pre></td><td class="code"><pre><span class="line">drawStatic() &#123; <span class="comment">// 繪製不須動畫的元素</span></span><br><span class="line">  <span class="keyword">let</span> tickSize = <span class="number">6</span>; <span class="comment">// 軸點大小</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/*-------------------------</span></span><br><span class="line"><span class="comment">    X軸</span></span><br><span class="line"><span class="comment">  -------------------------*/</span></span><br><span class="line">  <span class="comment">// 繪製X軸點</span></span><br><span class="line">  <span class="keyword">this</span>.ctx.beginPath();</span><br><span class="line">  <span class="keyword">this</span>.data[<span class="number">0</span>].value.forEach(<span class="function">(<span class="params">d, i</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">this</span>.ctx.moveTo(</span><br><span class="line">      <span class="keyword">this</span>.xScale(i + <span class="number">1</span>) + <span class="keyword">this</span>.chartLeft,</span><br><span class="line">      <span class="keyword">this</span>.chartTop + <span class="keyword">this</span>.chartHeight</span><br><span class="line">    );</span><br><span class="line">    <span class="keyword">this</span>.ctx.lineTo(</span><br><span class="line">      <span class="keyword">this</span>.xScale(i + <span class="number">1</span>) + <span class="keyword">this</span>.chartLeft,</span><br><span class="line">      <span class="keyword">this</span>.chartTop + <span class="keyword">this</span>.chartHeight + tickSize</span><br><span class="line">    );</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">this</span>.ctx.stroke();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 繪製X軸線</span></span><br><span class="line">  <span class="keyword">this</span>.ctx.beginPath();</span><br><span class="line">  <span class="keyword">this</span>.ctx.moveTo(<span class="keyword">this</span>.chartLeft, <span class="keyword">this</span>.chartTop + <span class="keyword">this</span>.chartHeight);</span><br><span class="line">  <span class="keyword">this</span>.ctx.lineTo(</span><br><span class="line">    <span class="keyword">this</span>.chartLeft + <span class="keyword">this</span>.chartWidth,</span><br><span class="line">    <span class="keyword">this</span>.chartTop + <span class="keyword">this</span>.chartHeight</span><br><span class="line">  );</span><br><span class="line">  <span class="keyword">this</span>.ctx.stroke();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 繪製X軸文字</span></span><br><span class="line">  <span class="keyword">this</span>.ctx.textAlign = <span class="string">"center"</span>;</span><br><span class="line">  <span class="keyword">this</span>.ctx.textBaseline = <span class="string">"top"</span>;</span><br><span class="line">  <span class="keyword">this</span>.data[<span class="number">0</span>].value.forEach(<span class="function">(<span class="params">d, i</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">this</span>.ctx.fillText(</span><br><span class="line">      d.month,</span><br><span class="line">      <span class="keyword">this</span>.xScale(i + <span class="number">1</span>) + <span class="keyword">this</span>.chartLeft,</span><br><span class="line">      <span class="keyword">this</span>.chartTop + <span class="keyword">this</span>.chartHeight + tickSize</span><br><span class="line">    );</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 繪製X軸標籤</span></span><br><span class="line">  <span class="keyword">this</span>.data.forEach(<span class="function">(<span class="params">el, index</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 圓點</span></span><br><span class="line">    <span class="comment">// 開始繪製</span></span><br><span class="line">    <span class="keyword">this</span>.ctx.save();</span><br><span class="line">    <span class="keyword">this</span>.ctx.beginPath();</span><br><span class="line">    <span class="comment">// 繪製點</span></span><br><span class="line">    <span class="keyword">this</span>.ctx.arc(</span><br><span class="line">      <span class="keyword">this</span>.chartLeft + index * <span class="number">100</span>,</span><br><span class="line">      <span class="keyword">this</span>.chartTop + <span class="keyword">this</span>.chartHeight + <span class="number">50</span>,</span><br><span class="line">      <span class="number">5</span>,</span><br><span class="line">      <span class="number">0</span>,</span><br><span class="line">      <span class="number">2</span> * <span class="built_in">Math</span>.PI</span><br><span class="line">    );</span><br><span class="line">    <span class="comment">// 填色</span></span><br><span class="line">    <span class="keyword">this</span>.ctx.fillStyle = <span class="keyword">this</span>.color(index);</span><br><span class="line">    <span class="keyword">this</span>.ctx.fill();</span><br><span class="line">    <span class="comment">// 結束繪製</span></span><br><span class="line">    <span class="keyword">this</span>.ctx.closePath();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 文字</span></span><br><span class="line">    <span class="keyword">this</span>.ctx.textAlign = <span class="string">"left"</span>;</span><br><span class="line">    <span class="keyword">this</span>.ctx.textBaseline = <span class="string">"middle"</span>;</span><br><span class="line">    <span class="keyword">this</span>.ctx.font = <span class="string">"16px sans-serif"</span>;</span><br><span class="line">    <span class="keyword">this</span>.ctx.fillStyle = <span class="string">"#000"</span>;</span><br><span class="line">    <span class="keyword">this</span>.ctx.fillText(</span><br><span class="line">      el.name,</span><br><span class="line">      <span class="keyword">this</span>.chartLeft + index * <span class="number">100</span> + <span class="number">10</span>,</span><br><span class="line">      <span class="keyword">this</span>.chartTop + <span class="keyword">this</span>.chartHeight + <span class="number">50</span></span><br><span class="line">    );</span><br><span class="line">    <span class="keyword">this</span>.ctx.restore();</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/*-------------------------</span></span><br><span class="line"><span class="comment">    Y軸</span></span><br><span class="line"><span class="comment">  -------------------------*/</span></span><br><span class="line">  <span class="comment">// Y軸節點</span></span><br><span class="line">  <span class="keyword">this</span>.yTick = <span class="keyword">this</span>.custom</span><br><span class="line">    .append(<span class="string">"g"</span>)</span><br><span class="line">    .attr(<span class="string">"class"</span>, <span class="string">"axis axisY"</span>)</span><br><span class="line">    .call(<span class="keyword">this</span>.yAxis)</span><br><span class="line">    .selectAll(<span class="string">"g.tick"</span>);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 繪製Y軸點</span></span><br><span class="line">  <span class="keyword">this</span>.ctx.beginPath();</span><br><span class="line">  <span class="comment">// 中間內部灰線</span></span><br><span class="line">  <span class="keyword">this</span>.yTick.each(<span class="function">(<span class="params">el, index, arr</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> node = d3.select(arr[index]);</span><br><span class="line">    <span class="keyword">let</span> yTrans = node.attr(<span class="string">"transform"</span>);</span><br><span class="line">    <span class="keyword">let</span> yPos = <span class="built_in">Number</span>(yTrans.split(<span class="string">","</span>)[<span class="number">1</span>].split(<span class="string">")"</span>)[<span class="number">0</span>]) + <span class="keyword">this</span>.chartTop;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 跳過 0 的軸點</span></span><br><span class="line">    <span class="keyword">if</span> (index === <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 繪製軸點</span></span><br><span class="line">    <span class="keyword">this</span>.ctx.moveTo(<span class="keyword">this</span>.chartLeft, yPos);</span><br><span class="line">    <span class="keyword">this</span>.ctx.lineTo(<span class="keyword">this</span>.chartLeft + <span class="keyword">this</span>.chartWidth, yPos);</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">this</span>.ctx.strokeStyle = <span class="string">"#e6e6e6"</span>; <span class="comment">// 線顏色</span></span><br><span class="line">  <span class="keyword">this</span>.ctx.stroke();</span><br><span class="line">  <span class="comment">// 最上方的刻點</span></span><br><span class="line">  <span class="keyword">this</span>.ctx.beginPath();</span><br><span class="line">  <span class="keyword">this</span>.ctx.moveTo(<span class="keyword">this</span>.chartLeft - tickSize, <span class="keyword">this</span>.chartTop);</span><br><span class="line">  <span class="keyword">this</span>.ctx.lineTo(<span class="keyword">this</span>.chartLeft, <span class="keyword">this</span>.chartTop);</span><br><span class="line">  <span class="keyword">this</span>.ctx.strokeStyle = <span class="string">"#000"</span>; <span class="comment">// 線顏色</span></span><br><span class="line">  <span class="keyword">this</span>.ctx.stroke();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 繪製Y軸線</span></span><br><span class="line">  <span class="keyword">this</span>.ctx.beginPath();</span><br><span class="line">  <span class="keyword">this</span>.ctx.moveTo(<span class="keyword">this</span>.chartLeft, <span class="keyword">this</span>.chartTop);</span><br><span class="line">  <span class="keyword">this</span>.ctx.lineTo(<span class="keyword">this</span>.chartLeft, <span class="keyword">this</span>.chartTop + <span class="keyword">this</span>.chartHeight);</span><br><span class="line">  <span class="keyword">this</span>.ctx.stroke();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 繪製Y軸文字</span></span><br><span class="line">  <span class="keyword">this</span>.ctx.textAlign = <span class="string">"right"</span>;</span><br><span class="line">  <span class="keyword">this</span>.ctx.textBaseline = <span class="string">"middle"</span>;</span><br><span class="line">  <span class="keyword">this</span>.yTick.each(<span class="function">(<span class="params">el, index, arr</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> node = d3.select(arr[index]);</span><br><span class="line">    <span class="keyword">let</span> yTrans = node.attr(<span class="string">"transform"</span>);</span><br><span class="line">    <span class="keyword">let</span> yPos = <span class="built_in">Number</span>(yTrans.split(<span class="string">","</span>)[<span class="number">1</span>].split(<span class="string">")"</span>)[<span class="number">0</span>]) + <span class="keyword">this</span>.chartTop;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.ctx.fillText(</span><br><span class="line">      node.property(<span class="string">"innerText"</span>),</span><br><span class="line">      <span class="keyword">this</span>.chartLeft - tickSize,</span><br><span class="line">      yPos</span><br><span class="line">    );</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 繪製Y軸標籤</span></span><br><span class="line">  <span class="comment">// start by saving the current context (current orientation, origin)</span></span><br><span class="line">  <span class="keyword">this</span>.ctx.save();</span><br><span class="line">  <span class="keyword">this</span>.ctx.translate(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">  <span class="keyword">this</span>.ctx.rotate(-<span class="built_in">Math</span>.PI / <span class="number">2</span>);</span><br><span class="line">  <span class="keyword">this</span>.ctx.textAlign = <span class="string">"center"</span>;</span><br><span class="line">  <span class="keyword">this</span>.ctx.textBaseline = <span class="string">"top"</span>;</span><br><span class="line">  <span class="keyword">this</span>.ctx.font = <span class="string">"16px sans-serif"</span>;</span><br><span class="line">  <span class="keyword">this</span>.ctx.fillText(<span class="string">"件數"</span>, -(<span class="keyword">this</span>.chartTop + <span class="keyword">this</span>.chartHeight / <span class="number">2</span>), <span class="number">0</span>);</span><br><span class="line">  <span class="keyword">this</span>.ctx.restore(); <span class="comment">// now restore the canvas flipping it back to its original orientation</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>其他部分跟 <code>SVG</code> 的做法很類似，主要觀念就是要把 <code>html</code>, <code>css</code> rendor 的部分全部移交給 <code>js</code> 做，線上 demo <a href="https://annilla.github.io/d3-practice-vue-canvas/dist/">在此</a>，也可以在 <a href="https://github.com/Annilla/d3-practice-vue-canvas/blob/master/src/components/LineChart.vue" target="_blank" rel="noopener">Github</a>查看完整程式碼，下一篇我們就要來分析 SVG 和 Canvas 的差異和各自的優勢。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前幾篇介紹完 &lt;code&gt;SVG&lt;/code&gt; 的基本繪圖方式後，我們要來練習使用 &lt;code&gt;CANVAS&lt;/code&gt; 來做一樣的折線圖，並在下一篇比較兩者的優缺點。&lt;/p&gt;
    
    </summary>
    
      <category term="D3" scheme="http://annilla.github.io/categories/D3/"/>
    
    
      <category term="Vue" scheme="http://annilla.github.io/tags/Vue/"/>
    
      <category term="D3" scheme="http://annilla.github.io/tags/D3/"/>
    
      <category term="CANVAS" scheme="http://annilla.github.io/tags/CANVAS/"/>
    
  </entry>
  
  <entry>
    <title>D3 v4 with Vue - SVG Donut Chart</title>
    <link href="http://annilla.github.io/2018/05/01/D3/D3-v4-with-Vue-SVG-Donut-Chart/"/>
    <id>http://annilla.github.io/2018/05/01/D3/D3-v4-with-Vue-SVG-Donut-Chart/</id>
    <published>2018-04-30T16:00:00.000Z</published>
    <updated>2018-04-30T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>這次要來練習用 <code>D3</code> 搭配 <code>Vue</code> 做 <code>SVG</code> 甜甜圈圖囉～如果要做中間不要洞的圓餅圖，把內圈半徑改成 0 即可。</p><a id="more"></a><p>一開始想說動畫的部分希望由 <code>CSS</code> <code>transition</code> 來主導 <code>stroke-dasharray</code> 進行動畫，但後來發現沒有實際的圖形範圍做 <code>Tooltip</code> 的功能（因為 <code>CSS</code> 做的圓圈每個都一樣，只是透過 <code>stroke-dasharray</code> 長度不同造成甜甜圈的假象）。所以後來透過 <code>D3</code> 計算每個區塊的 <code>&lt;path&gt;</code> 才得以完成 <code>Tooltip</code> 的功能。因為以上種種的考量後，下面就拆分成兩個部分來解釋，一個部分是執行動畫的 <code>&lt;circle&gt;</code> 部分，另一個則是製作 <code>Tooltip</code> 功能的 <code>&lt;path&gt;</code> 部分。</p><hr><h2 id="執行動畫的-lt-circle-gt"><a href="#執行動畫的-lt-circle-gt" class="headerlink" title="執行動畫的 &lt;circle&gt;"></a>執行動畫的 <code>&lt;circle&gt;</code></h2><p><img src="http://i965.photobucket.com/albums/ae138/anny09117011/Blog/Donut-01-circle.png" alt="執行動畫的 &lt;circle&gt;" title="&lt;circle&gt;"></p><ul><li>HTML</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 執行動畫的圓圈 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">circle</span> <span class="attr">class</span>=<span class="string">"circle"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">v-for</span>=<span class="string">"(c, key) in donut"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">ref</span>=<span class="string">"circles"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">:key</span>=<span class="string">"`$&#123;key&#125;$&#123;c.percentage&#125;$&#123;c.offset&#125;`"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">:r</span>=<span class="string">"radius"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">:cx</span>=<span class="string">"chart.outerRadius"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">:cy</span>=<span class="string">"chart.outerRadius"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">:stroke-width</span>=<span class="string">"chart.outerRadius - chart.innerRadius"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">:stroke-dashoffset</span>=<span class="string">"c.offset"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">:stroke</span>=<span class="string">"c.color"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">fill</span>= <span class="string">"transparent"</span>/&gt;</span></span><br></pre></td></tr></table></figure><ul><li>CSS</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.donutChart</span> &#123;</span><br><span class="line">  <span class="comment">/* 說明 */</span></span><br><span class="line">  .detail &#123;</span><br><span class="line">    <span class="selector-tag">color</span>: <span class="selector-tag">gray</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/* 統計圖 */</span></span><br><span class="line">  <span class="selector-class">.chartContain</span> &#123;</span><br><span class="line">    ....</span><br><span class="line">    <span class="selector-class">.chartWrap</span> &#123;</span><br><span class="line">      ...</span><br><span class="line">      <span class="selector-class">.chart</span> &#123;</span><br><span class="line">        ...</span><br><span class="line">        <span class="comment">/* 因為 &lt;circle&gt; 0 度從右邊開始，但我們想要從上方開始，所以加了往上旋轉 90 度變形 */</span></span><br><span class="line">        <span class="selector-tag">transform</span>: <span class="selector-tag">rotate</span>(<span class="selector-tag">-90deg</span>);</span><br><span class="line">        <span class="selector-class">.circle</span> &#123;</span><br><span class="line">          <span class="attribute">transition</span>: <span class="number">1s</span>; <span class="comment">/* 漸變動畫進行的秒數 */</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>JS</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  computed: &#123;</span><br><span class="line">    <span class="comment">// 圓周長</span></span><br><span class="line">    circum() &#123;</span><br><span class="line">      <span class="comment">// circumference = 2 * pi * radius</span></span><br><span class="line">      <span class="keyword">return</span> <span class="number">2</span> * <span class="built_in">Math</span>.PI * <span class="keyword">this</span>.radius;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 顏色函數</span></span><br><span class="line">    color() &#123;</span><br><span class="line">      <span class="keyword">return</span> d3.scaleOrdinal(d3.schemeCategory20c);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 所有資料值總合</span></span><br><span class="line">    totalSum() &#123;</span><br><span class="line">      <span class="keyword">let</span> sum = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">this</span>.data.length) &#123;</span><br><span class="line">        <span class="keyword">this</span>.data.forEach(<span class="function">(<span class="params">e, i</span>) =&gt;</span> &#123;</span><br><span class="line">          sum = sum + e.value;</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// &lt;circle&gt; 屬性</span></span><br><span class="line">    donut() &#123;</span><br><span class="line">      <span class="keyword">let</span> newArray = [];</span><br><span class="line">      <span class="keyword">let</span> afterPer = <span class="number">0</span>; <span class="comment">// 把前面的 percentage 累加 (0.xxx)</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">// 產生 &lt;circle&gt; 屬性陣列</span></span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">this</span>.data.length) &#123;</span><br><span class="line">        <span class="keyword">this</span>.data.forEach(<span class="function">(<span class="params">e, i</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="comment">// 新增陣列</span></span><br><span class="line">          newArray.push(&#123;</span><br><span class="line">            <span class="comment">// 拿來計算跑動畫的線條長度 （在 randomData 後半）</span></span><br><span class="line">            percentage: e.value / <span class="keyword">this</span>.totalSum * <span class="number">100</span>,</span><br><span class="line">            <span class="comment">// 位移長度 = 圓周長 * (1 - 前面累加的長度比例)</span></span><br><span class="line">            offset: <span class="keyword">this</span>.circum * (<span class="number">1</span> - afterPer),</span><br><span class="line">            color: <span class="keyword">this</span>.color(i) <span class="comment">// 填色</span></span><br><span class="line">          &#125;);</span><br><span class="line"></span><br><span class="line">          <span class="comment">// 把前面的 percentage 累加 (0.xxx)</span></span><br><span class="line">          afterPer = afterPer + e.value / <span class="keyword">this</span>.totalSum;</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> newArray;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  ...</span><br><span class="line">  methods: &#123;</span><br><span class="line">    randomData() &#123;</span><br><span class="line">      ...</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 用 js 跑展開動畫</span></span><br><span class="line">      <span class="keyword">this</span>.$nextTick().then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// DOM updated</span></span><br><span class="line">        <span class="keyword">this</span>.donut.forEach(<span class="function">(<span class="params">el, index</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">let</span> totalTime = <span class="number">100</span>; <span class="comment">// 設定切換 css 狀態的時間間隔</span></span><br><span class="line">          <span class="keyword">let</span> stroke = <span class="keyword">this</span>.dasharray(el.percentage); <span class="comment">// 計算 stroke-dasharray</span></span><br><span class="line"></span><br><span class="line">          <span class="comment">// 起始位置</span></span><br><span class="line">          <span class="keyword">this</span>.$refs.circles[index].style.cssText = <span class="string">`stroke-dasharray: 0 <span class="subst">$&#123;<span class="keyword">this</span>.circum&#125;</span>; opacity: 0`</span>;</span><br><span class="line"></span><br><span class="line">          <span class="comment">// 設定 Interval</span></span><br><span class="line">          setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="comment">// 結束位置</span></span><br><span class="line">            <span class="keyword">this</span>.$refs.circles[index].style.cssText = <span class="string">`stroke-dasharray: <span class="subst">$&#123;stroke.dash&#125;</span> <span class="subst">$&#123;stroke.gap&#125;</span>; opacity: 1`</span>;</span><br><span class="line">          &#125;, totalTime);</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 計算 stroke-dasharray 的 dash &amp; gap</span></span><br><span class="line">    dasharray(percentage) &#123;</span><br><span class="line">      <span class="keyword">let</span> dash = <span class="keyword">this</span>.circum / <span class="number">100</span> * percentage; <span class="comment">// percentage %</span></span><br><span class="line">      <span class="keyword">let</span> gap = <span class="keyword">this</span>.circum / <span class="number">100</span> * (<span class="number">100</span> - percentage);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> &#123; <span class="attr">dash</span>: dash, <span class="attr">gap</span>: gap &#125;;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="製作-Tooltip-功能的-lt-path-gt"><a href="#製作-Tooltip-功能的-lt-path-gt" class="headerlink" title="製作 Tooltip 功能的 &lt;path&gt;"></a>製作 <code>Tooltip</code> 功能的 <code>&lt;path&gt;</code></h2><p><img src="http://i965.photobucket.com/albums/ae138/anny09117011/Blog/Donut-02-tooltippath.png" alt="製作 Tooltip 功能的 &lt;path&gt;" title="&lt;path&gt;"></p><p>這邊你可能會發現很奇怪的事情，就是為什麼上面已經算過百分比了，但這邊還要再算一次？如果仔細看的話，你應該會發現這邊的百分比是用在甜甜圈上方顯示的文字。想一想，如果統計圖出現小數點後十六位數的百分比，是不是超奇怪！！！所以這邊文字其實是透過 <code>D3</code> 格式換算成我們較易閱讀的百分比，並不是真實的比例。</p><ul><li>HTML</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 滑鼠滑過的區塊 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">g</span></span></span><br><span class="line"><span class="tag">  <span class="attr">class</span>=<span class="string">"arc"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">v-for</span>=<span class="string">"(p, key) in pie"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">:key</span>=<span class="string">"`$&#123;key&#125;$&#123;p.d&#125;`"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">:transform</span>=<span class="string">"`translate($&#123;chart.outerRadius&#125;,$&#123;chart.outerRadius&#125;) rotate(90)`"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">v-on:mouseover</span>=<span class="string">"showTooltip(key, $event)"</span> <span class="attr">v-on:mouseout</span>=<span class="string">"hiddenTooltip"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">path</span></span></span><br><span class="line"><span class="tag">    <span class="attr">fill</span>=<span class="string">"transparent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">:d</span>=<span class="string">"p.d"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 文字位置需要由 path 的座標透過 D3 計算，才能把文字放在各自的區塊中間。 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">text</span></span></span><br><span class="line"><span class="tag">    <span class="attr">:transform</span>=<span class="string">"`translate($&#123;p.centroid&#125;)`"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">text-anchor</span>=<span class="string">"middle"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">fill</span>=<span class="string">"white"</span>&gt;</span>&#123;&#123; p.percentage &#125;&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">g</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>JS</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">pie() &#123;</span><br><span class="line">  <span class="keyword">let</span> newArray = [];</span><br><span class="line">  <span class="keyword">let</span> format = d3.format(<span class="string">".0%"</span>); <span class="comment">// D3 格式化單位（百分比）</span></span><br><span class="line">  <span class="keyword">let</span> pie = d3</span><br><span class="line">    .pie() <span class="comment">// 使用 pie 函數</span></span><br><span class="line">    .sort(<span class="literal">null</span>) <span class="comment">// 不做重新排序</span></span><br><span class="line">    .value(<span class="function"><span class="keyword">function</span>(<span class="params">d</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> d.value;</span><br><span class="line">    &#125;)(<span class="keyword">this</span>.data); <span class="comment">// 為了等下要使用 arc 角度，先造好 pie 物件</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 產生 &lt;path&gt; &amp; &lt;text&gt; 屬性陣列</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">this</span>.data.length) &#123;</span><br><span class="line">    <span class="keyword">this</span>.data.forEach(<span class="function">(<span class="params">e, i</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// 準備好 arc 路徑</span></span><br><span class="line">      <span class="keyword">let</span> arc = d3</span><br><span class="line">        .arc() <span class="comment">// 使用 arc 函數</span></span><br><span class="line">        .innerRadius(<span class="keyword">this</span>.chart.innerRadius) <span class="comment">// 甜甜圈內半徑</span></span><br><span class="line">        .outerRadius(<span class="keyword">this</span>.chart.outerRadius); <span class="comment">// 甜甜圈外半徑</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">// 新增陣列</span></span><br><span class="line">      newArray.push(&#123;</span><br><span class="line">        <span class="comment">// 計算 path 路徑，使用剛剛造好的 arc 函數</span></span><br><span class="line">        d: arc(&#123;</span><br><span class="line">          <span class="comment">// 透過上方建立的 pie 函數，得知 arc 的起始角度</span></span><br><span class="line">          startAngle: pie[i].startAngle, </span><br><span class="line">          <span class="comment">// 透過上方建立的 pie 函數，得知 arc 的結束角度</span></span><br><span class="line">          endAngle: pie[i].endAngle</span><br><span class="line">        &#125;),</span><br><span class="line">        <span class="comment">// 使用 arc.centroid 函數取得 &lt;text&gt; 相對於 &lt;path&gt; 位移至正中間 x, y</span></span><br><span class="line">        centroid: arc.centroid(pie[i]),</span><br><span class="line">        <span class="comment">// 將顯示的文字轉成易閱讀的格式</span></span><br><span class="line">        percentage: format(e.value / <span class="keyword">this</span>.totalSum)</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> newArray;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>全部畫好的樣子如下圖，可以去 <a href="https://github.com/Annilla/d3-practice-vue-svg/blob/master/src/components/DonutChart.vue" target="_blank" rel="noopener">Github</a> 查看完整程式碼喔！也可以在<a href="https://annilla.github.io/d3-practice-vue-svg/dist/">這裡</a>查看直條圖的 Demo，我們下回見～</p><p><img src="http://i965.photobucket.com/albums/ae138/anny09117011/Blog/2018-05-01_1701.png" alt="甜甜圈圖完成" title="甜甜圈圖"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;這次要來練習用 &lt;code&gt;D3&lt;/code&gt; 搭配 &lt;code&gt;Vue&lt;/code&gt; 做 &lt;code&gt;SVG&lt;/code&gt; 甜甜圈圖囉～如果要做中間不要洞的圓餅圖，把內圈半徑改成 0 即可。&lt;/p&gt;
    
    </summary>
    
      <category term="D3" scheme="http://annilla.github.io/categories/D3/"/>
    
    
      <category term="Vue" scheme="http://annilla.github.io/tags/Vue/"/>
    
      <category term="D3" scheme="http://annilla.github.io/tags/D3/"/>
    
      <category term="SVG" scheme="http://annilla.github.io/tags/SVG/"/>
    
  </entry>
  
  <entry>
    <title>D3 v4 with Vue - SVG Vertical Bar Chart</title>
    <link href="http://annilla.github.io/2018/04/06/D3/D3-v4-with-Vue-SVG-Vertical-Bar-Chart/"/>
    <id>http://annilla.github.io/2018/04/06/D3/D3-v4-with-Vue-SVG-Vertical-Bar-Chart/</id>
    <published>2018-04-05T16:00:00.000Z</published>
    <updated>2018-04-05T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>這次要來練習用 <code>D3</code> 搭配 <code>Vue</code> 做多組動態的 <code>SVG</code> 直條圖囉～<br><a id="more"></a></p><p>前面幾篇有講過的原理這裡就不再次解釋，我們直接從繪製直條開始說起。</p><hr><h2 id="繪製直條"><a href="#繪製直條" class="headerlink" title="繪製直條"></a>繪製直條</h2><ul><li>HTML</li></ul><p>這邊直條圖外面包了兩次 <code>transition-group</code> 是因為第一次進來頁面的時候，並不會呈現動畫，所以為了 Fixed 這個 Bug 所以外面又包了一次 <code>transition-group</code>。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 直條 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 為了初始有動畫，所以包了兩次 transition-group --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">transition-group</span> <span class="attr">tag</span>=<span class="string">"g"</span> <span class="attr">name</span>=<span class="string">"growBar"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">transition-group</span> <span class="attr">tag</span>=<span class="string">"g"</span> <span class="attr">name</span>=<span class="string">"growBar"</span> <span class="attr">class</span>=<span class="string">"bar"</span> <span class="attr">v-for</span>=<span class="string">"(group, key) in bar"</span> <span class="attr">:key</span>=<span class="string">"`$&#123;key&#125;$&#123;group.rect.height&#125;$&#123;group.rect.x&#125;`"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">rect</span></span></span><br><span class="line"><span class="tag">      <span class="attr">v-for</span>=<span class="string">"(r, k) in group.rect"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:key</span>=<span class="string">"`$&#123;k&#125;$&#123;r.height&#125;$&#123;r.x&#125;`"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:fill</span>=<span class="string">"group.color"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:x</span>=<span class="string">"r.x"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:y</span>=<span class="string">"r.y"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:width</span>=<span class="string">"r.width"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:height</span>=<span class="string">"r.height"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">v-on:mouseover</span>=<span class="string">"showTooltip(key, k, $event)"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">v-on:mouseout</span>=<span class="string">"hiddenTooltip"</span></span></span><br><span class="line"><span class="tag">      &gt;</span><span class="tag">&lt;/<span class="name">rect</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">transition-group</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">transition-group</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>CSS</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 動畫 */</span></span><br><span class="line"><span class="selector-class">.growBar-enter-active</span> &#123; <span class="comment">/* 進入動畫：進行中 */</span></span><br><span class="line">  <span class="comment">/* 動畫時間： 伸縮變形1秒, 透明度1秒 */</span></span><br><span class="line">  <span class="attribute">transition</span>: transform <span class="number">0.7s</span>, opacity <span class="number">1s</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.growBar-enter</span> &#123; <span class="comment">/* 進入動畫：開始 */</span></span><br><span class="line">  <span class="comment">/* 因為直條的起始點 x, y 位於矩形的左上角，</span></span><br><span class="line"><span class="comment">  若用 js 的方式是要同時變動 y 座標和高度，</span></span><br><span class="line"><span class="comment">  但因為我們使用 css transition 的方式，</span></span><br><span class="line"><span class="comment">  所以只能微調縮放和位移的比例，做到近乎相似的效果。</span></span><br><span class="line"><span class="comment">  垂直縮放從0.55開始，垂直位移從-12%開始 */</span></span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">scaleY</span>(0.55) <span class="built_in">translateY</span>(-12%);</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0</span>; <span class="comment">/* 淡入從透明度0開始 */</span></span><br><span class="line">&#125;</span><br><span class="line">......</span><br><span class="line"><span class="comment">/* 統計圖 */</span></span><br><span class="line"><span class="selector-class">.chartContain</span> &#123;</span><br><span class="line">  ....</span><br><span class="line">  <span class="selector-class">.chart</span> &#123;</span><br><span class="line">    ....</span><br><span class="line">    <span class="selector-class">.chartWrap</span> &#123;</span><br><span class="line">      ....</span><br><span class="line">      <span class="comment">/* 因為起始點預設是左上角，所以要改成縮放中心為中間底部開始。</span></span><br><span class="line"><span class="comment">         包了兩次 transition-group 所以群組.bar也要設定縮放中心。 */</span></span><br><span class="line">      <span class="selector-class">.bar</span> &#123;</span><br><span class="line">        <span class="attribute">transform-origin</span>: <span class="number">50%</span> <span class="number">100%</span>;</span><br><span class="line">        rect &#123;</span><br><span class="line">          <span class="selector-tag">transform-origin</span>: 50% 100%;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>JS</li></ul><p>直條寬度(barWidth)和個別 x 座標這兩個比較難懂的地方，在後面會用圖解的方式說明。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 顏色函數</span></span><br><span class="line">color() &#123;</span><br><span class="line">  <span class="keyword">return</span> d3.scaleOrdinal(d3.schemeCategory20c);</span><br><span class="line">&#125;,</span><br><span class="line">barWidth() &#123;</span><br><span class="line">  <span class="comment">/* --------------------</span></span><br><span class="line"><span class="comment">  1. 剩下可放圖的地方 = 圖表寬度 - 左右的間距 (大約是x軸寬除上總刻數+1)</span></span><br><span class="line"><span class="comment">      this.chart.width / (this.valueLength + 1) * this.valueLength</span></span><br><span class="line"><span class="comment">  2. 扣掉長條圖中間的間隔</span></span><br><span class="line"><span class="comment">      - (this.chart.gap * this.data.length)</span></span><br><span class="line"><span class="comment">  3. 剩下的寬度分給所有長條</span></span><br><span class="line"><span class="comment">      / (this.valueLength * this.data.length)</span></span><br><span class="line"><span class="comment">  -------------------- */</span></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    (<span class="keyword">this</span>.chart.width / (<span class="keyword">this</span>.valueLength + <span class="number">1</span>) * <span class="keyword">this</span>.valueLength -</span><br><span class="line">      <span class="keyword">this</span>.chart.gap * <span class="keyword">this</span>.data.length) /</span><br><span class="line">    (<span class="keyword">this</span>.valueLength * <span class="keyword">this</span>.data.length)</span><br><span class="line">  );</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">// 直條座標、顏色</span></span><br><span class="line">bar() &#123;</span><br><span class="line">  <span class="keyword">let</span> rectArray = [];</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 產生直條的陣列</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">this</span>.valueLength) &#123;</span><br><span class="line">    <span class="keyword">this</span>.data.forEach(<span class="function">(<span class="params">group, index</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">let</span> rectGroup = [];</span><br><span class="line"></span><br><span class="line">      group.value.forEach(<span class="function">(<span class="params">e, i</span>) =&gt;</span> &#123;</span><br><span class="line">        rectGroup.push(&#123;</span><br><span class="line">          <span class="comment">/* --------------------</span></span><br><span class="line"><span class="comment">          1. 把群組直條往左推整體的一半</span></span><br><span class="line"><span class="comment">              - this.barWidth * this.data.length / 2</span></span><br><span class="line"><span class="comment">          2. 依個別順序向右平移</span></span><br><span class="line"><span class="comment">              + this.barWidth * index</span></span><br><span class="line"><span class="comment">          -------------------- */</span></span><br><span class="line">          x:</span><br><span class="line">            <span class="keyword">this</span>.xScale(i + <span class="number">1</span>) -</span><br><span class="line">            <span class="keyword">this</span>.barWidth * <span class="keyword">this</span>.data.length / <span class="number">2</span> +</span><br><span class="line">            <span class="keyword">this</span>.barWidth * index, <span class="comment">// 設定x座標</span></span><br><span class="line">          y: <span class="keyword">this</span>.yScale(e.number), <span class="comment">// 設定y座標</span></span><br><span class="line">          width: <span class="keyword">this</span>.barWidth, <span class="comment">// 設定寬度</span></span><br><span class="line">          height: <span class="keyword">this</span>.chart.height - <span class="keyword">this</span>.yScale(e.number) <span class="comment">// 設定高度</span></span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      rectArray.push(&#123;</span><br><span class="line">        rect: rectGroup,</span><br><span class="line">        color: <span class="keyword">this</span>.color(index) <span class="comment">// 設定顏色</span></span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> rectArray;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><hr><h2 id="直條寬度-barWidth"><a href="#直條寬度-barWidth" class="headerlink" title="直條寬度(barWidth)"></a>直條寬度(barWidth)</h2><p><img src="http://i965.photobucket.com/albums/ae138/anny09117011/Blog/A01.png" alt="剩下可放圖的地方 = 圖表寬度 - 左右的間距 (大約是x軸寬除上總刻數+1)" title="剩下可放圖的地方 = 圖表寬度 - 左右的間距 (大約是x軸寬除上總刻數+1)"></p><p><img src="http://i965.photobucket.com/albums/ae138/anny09117011/Blog/A02.png" alt="扣掉長條圖中間的間隔，剩下的寬度分給所有長條" title="扣掉長條圖中間的間隔，剩下的寬度分給所有長條"></p><ol><li><p>剩下可放圖的地方 = 圖表寬度 - 左右的間距 (大約是x軸寬除上總刻數+1)</p></li><li><p>扣掉長條圖中間的間隔</p></li><li><p>剩下的寬度分給所有長條</p></li></ol><hr><h2 id="直條x座標"><a href="#直條x座標" class="headerlink" title="直條x座標"></a>直條x座標</h2><p><img src="http://i965.photobucket.com/albums/ae138/anny09117011/Blog/B01x.png" alt="扣掉長條圖中間的間隔，剩下的寬度分給所有長條" title="扣掉長條圖中間的間隔，剩下的寬度分給所有長條"></p><ol><li><p>把群組直條往左推整體的一半</p></li><li><p>依個別順序向右平移</p></li></ol><p>全部畫好的樣子如下圖，可以去 <a href="https://github.com/Annilla/d3-practice-vue-svg/blob/master/src/components/BarVChart.vue" target="_blank" rel="noopener">Github</a> 查看完整程式碼喔！也可以在<a href="https://annilla.github.io/d3-practice-vue-svg/dist/">這裡</a>查看直條圖的 Demo，我們下回見～</p><p><img src="http://i965.photobucket.com/albums/ae138/anny09117011/Blog/2018-04-06_1105.png" alt="直條圖完成" title="直條圖"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;這次要來練習用 &lt;code&gt;D3&lt;/code&gt; 搭配 &lt;code&gt;Vue&lt;/code&gt; 做多組動態的 &lt;code&gt;SVG&lt;/code&gt; 直條圖囉～&lt;br&gt;
    
    </summary>
    
      <category term="D3" scheme="http://annilla.github.io/categories/D3/"/>
    
    
      <category term="Vue" scheme="http://annilla.github.io/tags/Vue/"/>
    
      <category term="D3" scheme="http://annilla.github.io/tags/D3/"/>
    
      <category term="SVG" scheme="http://annilla.github.io/tags/SVG/"/>
    
  </entry>
  
  <entry>
    <title>D3 v4 with Vue - SVG Horizontal Bar Chart</title>
    <link href="http://annilla.github.io/2018/03/04/D3/D3-v4-with-Vue-SVG-Horizontal-Bar-Chart/"/>
    <id>http://annilla.github.io/2018/03/04/D3/D3-v4-with-Vue-SVG-Horizontal-Bar-Chart/</id>
    <published>2018-03-03T16:00:00.000Z</published>
    <updated>2018-03-03T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>今天要來練習用 <code>D3</code> 搭配 <code>Vue</code> 做簡易的 <code>SVG</code> 橫條圖囉～</p><a id="more"></a><p>上一篇有描述過:</p><ul><li><p>準備 <code>SVG</code> 畫布</p></li><li><p>準備隨機資料</p></li><li><p>加上提示資料的 tooltip</p></li></ul><p>這幾個部分大同小異，所以這裡就不再次解釋，我們直接從處理座標軸開始說起。</p><hr><h2 id="插入座標軸"><a href="#插入座標軸" class="headerlink" title="插入座標軸"></a>插入座標軸</h2><ul><li>HTML</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- X軸座標 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">g</span> <span class="attr">:transform</span>=<span class="string">"`translate(0, $&#123;chart.height&#125;)`"</span> <span class="attr">class</span>=<span class="string">"axis axisX"</span> <span class="attr">fill</span>=<span class="string">"none"</span> <span class="attr">font-size</span>=<span class="string">"10"</span> <span class="attr">font-family</span>=<span class="string">"sans-serif"</span> <span class="attr">text-anchor</span>=<span class="string">"middle"</span>&gt;</span><span class="tag">&lt;/<span class="name">g</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Y軸座標 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">g</span> <span class="attr">class</span>=<span class="string">"axis axisY"</span> <span class="attr">fill</span>=<span class="string">"none"</span> <span class="attr">font-size</span>=<span class="string">"10"</span> <span class="attr">font-family</span>=<span class="string">"sans-serif"</span> <span class="attr">text-anchor</span>=<span class="string">"end"</span>&gt;</span><span class="tag">&lt;/<span class="name">g</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Y軸標籤 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">"axisYText"</span> <span class="attr">:x</span>=<span class="string">"axisYText[0]"</span> <span class="attr">:y</span>=<span class="string">"axisYText[1]"</span> <span class="attr">dy</span>=<span class="string">"1em"</span> <span class="attr">text-anchor</span>=<span class="string">"middle"</span>&gt;</span>件數<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>CSS</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.chart</span> &#123;</span><br><span class="line">  ......</span><br><span class="line">  <span class="selector-class">.chartWrap</span> &#123;</span><br><span class="line">    .axis.axisX &#123;</span><br><span class="line">      <span class="selector-class">.domain</span> &#123;</span><br><span class="line">        <span class="attribute">display</span>: none;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="selector-class">.tick</span> &#123;</span><br><span class="line">        line &#123;</span><br><span class="line">          <span class="selector-tag">stroke</span>: <span class="selector-id">#efefef</span>;</span><br><span class="line">          <span class="selector-tag">stroke-width</span>: 2;</span><br><span class="line">          <span class="selector-tag">stroke-dasharray</span>: 1, 6;</span><br><span class="line">          <span class="selector-tag">stroke-linecap</span>: <span class="selector-tag">round</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>JS</li></ul><p>因程式碼過多，這邊只講用到的 D3 函數部分，文章最後會有完整程式碼連結。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// X軸線性比例縮放</span></span><br><span class="line">xScale() &#123;</span><br><span class="line">  <span class="keyword">let</span> Xmin = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">let</span> Xmax; <span class="comment">// 找出所有X值的最大</span></span><br><span class="line">  <span class="keyword">let</span> newArray = [];</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 找出所有X值的最大數</span></span><br><span class="line">  <span class="keyword">this</span>.data.value.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    newArray.push(e.number);</span><br><span class="line">  &#125;);</span><br><span class="line">  Xmax = d3.max(newArray);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> d3</span><br><span class="line">    .scaleLinear() <span class="comment">// 線性縮放函式</span></span><br><span class="line">    .domain([Xmin, Xmax]) <span class="comment">// 設定轉換後的定義域</span></span><br><span class="line">    .range([<span class="number">0</span>, <span class="keyword">this</span>.chart.width]); <span class="comment">// 設定轉換前的範圍</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">// X軸設定</span></span><br><span class="line">xAxis() &#123;</span><br><span class="line">  <span class="keyword">return</span> d3</span><br><span class="line">    .axisBottom(<span class="keyword">this</span>.xScale) <span class="comment">// 下方座標軸函式</span></span><br><span class="line">    .tickSizeInner(-<span class="keyword">this</span>.chart.width); <span class="comment">// 設定内侧刻度大小</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Y軸線性比例縮放</span></span><br><span class="line">yScale() &#123;</span><br><span class="line">  <span class="keyword">return</span> d3</span><br><span class="line">    .scaleLinear() <span class="comment">// 線性縮放函式</span></span><br><span class="line">    .domain([<span class="number">0</span>, <span class="keyword">this</span>.data.value.length + <span class="number">1</span>]) <span class="comment">// 設定轉換後的定義域</span></span><br><span class="line">    .range([<span class="keyword">this</span>.chart.height, <span class="number">0</span>]); <span class="comment">// 設定轉換前的範圍</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">// Y軸設定</span></span><br><span class="line">yAxis() &#123;</span><br><span class="line">  <span class="comment">// 計算座標軸標註點個數，小於三個月要多加一個標註點 （ex: 6~10月，共 5 個標註點）</span></span><br><span class="line">  <span class="keyword">let</span> tickNum =</span><br><span class="line">    <span class="keyword">this</span>.valueLength &lt; <span class="number">3</span> ? <span class="keyword">this</span>.valueLength + <span class="number">1</span> : <span class="keyword">this</span>.valueLength;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> d3</span><br><span class="line">    .axisLeft(<span class="keyword">this</span>.yScale) <span class="comment">// 左方座標軸函式</span></span><br><span class="line">    .ticks(tickNum) <span class="comment">// 設定座標軸標註點個數</span></span><br><span class="line">    .tickFormat(<span class="function">(<span class="params">d, i</span>) =&gt;</span> &#123; <span class="comment">// 設定標註點呈現的文字陣列</span></span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">this</span>.yLabel[i];</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>在每次隨機資料後，動態插入座標軸。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">randomData() &#123;</span><br><span class="line">  ......</span><br><span class="line">  <span class="comment">//清除坐標軸</span></span><br><span class="line">  <span class="built_in">document</span>.querySelector(<span class="string">".chart .axisX"</span>).innerHTML = <span class="string">""</span>;</span><br><span class="line">  <span class="built_in">document</span>.querySelector(<span class="string">".chart .axisY"</span>).innerHTML = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 插入X軸座標</span></span><br><span class="line">  d3.select(<span class="string">".chart .axisX"</span>).call(<span class="keyword">this</span>.xAxis);</span><br><span class="line">  <span class="comment">// 插入Y軸座標</span></span><br><span class="line">  d3.select(<span class="string">".chart .axisY"</span>).call(<span class="keyword">this</span>.yAxis);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><hr><h2 id="繪製橫條"><a href="#繪製橫條" class="headerlink" title="繪製橫條"></a>繪製橫條</h2><ul><li>HTML</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 橫條 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">transition-group</span> <span class="attr">tag</span>=<span class="string">"g"</span> <span class="attr">name</span>=<span class="string">"growBarp"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">rect</span> <span class="attr">class</span>=<span class="string">"bar"</span> <span class="attr">v-for</span>=<span class="string">"(rect, key) in bar"</span> <span class="attr">:key</span>=<span class="string">"`$&#123;key&#125;$&#123;rect.width&#125;$&#123;rect.y&#125;`"</span> <span class="attr">:fill</span>=<span class="string">"rect.color"</span> <span class="attr">:x</span>=<span class="string">"rect.x"</span> <span class="attr">:y</span>=<span class="string">"rect.y"</span> <span class="attr">:width</span>=<span class="string">"rect.width"</span> <span class="attr">:height</span>=<span class="string">"rect.height"</span> <span class="attr">v-on:mouseover</span>=<span class="string">"showTooltip(key, $event)"</span> <span class="attr">v-on:mouseout</span>=<span class="string">"hiddenTooltip"</span>&gt;</span><span class="tag">&lt;/<span class="name">rect</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">transition-group</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>CSS</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 動畫 */</span></span><br><span class="line"><span class="selector-class">.growBarp-enter-active</span> &#123; <span class="comment">/* 進入動畫：進行中 */</span></span><br><span class="line">  <span class="attribute">transition</span>: all <span class="number">1s</span>; <span class="comment">/* 動畫時間： 1秒 */</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.growBarp-enter</span> &#123; <span class="comment">/* 進入動畫：開始 */</span></span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">scaleX</span>(0); <span class="comment">/* 水平縮放從0開始 */</span></span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0</span>; <span class="comment">/* 淡入從透明度0開始 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>JS</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 顏色函數</span></span><br><span class="line">color() &#123;</span><br><span class="line">  <span class="comment">// 使用 D3 內建 10種顏色輪迴的函式</span></span><br><span class="line">  <span class="keyword">return</span> d3.scaleOrdinal(d3.schemeCategory10);</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">// 橫條寬度、間隔設定</span></span><br><span class="line">barWidth() &#123;</span><br><span class="line">  <span class="comment">// 間隔</span></span><br><span class="line">  <span class="keyword">let</span> gap = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 計算橫條的寬度</span></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">this</span>.chart.height / (<span class="keyword">this</span>.valueLength + <span class="number">1</span>) - gap;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">// 橫條座標、顏色</span></span><br><span class="line">bar() &#123;</span><br><span class="line">  <span class="keyword">let</span> rectArray = [];</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 產生橫條的陣列</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">this</span>.data.value) &#123;</span><br><span class="line">    <span class="keyword">this</span>.data.value.forEach(<span class="function">(<span class="params">e, i</span>) =&gt;</span> &#123;</span><br><span class="line">      rectArray.push(&#123;</span><br><span class="line">        color: <span class="keyword">this</span>.color(<span class="number">0</span>), <span class="comment">// 設定顏色</span></span><br><span class="line">        x: <span class="number">0</span>, <span class="comment">// 設定x座標</span></span><br><span class="line">        y: <span class="keyword">this</span>.yScale(i + <span class="number">1</span>) - <span class="keyword">this</span>.barWidth / <span class="number">2</span>, <span class="comment">// 設定y座標</span></span><br><span class="line">        width: <span class="keyword">this</span>.xScale(e.number), <span class="comment">// 設定寬度</span></span><br><span class="line">        height: <span class="keyword">this</span>.barWidth <span class="comment">// 設定高度</span></span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> rectArray;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">// 橫條文字座標、內容</span></span><br><span class="line">barText() &#123;</span><br><span class="line">  <span class="keyword">let</span> textArray = [];</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 產生橫條文字的陣列</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">this</span>.data.value) &#123;</span><br><span class="line">    <span class="keyword">this</span>.data.value.forEach(<span class="function">(<span class="params">e, i</span>) =&gt;</span> &#123;</span><br><span class="line">      textArray.push(&#123;</span><br><span class="line">        x: <span class="keyword">this</span>.xScale(e.number) - <span class="number">20</span>, <span class="comment">// 設定x座標</span></span><br><span class="line">        y: <span class="keyword">this</span>.yScale(i + <span class="number">1</span>) + <span class="number">5</span>, <span class="comment">// 設定y座標</span></span><br><span class="line">        number: e.number <span class="comment">// 設定顯示的值</span></span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> textArray;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>全部畫好的樣子如下圖，可以去 <a href="https://github.com/Annilla/d3-practice-vue-svg/blob/master/src/components/BarPChart.vue" target="_blank" rel="noopener">Github</a> 查看完整程式碼喔！也可以在<a href="https://annilla.github.io/d3-practice-vue-svg/dist/">這裡</a>查看橫條圖的 Demo，我們下回見～</p><p><img src="http://i965.photobucket.com/albums/ae138/anny09117011/Blog/2018-03-04_1029.png" alt="橫條圖完成" title="橫條圖"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天要來練習用 &lt;code&gt;D3&lt;/code&gt; 搭配 &lt;code&gt;Vue&lt;/code&gt; 做簡易的 &lt;code&gt;SVG&lt;/code&gt; 橫條圖囉～&lt;/p&gt;
    
    </summary>
    
      <category term="D3" scheme="http://annilla.github.io/categories/D3/"/>
    
    
      <category term="Vue" scheme="http://annilla.github.io/tags/Vue/"/>
    
      <category term="D3" scheme="http://annilla.github.io/tags/D3/"/>
    
      <category term="SVG" scheme="http://annilla.github.io/tags/SVG/"/>
    
  </entry>
  
  <entry>
    <title>D3 v4 with Vue - SVG Line Chart</title>
    <link href="http://annilla.github.io/2018/02/03/D3/D3-v4-with-Vue-SVG-Line-Chart/"/>
    <id>http://annilla.github.io/2018/02/03/D3/D3-v4-with-Vue-SVG-Line-Chart/</id>
    <published>2018-02-02T16:00:00.000Z</published>
    <updated>2018-02-02T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><code>D3</code> 是一個 <code>js library</code> ，讓開發者在向量繪圖時，能快速算出圖表物件在繪圖區域的路徑座標、座標軸、動態顏色等許多好用的 <code>function</code>。</p><a id="more"></a><p>本系列文章採用 <code>vue</code> 搭配 <code>D3</code> 是因為使用 <code>data</code> 驅動畫面的方式，會比直接操作 <code>DOM</code> 的效能更好。 <code>D3</code> 內建的繪製功能是類似於 <code>jquery</code> 的方式直接操作 <code>DOM</code> ，當資料變多時可能會拖垮效能出現延遲的畫面，網路上許多教程初期是用此方式，想看的話 <code>google</code> 一下就有囉～</p><p>此系列文章 <code>D3</code> 專注於使用他本身的計算函數和座標軸等優勢的功能，至於畫面更新等其他雜事就交給 <code>vue</code> 處理。當然，未來還有更多優化效能的方式，例如：SVG 換成 CANVAS 等，但都有其優缺點，等之後有空再來做比較。</p><hr><h2 id="準備-SVG-畫布"><a href="#準備-SVG-畫布" class="headerlink" title="準備 SVG 畫布"></a>準備 <code>SVG</code> 畫布</h2><ul><li>HTML</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">svg</span> <span class="attr">class</span>=<span class="string">"chart"</span> <span class="attr">:viewBox</span>=<span class="string">"viewBox"</span> <span class="attr">preserveAspectRatio</span>=<span class="string">"xMidYMin slice"</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 左上角起始點 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">g</span> <span class="attr">class</span>=<span class="string">"chartWrap"</span> <span class="attr">:transform</span>=<span class="string">"startPoint"</span>&gt;</span></span><br><span class="line">  ...</span><br><span class="line">  <span class="tag">&lt;/<span class="name">g</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>CSS</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.chart</span> &#123;</span><br><span class="line">  <span class="comment">/* For IE Browser Auto Detact Width and Height (RWD)*/</span></span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">padding-bottom</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">1px</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: visible;</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>JS</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> d3 <span class="keyword">from</span> <span class="string">"d3"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      data: [], <span class="comment">// From randomData()</span></span><br><span class="line">      chart: &#123; <span class="comment">// 畫布大小和預留的 padding</span></span><br><span class="line">        width: <span class="number">500</span>,</span><br><span class="line">        height: <span class="number">500</span>,</span><br><span class="line">        paddingTop: <span class="number">30</span>,</span><br><span class="line">        paddingRight: <span class="number">30</span>,</span><br><span class="line">        paddingBottom: <span class="number">100</span>,</span><br><span class="line">        paddingLeft: <span class="number">60</span></span><br><span class="line">      &#125;,</span><br><span class="line">      hideTooltip: <span class="literal">true</span> <span class="comment">// 控制 tooltip 顯示隱藏</span></span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  computed: &#123;</span><br><span class="line">    <span class="comment">// 可視區域</span></span><br><span class="line">    viewBox() &#123;</span><br><span class="line">      <span class="keyword">let</span> viewW =</span><br><span class="line">        <span class="keyword">this</span>.chart.width + <span class="keyword">this</span>.chart.paddingRight + <span class="keyword">this</span>.chart.paddingLeft;</span><br><span class="line">      <span class="keyword">let</span> viewH =</span><br><span class="line">        <span class="keyword">this</span>.chart.height + <span class="keyword">this</span>.chart.paddingTop + <span class="keyword">this</span>.chart.paddingBottom;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> <span class="string">`0 0 <span class="subst">$&#123;viewW&#125;</span> <span class="subst">$&#123;viewH&#125;</span>`</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 畫圖起始點</span></span><br><span class="line">    startPoint() &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">`translate(<span class="subst">$&#123;<span class="keyword">this</span>.chart.paddingLeft&#125;</span>, <span class="subst">$&#123;<span class="keyword">this</span>.chart.paddingTop&#125;</span>)`</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    ...</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="準備隨機資料"><a href="#準備隨機資料" class="headerlink" title="準備隨機資料"></a>準備隨機資料</h2><ul><li>JS</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">methods: &#123;</span><br><span class="line">  randomData() &#123;</span><br><span class="line">    <span class="keyword">let</span> min = <span class="number">0</span>; <span class="comment">// 隨機產生數值的最小值</span></span><br><span class="line">    <span class="keyword">let</span> max = <span class="number">500</span>; <span class="comment">// 隨機產生數值的最大值</span></span><br><span class="line">    <span class="keyword">let</span> random = [ <span class="comment">// 資料結構</span></span><br><span class="line">      &#123;</span><br><span class="line">        name: <span class="string">"鼓山區"</span>,</span><br><span class="line">        value: [</span><br><span class="line">          &#123;</span><br><span class="line">            month: <span class="string">"6月"</span>,</span><br><span class="line">            number: <span class="string">"233"</span></span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            month: <span class="string">"7月"</span>,</span><br><span class="line">            number: <span class="string">"412"</span></span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            month: <span class="string">"8月"</span>,</span><br><span class="line">            number: <span class="string">"533"</span></span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            month: <span class="string">"9月"</span>,</span><br><span class="line">            number: <span class="string">"267"</span></span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            month: <span class="string">"10月"</span>,</span><br><span class="line">            number: <span class="string">"321"</span></span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      ...</span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 隨機產生資料</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">      random[i].value.forEach(<span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">        e.number = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * (max - min + <span class="number">1</span>)) + min;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.data = random;</span><br><span class="line">    </span><br><span class="line">    ...</span><br><span class="line">    </span><br><span class="line">  &#125;,</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="插入座標軸"><a href="#插入座標軸" class="headerlink" title="插入座標軸"></a>插入座標軸</h2><ul><li>HTML</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- X軸座標 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">g</span> <span class="attr">:transform</span>=<span class="string">"`translate(0, $&#123;chart.height&#125;)`"</span> <span class="attr">class</span>=<span class="string">"axis axisX"</span> <span class="attr">fill</span>=<span class="string">"none"</span> <span class="attr">font-size</span>=<span class="string">"10"</span> <span class="attr">font-family</span>=<span class="string">"sans-serif"</span> <span class="attr">text-anchor</span>=<span class="string">"middle"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">g</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Y軸座標 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">g</span> <span class="attr">class</span>=<span class="string">"axis axisY"</span> <span class="attr">fill</span>=<span class="string">"none"</span> <span class="attr">font-size</span>=<span class="string">"10"</span> <span class="attr">font-family</span>=<span class="string">"sans-serif"</span> <span class="attr">text-anchor</span>=<span class="string">"end"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">g</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Y軸標籤 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">"axisYText"</span> <span class="attr">:x</span>=<span class="string">"axisYText[0]"</span> <span class="attr">:y</span>=<span class="string">"axisYText[1]"</span> <span class="attr">dy</span>=<span class="string">"1em"</span> <span class="attr">transform</span>=<span class="string">"rotate(-90)"</span> <span class="attr">text-anchor</span>=<span class="string">"middle"</span>&gt;</span>件數<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>CSS</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.chart</span> &#123;</span><br><span class="line">  ...</span><br><span class="line">  <span class="selector-class">.chartWrap</span> &#123;</span><br><span class="line">    .axis.axisY &#123;</span><br><span class="line">      <span class="selector-class">.tick</span> &#123;</span><br><span class="line">        line &#123;</span><br><span class="line">          <span class="selector-tag">stroke</span>: <span class="selector-id">#efefef</span>;</span><br><span class="line">          <span class="selector-tag">transform</span>: <span class="selector-tag">translateX</span>(1<span class="selector-tag">px</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        &amp;<span class="selector-pseudo">:nth-child(2)</span> &#123;</span><br><span class="line">          line &#123;</span><br><span class="line">            <span class="selector-tag">stroke</span>: <span class="selector-tag">black</span>;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.line</span> &#123;</span><br><span class="line">      <span class="attribute">stroke-dasharray</span>: <span class="number">3000</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>JS</li></ul><p>因程式碼過多，這邊只講用到的 D3 函數部分，文章最後會有完整程式碼連結。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// X軸線性比例縮放</span></span><br><span class="line">xScale() &#123;</span><br><span class="line">  <span class="keyword">return</span> d3</span><br><span class="line">    .scaleLinear() <span class="comment">// 線性縮放函式</span></span><br><span class="line">    .domain([<span class="number">0</span>, <span class="keyword">this</span>.data[<span class="number">0</span>].value.length]) <span class="comment">// 設定轉換後的定義域</span></span><br><span class="line">    .range([<span class="number">0</span>, <span class="keyword">this</span>.chart.width]); <span class="comment">// 設定轉換前的範圍</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">// X軸設定</span></span><br><span class="line">xAxis() &#123;</span><br><span class="line">  <span class="keyword">return</span> d3</span><br><span class="line">    .axisBottom(<span class="keyword">this</span>.xScale) <span class="comment">// 下方座標軸函式</span></span><br><span class="line">    .ticks(<span class="number">5</span>) <span class="comment">// 設定座標軸標註點個數 （6~10月，共 5 個標註點）</span></span><br><span class="line">    .tickFormat(<span class="function">(<span class="params">d, i</span>) =&gt;</span> &#123; <span class="comment">// 設定標註點呈現的文字陣列</span></span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">this</span>.xLabel[i];</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Y軸線性比例縮放</span></span><br><span class="line">yScale() &#123;</span><br><span class="line">  <span class="keyword">let</span> Ymin = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">let</span> Ymax; <span class="comment">// 找出所有Y值的最大</span></span><br><span class="line">  <span class="keyword">let</span> newArray = [];</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 找出所有Y值的最大數</span></span><br><span class="line">  <span class="keyword">this</span>.data.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">e, i</span>) </span>&#123;</span><br><span class="line">    e.value.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">ev</span>) </span>&#123;</span><br><span class="line">      newArray.push(ev.number);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">  Ymax = d3.max(newArray); <span class="comment">// D3找最大值函數</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> d3</span><br><span class="line">    .scaleLinear() <span class="comment">// 線性縮放函式</span></span><br><span class="line">    .domain([Ymin, Ymax]) <span class="comment">// 設定轉換後的定義域</span></span><br><span class="line">    .range([<span class="keyword">this</span>.chart.height, <span class="number">0</span>]); <span class="comment">// 設定轉換前的範圍</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">// Y軸設定</span></span><br><span class="line">yAxis() &#123;</span><br><span class="line">  <span class="keyword">return</span> d3</span><br><span class="line">    .axisLeft(<span class="keyword">this</span>.yScale) <span class="comment">// 左方座標軸函式</span></span><br><span class="line">    .tickSizeInner(-<span class="keyword">this</span>.chart.height); <span class="comment">// 設定内侧刻度大小</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><blockquote><p>内侧刻度 (tickSizeInner) 和外侧刻度 (tickSizeOuter) 不同，内侧刻度是一个个单独的line元素，而外侧刻度则实际上是坐标轴线path的一部分。</p></blockquote><p>在每次隨機資料後，動態插入座標軸。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">methods: &#123;</span><br><span class="line">  randomData() &#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="comment">//清除上一次的坐標軸</span></span><br><span class="line">    <span class="built_in">document</span>.querySelector(<span class="string">'.chart .axisX'</span>).innerHTML = <span class="string">''</span>;</span><br><span class="line">    <span class="built_in">document</span>.querySelector(<span class="string">'.chart .axisY'</span>).innerHTML = <span class="string">''</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 插入X軸座標</span></span><br><span class="line">    d3</span><br><span class="line">      .select(<span class="string">".chart .axisX"</span>)</span><br><span class="line">      .call(<span class="keyword">this</span>.xAxis);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 插入Y軸座標</span></span><br><span class="line">    d3</span><br><span class="line">      .select(<span class="string">".chart .axisY"</span>)</span><br><span class="line">      .call(<span class="keyword">this</span>.yAxis);</span><br><span class="line">  &#125;,</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="繪製折線"><a href="#繪製折線" class="headerlink" title="繪製折線"></a>繪製折線</h2><ul><li>HTML</li></ul><p>注意： <code>transition-group</code> 標籤是拿來做折線 <code>CSS</code> 的動畫效果，這邊以效能考量皆採用 <code>CSS</code> 來做動畫，搭配 <code>vue</code> <code>transition</code> 動態加上 <code>class</code> ，並不建議用 <code>JS</code> 的方法去計算動畫。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 折線 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">transition-group</span> <span class="attr">tag</span>=<span class="string">"g"</span> <span class="attr">name</span>=<span class="string">"growLine"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">path</span> <span class="attr">class</span>=<span class="string">"line"</span> <span class="attr">v-for</span>=<span class="string">"(path, key) in line"</span> <span class="attr">:key</span>=<span class="string">"`$&#123;key&#125;$&#123;path.d&#125;`"</span> <span class="attr">fill</span>=<span class="string">"none"</span> <span class="attr">:stroke</span>=<span class="string">"path.color"</span> <span class="attr">:d</span>=<span class="string">"path.d"</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">transition-group</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>CSS</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 動畫 */</span></span><br><span class="line"><span class="selector-class">.growLine-enter-active</span> &#123; <span class="comment">/* 進入動畫：進行中 */</span></span><br><span class="line">  <span class="attribute">transition</span>: all <span class="number">2s</span>;  <span class="comment">/* 動畫時間： 2秒 */</span></span><br><span class="line">  <span class="attribute">stroke-dashoffset</span>: <span class="number">0</span>; <span class="comment">/* 畫線效果 */</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.growLine-enter</span> &#123; <span class="comment">/* 進入動畫：開始 */</span></span><br><span class="line">  <span class="attribute">stroke-dashoffset</span>: <span class="number">3000</span>; <span class="comment">/* 畫線效果 */</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 統計圖 */</span></span><br><span class="line"><span class="selector-class">.chartContain</span> &#123;</span><br><span class="line">  ...</span><br><span class="line">  <span class="selector-class">.chart</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="selector-class">.chartWrap</span> &#123;</span><br><span class="line">      ...</span><br><span class="line">      <span class="selector-class">.line</span> &#123;</span><br><span class="line">        <span class="attribute">stroke-dasharray</span>: <span class="number">3000</span>; <span class="comment">/* 畫線效果 */</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><ul><li>JS</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">computed: &#123;</span><br><span class="line">  ...</span><br><span class="line">  <span class="comment">// 動態顏色</span></span><br><span class="line">  color() &#123;</span><br><span class="line">    <span class="comment">// 使用 D3 內建 10種顏色輪迴的函式</span></span><br><span class="line">    <span class="keyword">return</span> d3.scaleOrdinal(d3.schemeCategory10);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 折線座標、顏色</span></span><br><span class="line">  line() &#123;</span><br><span class="line">    <span class="keyword">let</span> line = d3</span><br><span class="line">      .line() <span class="comment">// 折線函式</span></span><br><span class="line">      .x(<span class="function">(<span class="params">d, i</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 利用尺度運算資料索引，傳回 x 的位置</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.xScale(i + <span class="number">1</span>);</span><br><span class="line">      &#125;)</span><br><span class="line">      .y(<span class="function"><span class="params">d</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 利用尺度運算資料的值，傳回 y 的位置</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.yScale(d);</span><br><span class="line">      &#125;);</span><br><span class="line">    <span class="keyword">let</span> pathArray = [];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.dataArray.forEach(<span class="function">(<span class="params">e, i</span>) =&gt;</span> &#123;</span><br><span class="line">      pathArray.push(&#123;<span class="attr">d</span>: line(e), <span class="attr">color</span>: <span class="keyword">this</span>.color(i)&#125;);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> pathArray;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="繪製點"><a href="#繪製點" class="headerlink" title="繪製點"></a>繪製點</h2><ul><li>HTML</li></ul><p>注意： <code>showTooltip</code>, <code>hiddenTooltip</code> 是拿來做滑過物件顯示數據資料的 <code>tooltip</code> 功能，在下一段會提到，這邊先純粹解釋繪製折點的部分。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 點 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">g</span> <span class="attr">class</span>=<span class="string">"dot"</span> <span class="attr">v-for</span>=<span class="string">"(group, key) in dot"</span> <span class="attr">:key</span>=<span class="string">"key"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">transition-group</span> <span class="attr">tag</span>=<span class="string">"g"</span> <span class="attr">name</span>=<span class="string">"growDot"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">circle</span> <span class="attr">v-for</span>=<span class="string">"(c, k) in group.circle"</span> <span class="attr">:key</span>=<span class="string">"`$&#123;k&#125;$&#123;c.cx&#125;$&#123;c.cy&#125;`"</span> <span class="attr">:cx</span>=<span class="string">"c.cx"</span> <span class="attr">:cy</span>=<span class="string">"c.cy"</span> <span class="attr">r</span>=<span class="string">"5"</span> <span class="attr">:fill</span>=<span class="string">"group.color"</span> <span class="attr">stroke</span>=<span class="string">"white"</span> <span class="attr">v-on:mouseover</span>=<span class="string">"showTooltip(key, k, $event)"</span> <span class="attr">v-on:mouseout</span>=<span class="string">"hiddenTooltip"</span>&gt;</span><span class="tag">&lt;/<span class="name">circle</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">transition-group</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">g</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>CSS</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 動畫 */</span></span><br><span class="line"><span class="selector-class">.growDot-enter-active</span> &#123; <span class="comment">/* 進入動畫：進行中 */</span></span><br><span class="line">  <span class="attribute">transition</span>: all <span class="number">1s</span>;  <span class="comment">/* 動畫時間： 1秒 */</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.growDot-enter</span> &#123; <span class="comment">/* 進入動畫：開始 */</span></span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0</span>;  <span class="comment">/* 淡入效果 */</span></span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">scale</span>(0);  <span class="comment">/* 從 0 開始縮放 */</span></span><br><span class="line">  <span class="attribute">transform-origin</span>: <span class="number">50%</span>; <span class="comment">/* 從中心點做縮放 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>JS</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">computed: &#123;</span><br><span class="line">  <span class="comment">// 折點座標、顏色</span></span><br><span class="line">  dot() &#123;</span><br><span class="line">    <span class="keyword">let</span> circleArray = [];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.dataArray.forEach(<span class="function">(<span class="params">group, i</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">let</span> circleGroup = [];</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 設置點座標</span></span><br><span class="line">      group.forEach(<span class="function">(<span class="params">number, index</span>) =&gt;</span> &#123;</span><br><span class="line">        circleGroup.push(&#123;</span><br><span class="line">          cx: <span class="keyword">this</span>.xScale(index + <span class="number">1</span>),</span><br><span class="line">          cy: <span class="keyword">this</span>.yScale(number),</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 同一群的點用相同顏色</span></span><br><span class="line">      circleArray.push(&#123;</span><br><span class="line">        circle: circleGroup,</span><br><span class="line">        color: <span class="keyword">this</span>.color(i)</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> circleArray;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="加上提示資料點的-tooltip"><a href="#加上提示資料點的-tooltip" class="headerlink" title="加上提示資料點的 tooltip"></a>加上提示資料點的 <code>tooltip</code></h2><ul><li>CSS</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">  <span class="selector-class">.tooltip</span> &#123;</span><br><span class="line">    <span class="attribute">min-width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(0, 0, 0, 0.9);</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">6px</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">text-align</span>: left;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">1.5em</span>;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">1</span>;</span><br><span class="line">    &amp;.hidden &#123;</span><br><span class="line">      <span class="selector-tag">visibility</span>: <span class="selector-tag">hidden</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><ul><li>JS</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">methods: &#123;</span><br><span class="line">  showTooltip(index1, index2, event) &#123;</span><br><span class="line">    <span class="keyword">let</span> mouseX = event.clientX + <span class="number">20</span>;</span><br><span class="line">    <span class="keyword">let</span> mouseY = event.clientY;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 設置位置</span></span><br><span class="line">    <span class="built_in">document</span>.querySelector(<span class="string">'.tooltip'</span>).setAttribute(<span class="string">'style'</span>, <span class="string">`left: <span class="subst">$&#123;mouseX&#125;</span>px; top: <span class="subst">$&#123;mouseY&#125;</span>px;`</span>);</span><br><span class="line">    <span class="comment">// 插入名稱</span></span><br><span class="line">    <span class="built_in">document</span>.querySelector(<span class="string">'.tooltip .name'</span>).innerHTML = <span class="string">`<span class="subst">$&#123;<span class="keyword">this</span>.data[index1].name&#125;</span> / <span class="subst">$&#123;<span class="keyword">this</span>.data[index1].value[index2].month&#125;</span>`</span>;</span><br><span class="line">    <span class="built_in">document</span>.querySelector(<span class="string">'.tooltip .value'</span>).innerHTML = <span class="string">`<span class="subst">$&#123;<span class="keyword">this</span>.data[index1].value[index2].number&#125;</span> 件`</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 顯示 tooltip</span></span><br><span class="line">    <span class="keyword">this</span>.hideTooltip = <span class="literal">false</span>;</span><br><span class="line">  &#125;,</span><br><span class="line">  hiddenTooltip() &#123;</span><br><span class="line">    <span class="keyword">this</span>.hideTooltip = <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>全部畫好的樣子如下圖，可以去 <a href="https://github.com/Annilla/d3-practice-vue-svg/blob/master/src/components/LineChart.vue" target="_blank" rel="noopener">Github</a> 查看完整程式碼喔！也可以在<a href="https://annilla.github.io/d3-practice-vue-svg/dist/">這裡</a>查看折線圖的 Demo，我們下回見～</p><p><img src="http://i965.photobucket.com/albums/ae138/anny09117011/Blog/2018-02-03_1314.png" alt="折線圖完成" title="折線圖"></p><hr><h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><ul><li><p><a href="https://github.com/xswei/d3js_doc/blob/master/API_Reference/d3-axis/README.md#axis_tickSizeInner" target="_blank" rel="noopener">D3 中文文件 - tickSizeInner</a></p></li><li><p><a href="https://vuejs.org/v2/guide/transitions.html#ad" target="_blank" rel="noopener">Vue Transition</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;D3&lt;/code&gt; 是一個 &lt;code&gt;js library&lt;/code&gt; ，讓開發者在向量繪圖時，能快速算出圖表物件在繪圖區域的路徑座標、座標軸、動態顏色等許多好用的 &lt;code&gt;function&lt;/code&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="D3" scheme="http://annilla.github.io/categories/D3/"/>
    
    
      <category term="Vue" scheme="http://annilla.github.io/tags/Vue/"/>
    
      <category term="D3" scheme="http://annilla.github.io/tags/D3/"/>
    
      <category term="SVG" scheme="http://annilla.github.io/tags/SVG/"/>
    
  </entry>
  
  <entry>
    <title>.NET Core 2.0 Debug with VScode</title>
    <link href="http://annilla.github.io/2017/12/25/DotnetCore/NET-Core-2-0-Debug-with-VScode/"/>
    <id>http://annilla.github.io/2017/12/25/DotnetCore/NET-Core-2-0-Debug-with-VScode/</id>
    <published>2017-12-24T16:00:00.000Z</published>
    <updated>2017-12-24T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>這次要教大家如何使用 <code>VScode</code> debug <code>.Net Core</code> 的專案喔～<br><a id="more"></a></p><h2 id="安裝套件-C"><a href="#安裝套件-C" class="headerlink" title="安裝套件 C#"></a>安裝套件 <code>C#</code></h2><p>前往擴充套件頁籤安裝 <code>C#</code> plugin。</p><p><img src="http://i965.photobucket.com/albums/ae138/anny09117011/Blog/2017-12-25_1355.png" alt="安裝擴充套件" title="VScode"></p><p>安裝完成重新啟動後，<code>VScode</code> 會自動安裝符合目前作業系統的 <code>OmniSharp</code>。</p><p><img src="http://i965.photobucket.com/albums/ae138/anny09117011/Blog/2017-12-25_1356.png" alt="重啟後 OmniSharp 自動安裝" title="VScode"></p><h2 id="加入偵錯設定"><a href="#加入偵錯設定" class="headerlink" title="加入偵錯設定"></a>加入偵錯設定</h2><p>打開 <code>Program.cs</code> ，<code>VScode</code> 會提示使用者進行資產建置及偵錯您的應用程式。選取 <code>Yes</code>。</p><p><img src="https://docs.microsoft.com/zh-tw/dotnet/core/tutorials/media/with-visual-studio-code/missing-assets.png" alt="提示使用者進行資產建置及偵錯您的應用程式" title="VScode"></p><p>選取 <code>Yes</code> 之後，系統會自動產生 <code>.vscode</code> 的資料夾，放置工作任務設定檔。</p><p><img src="http://i965.photobucket.com/albums/ae138/anny09117011/Blog/2017-12-25_1410.png" alt="系統會自動產生 .vscode 的資料夾" title="VScode"></p><h2 id="測試偵錯"><a href="#測試偵錯" class="headerlink" title="測試偵錯"></a>測試偵錯</h2><ol><li>確定環境選項是 <code>.Net Core Launch (Web)</code>。</li><li>開啟 <code>HomeController.cs</code> 下中斷點。</li><li>快捷鍵 <code>F5</code> 或點 <code>綠色箭號按鈕</code> 啟動偵錯。</li></ol><p><img src="http://i965.photobucket.com/albums/ae138/anny09117011/Blog/2017-12-25_1429.png" alt="測試偵錯" title="VScode"></p><p>當偵錯程式到達中斷點時，它會停止執行程式。可以看到即時的變數狀態。</p><p><img src="http://i965.photobucket.com/albums/ae138/anny09117011/Blog/2017-12-25_1432.png" alt="偵錯程式到達中斷點" title="VScode"></p><p>選取頂端的綠色箭頭以繼續偵錯，或者選取頂端的紅色正方形以停止偵錯。</p><p>如此一來，<code>.Net Core</code> 專案就能完全使用 <code>VScode</code> 來開發和偵錯囉，不用怕電腦卡卡，也能夠快速唰唰的專心寫程式囉～</p><p>今天的範例在 <a href="https://github.com/Annilla/dotnet-core-vue-cli/tree/v1.1.0" target="_blank" rel="noopener">github</a>，下回見～</p><h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><ul><li><a href="https://docs.microsoft.com/zh-tw/dotnet/core/tutorials/with-visual-studio-code#debug" target="_blank" rel="noopener">C# 與 Visual Studio Code 使用者入門 - 偵錯</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;這次要教大家如何使用 &lt;code&gt;VScode&lt;/code&gt; debug &lt;code&gt;.Net Core&lt;/code&gt; 的專案喔～&lt;br&gt;
    
    </summary>
    
      <category term=".NET Core" scheme="http://annilla.github.io/categories/NET-Core/"/>
    
    
      <category term=".NET Core" scheme="http://annilla.github.io/tags/NET-Core/"/>
    
      <category term="dotnet" scheme="http://annilla.github.io/tags/dotnet/"/>
    
      <category term="Vue" scheme="http://annilla.github.io/tags/Vue/"/>
    
      <category term="Webpack" scheme="http://annilla.github.io/tags/Webpack/"/>
    
      <category term="SPA" scheme="http://annilla.github.io/tags/SPA/"/>
    
      <category term="MVC" scheme="http://annilla.github.io/tags/MVC/"/>
    
      <category term="VScode" scheme="http://annilla.github.io/tags/VScode/"/>
    
  </entry>
  
</feed>
