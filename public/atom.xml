<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Anny Chang - F2E &amp; UI Designer</title>
  
  <subtitle>Design thinking is EVERYWHERE</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://annilla.github.io/"/>
  <updated>2017-09-01T16:00:00.000Z</updated>
  <id>http://annilla.github.io/</id>
  
  <author>
    <name>Anny Chang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Webpack 3 Tutorial - Webpack Dev Server</title>
    <link href="http://annilla.github.io/2017/09/02/Webpack/Webpack-3-Tutorial-Webpack-Dev-Server/"/>
    <id>http://annilla.github.io/2017/09/02/Webpack/Webpack-3-Tutorial-Webpack-Dev-Server/</id>
    <published>2017-09-01T16:00:00.000Z</published>
    <updated>2017-09-01T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://cdn-images-1.medium.com/max/1920/1*gdoQ1_5OID90wf1eLTFvWw.png" alt=""></p><p>作者：Anny Chang</p><p>此篇介紹如何加入並使用 <code>webpack-dev-server</code>，並展示 <code>Hot Reload</code> 功能。<br><a id="more"></a></p><h2 id="安裝-webpack-dev-server"><a href="#安裝-webpack-dev-server" class="headerlink" title="安裝 webpack-dev-server"></a>安裝 <code>webpack-dev-server</code></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm i -D webpack-dev-server</div></pre></td></tr></table></figure><h2 id="設定-webpack-config-js"><a href="#設定-webpack-config-js" class="headerlink" title="設定 webpack.config.js"></a>設定 <code>webpack.config.js</code></h2><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">module</span>.exports = &#123;</div><div class="line">  ......</div><div class="line">  devServer: &#123;</div><div class="line">    contentBase: path.join(__dirname, <span class="string">"dist"</span>), <span class="comment">// 從哪裡提供內容</span></div><div class="line">    port: <span class="number">9000</span> <span class="comment">// http://localhost:9000</span></div><div class="line">  &#125;,</div><div class="line">  ......</div><div class="line">&#125;;</div></pre></td></tr></table></figure><h2 id="設定-package-json"><a href="#設定-package-json" class="headerlink" title="設定 package.json"></a>設定 <code>package.json</code></h2><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  ......</div><div class="line">  <span class="string">"scripts"</span>: &#123;</div><div class="line">    <span class="string">"dev"</span>: <span class="string">"webpack-dev-server --open"</span>,</div><div class="line">    ......</div><div class="line">  &#125;,</div><div class="line">  ......</div><div class="line">&#125;</div></pre></td></tr></table></figure><ul><li>–open: 自動開啟預設瀏覽器</li></ul><p>執行 <code>npm</code> 指令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm run dev</div></pre></td></tr></table></figure></p><p>就會自動開啟瀏覽器看到預覽的畫面囉！</p><p><img src="http://i965.photobucket.com/albums/ae138/anny09117011/Blog/2017-09-02_0927.png" alt="執行 npm run dev" title="dist/index.html"></p><p>疑？內容的文字怎麼好像被切掉了。我們趕緊來試試看修改 <code>css</code> 的部分，順便看看  <code>Hot Reload</code> 的威力吧～</p><blockquote><p>關於實時加載（Live Reload）和熱加載（Hot Reload）的區別在於:實時加載應用更新時需要刷新當前頁面，可以看到明顯的全局刷新效果;而熱加載基本上看不出刷新的效果，類似於局部刷新。</p></blockquote><h2 id="測試-Hot-Reload"><a href="#測試-Hot-Reload" class="headerlink" title="測試 Hot Reload"></a>測試 <code>Hot Reload</code></h2><p>修改 <code>src/app.scss</code>，把字體變形的樣式註解掉</p><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">body</span> &#123;</div><div class="line">    <span class="attribute">background-color</span>: yellowgreen;</div><div class="line">    h1 &#123;</div><div class="line">        <span class="selector-tag">color</span>: <span class="selector-tag">green</span>;</div><div class="line">        // transform: scale(1.5);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>結果 <code>webpack-dev-server</code> 就幫我們即時打包並刷新瀏覽器頁面，所以我們就可以專心的寫code，畫面就會即時的自動更新囉，是不是超方便的啊？</p><p><img src="http://i965.photobucket.com/albums/ae138/anny09117011/Blog/2017-09-02_0928.png" alt="Hot Reload" title="dist/index.html"></p><p>今天的範例程式檔<a href="https://github.com/Annilla/webpack_practice/tree/v1.3.0" target="_blank" rel="external">github</a>，感謝收看。</p><h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><ul><li><p><a href="https://webpack.js.org/guides/development/#using-webpack-dev-server" target="_blank" rel="external">Use Webpack Dev Server</a></p></li><li><p><a href="https://webpack.js.org/configuration/dev-server/" target="_blank" rel="external">Webpack Dev Server Configuration</a></p></li><li><p><a href="http://www.jianshu.com/p/1fa6e9c0799f" target="_blank" rel="external">React Native 热加载（Hot Reload）原理简介</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/1920/1*gdoQ1_5OID90wf1eLTFvWw.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;作者：Anny Chang&lt;/p&gt;
&lt;p&gt;此篇介紹如何加入並使用 &lt;code&gt;webpack-dev-server&lt;/code&gt;，並展示 &lt;code&gt;Hot Reload&lt;/code&gt; 功能。&lt;br&gt;
    
    </summary>
    
      <category term="Webpack" scheme="http://annilla.github.io/categories/Webpack/"/>
    
    
      <category term="Webpack" scheme="http://annilla.github.io/tags/Webpack/"/>
    
  </entry>
  
  <entry>
    <title>Webpack 3 Tutorial - Style, CSS, Sass and Postcss loaders</title>
    <link href="http://annilla.github.io/2017/08/01/Webpack/Webpack-3-Tutorial-Style-CSS-and-Sass-loaders/"/>
    <id>http://annilla.github.io/2017/08/01/Webpack/Webpack-3-Tutorial-Style-CSS-and-Sass-loaders/</id>
    <published>2017-07-31T16:00:00.000Z</published>
    <updated>2017-07-31T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://cdn-images-1.medium.com/max/1920/1*gdoQ1_5OID90wf1eLTFvWw.png" alt=""></p><p>作者：Anny Chang</p><p>此篇介紹如何將 <code>CSS</code> 、 <code>SASS</code> 引入 <code>Webpack</code> 專案中，並使用 <code>postcss</code> 的 <code>autoprefixer</code> 自動將 <code>CSS</code> 加入相對的瀏覽器前綴。<br><a id="more"></a></p><h2 id="安裝-css-loader-style-loader"><a href="#安裝-css-loader-style-loader" class="headerlink" title="安裝 css-loader style-loader"></a>安裝 <code>css-loader</code> <code>style-loader</code></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm i -D css-loader</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm i -D style-loader</div></pre></td></tr></table></figure><h2 id="設定-webpack-config-js"><a href="#設定-webpack-config-js" class="headerlink" title="設定 webpack.config.js"></a>設定 <code>webpack.config.js</code></h2><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">module</span>.exports = &#123;</div><div class="line">  ......</div><div class="line">  <span class="built_in">module</span>: &#123;</div><div class="line">    rules: [</div><div class="line">      &#123;</div><div class="line">        test: <span class="regexp">/\.css$/</span>,</div><div class="line">        use: [ <span class="string">'style-loader'</span>, <span class="string">'css-loader'</span> ]</div><div class="line">      &#125;</div><div class="line">    ]</div><div class="line">  &#125;,</div><div class="line">  ......</div><div class="line">&#125;;</div></pre></td></tr></table></figure><h2 id="測試-CSS"><a href="#測試-CSS" class="headerlink" title="測試 CSS"></a>測試 <code>CSS</code></h2><ol><li>在 <code>src</code> 資料夾創建一隻 <code>app.css</code></li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">body</span> &#123;</div><div class="line">  <span class="attribute">background-color</span>: yellowgreen;</div><div class="line">&#125;</div></pre></td></tr></table></figure><ol><li>將 <code>app.css</code> 引入 <code>app.js</code> 中</li></ol><p>在 <code>app.js</code> 加入</p><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">require</span>(<span class="string">'./app.css'</span>);</div></pre></td></tr></table></figure><ol><li>執行 <code>webpack</code> 打包</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm run prod</div></pre></td></tr></table></figure><p>執行完打開 <code>dist</code> 資料夾 <code>index.html</code> 就可以看到我們更改的草綠色背景囉！</p><p><img src="http://i965.photobucket.com/albums/ae138/anny09117011/Blog/2017-07-30_0936.png" alt="網頁更改成草綠色背景囉" title="dist/index.html"></p><p>到這裡我們完成引入 <code>CSS</code> 的動作，接下來要來試試引入 <code>SASS</code>。</p><h2 id="安裝-sass-loader"><a href="#安裝-sass-loader" class="headerlink" title="安裝 sass-loader"></a>安裝 <code>sass-loader</code></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm i sass-loader node-sass webpack -D</div></pre></td></tr></table></figure><h2 id="修改-webpack-config-js"><a href="#修改-webpack-config-js" class="headerlink" title="修改 webpack.config.js"></a>修改 <code>webpack.config.js</code></h2><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">module</span>.exports = &#123;</div><div class="line">  ......</div><div class="line">  <span class="built_in">module</span>: &#123;</div><div class="line">    rules: [</div><div class="line">      &#123;</div><div class="line">        test: <span class="regexp">/\.css|scss$/</span>,</div><div class="line">        use: [ <span class="string">'style-loader'</span>, <span class="string">'css-loader'</span>, <span class="string">'sass-loader'</span> ]</div><div class="line">      &#125;</div><div class="line">    ]</div><div class="line">  &#125;,</div><div class="line">  ......</div><div class="line">&#125;;</div></pre></td></tr></table></figure><h2 id="測試-SASS"><a href="#測試-SASS" class="headerlink" title="測試 SASS"></a>測試 <code>SASS</code></h2><ol><li>在 <code>src</code> 資料夾將 <code>app.css</code> 修改成 <code>app.scss</code></li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">body</span> &#123;</div><div class="line">  <span class="attribute">background-color</span>: yellowgreen;</div><div class="line">  h1 &#123;</div><div class="line">    <span class="selector-tag">color</span>: <span class="selector-tag">green</span>;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><ol><li>在 <code>src</code> 資料夾修改 <code>index.html</code></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span> Test SASS Loader<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div></pre></td></tr></table></figure><ol><li>將 <code>app.scss</code> 引入 <code>app.js</code> 中</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">require</span>(<span class="string">'./app.scss'</span>);</div></pre></td></tr></table></figure><ol><li>執行 <code>webpack</code> 打包</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm run prod</div></pre></td></tr></table></figure><p>執行完打開 <code>dist</code> 資料夾 <code>index.html</code> 就可以看到我們更改的標題顏色囉！</p><p><img src="http://i965.photobucket.com/albums/ae138/anny09117011/Blog/2017-07-30_1001.png" alt="網頁更改標題顏色" title="dist/index.html"></p><p><code>SASS</code> 引入完成！！大家有發現網頁上的 <code>css</code> 怎麼都是跑到 <code>head</code> 裡面啦？接下來要教怎麼輸出成一隻 <code>css</code> 用 <code>link</code> 的方式引入到頁面上。</p><h2 id="安裝-ExtractTextWebpackPlugin"><a href="#安裝-ExtractTextWebpackPlugin" class="headerlink" title="安裝 ExtractTextWebpackPlugin"></a>安裝 <code>ExtractTextWebpackPlugin</code></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm i -D extract-text-webpack-plugin</div></pre></td></tr></table></figure><h2 id="修改-webpack-config-js-1"><a href="#修改-webpack-config-js-1" class="headerlink" title="修改 webpack.config.js"></a>修改 <code>webpack.config.js</code></h2><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> ExtractTextPlugin = <span class="built_in">require</span>(<span class="string">"extract-text-webpack-plugin"</span>);</div><div class="line">......</div><div class="line"><span class="built_in">module</span>.exports = &#123;</div><div class="line">  ......</div><div class="line">  <span class="built_in">module</span>: &#123;</div><div class="line">    rules: [</div><div class="line">      &#123;</div><div class="line">        test: <span class="regexp">/\.css|scss$/</span>,</div><div class="line">        use: ExtractTextPlugin.extract(&#123;</div><div class="line">          fallback: <span class="string">'style-loader'</span>,</div><div class="line">          <span class="comment">//resolve-url-loader may be chained before sass-loader if necessary</span></div><div class="line">          use: [<span class="string">'css-loader'</span>, <span class="string">'sass-loader'</span>]</div><div class="line">        &#125;)</div><div class="line">      &#125;</div><div class="line">    ]</div><div class="line">  &#125;,</div><div class="line">  plugins: [</div><div class="line">    ......</div><div class="line">    <span class="keyword">new</span> ExtractTextPlugin(&#123;</div><div class="line">      filename: <span class="string">'app.css'</span>,</div><div class="line">      disable: <span class="literal">false</span>,</div><div class="line">      allChunks: <span class="literal">true</span></div><div class="line">    &#125;)</div><div class="line">  ]</div><div class="line">&#125;;</div></pre></td></tr></table></figure><ul><li>執行 <code>webpack</code> 打包</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm run prod</div></pre></td></tr></table></figure><p>執行完打開 <code>dist</code> 資料夾 <code>index.html</code> 就可以看到 <code>app.css</code> 在 <code>head</code> 裡面囉！</p><p>每次因為不同瀏覽器寫前綴語是不是超麻煩的啊？接下來要來引入 <code>postcss</code> 的 <code>autoprefixer</code> ，透過設定 browserlist 讓 Webpack 自動做完這些事情呦。</p><h2 id="安裝-postcss-loader"><a href="#安裝-postcss-loader" class="headerlink" title="安裝 postcss-loader"></a>安裝 <code>postcss-loader</code></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm i -D  postcss-loader</div></pre></td></tr></table></figure><h2 id="新增-postcss-config-js"><a href="#新增-postcss-config-js" class="headerlink" title="新增 postcss.config.js"></a>新增 <code>postcss.config.js</code></h2><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">module</span>.exports = &#123;</div><div class="line">  plugins: &#123;</div><div class="line">    <span class="string">'autoprefixer'</span>: &#123;&#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="在-package-json-設定-browserslist"><a href="#在-package-json-設定-browserslist" class="headerlink" title="在 package.json 設定 browserslist"></a>在 <code>package.json</code> 設定 <code>browserslist</code></h2><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  ......</div><div class="line">  <span class="string">"browserslist"</span>: [</div><div class="line">    <span class="string">"Explorer 11"</span>,</div><div class="line">    <span class="string">"&gt; 1%"</span>,</div><div class="line">    <span class="string">"last 2 versions"</span>,</div><div class="line">    <span class="string">"not ie &lt;= 10"</span></div><div class="line">  ]</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="修改-webpack-config-js-2"><a href="#修改-webpack-config-js-2" class="headerlink" title="修改 webpack.config.js"></a>修改 <code>webpack.config.js</code></h2><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">module</span>.exports = &#123;</div><div class="line">  ......</div><div class="line">  <span class="built_in">module</span>: &#123;</div><div class="line">    rules: [</div><div class="line">      &#123;</div><div class="line">        test: <span class="regexp">/\.css|scss$/</span>,</div><div class="line">        use: ExtractTextPlugin.extract(&#123;</div><div class="line">          fallback: <span class="string">'style-loader'</span>,</div><div class="line">          <span class="comment">//resolve-url-loader may be chained before sass-loader if necessary</span></div><div class="line">          use: [<span class="string">'css-loader'</span>, <span class="string">'postcss-loader'</span>, <span class="string">'sass-loader'</span>]</div><div class="line">        &#125;)</div><div class="line">      &#125;</div><div class="line">    ]</div><div class="line">  &#125;</div><div class="line">  ......</div><div class="line">&#125;;</div></pre></td></tr></table></figure><h2 id="測試-postcss"><a href="#測試-postcss" class="headerlink" title="測試 postcss"></a>測試 <code>postcss</code></h2><ol><li>修改 <code>app.scss</code> 檔案</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">body</span> &#123;</div><div class="line">    <span class="attribute">background-color</span>: yellowgreen;</div><div class="line">    h1 &#123;</div><div class="line">        <span class="selector-tag">color</span>: <span class="selector-tag">green</span>;</div><div class="line">        <span class="selector-tag">transform</span>: <span class="selector-tag">scale</span>(1<span class="selector-class">.5</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><ol><li>執行 <code>Webpack</code> 打包</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm run prod</div></pre></td></tr></table></figure><p>打開 <code>dist/app.css</code> 就可以看到下面自動加入前綴語的 <code>css</code> 囉～</p><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">body</span>&#123;<span class="attribute">background-color</span>:<span class="number">#9acd32</span>&#125;<span class="selector-tag">body</span> <span class="selector-tag">h1</span>&#123;<span class="attribute">color</span>:green;<span class="attribute">-webkit-transform</span>:<span class="built_in">scale</span>(1.5);<span class="attribute">-ms-transform</span>:<span class="built_in">scale</span>(1.5);<span class="attribute">transform</span>:<span class="built_in">scale</span>(1.5)&#125;</div></pre></td></tr></table></figure><p>今天的實作檔案整理在此<a href="https://github.com/Annilla/webpack_practice/tree/v1.2.0" target="_blank" rel="external">github</a>，謝謝收看。</p><h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><ul><li><a href="https://webpack.js.org/loaders/css-loader/#components/sidebar/sidebar.jsx" target="_blank" rel="external">Webpack css-loader</a></li><li><a href="https://webpack.js.org/loaders/style-loader/#components/sidebar/sidebar.jsx" target="_blank" rel="external">Webpack style-loader</a></li><li><a href="https://webpack.js.org/loaders/sass-loader/#components/sidebar/sidebar.jsx" target="_blank" rel="external">Webpack sass-loader</a></li><li><a href="https://webpack.js.org/plugins/extract-text-webpack-plugin/#components/sidebar/sidebar.jsx" target="_blank" rel="external">Webpack ExtractTextWebpackPlugin</a></li><li><a href="https://webpack.js.org/loaders/postcss-loader/#components/sidebar/sidebar.jsx" target="_blank" rel="external">Webpack postcss-loader</a></li><li><a href="https://github.com/ai/browserslist" target="_blank" rel="external">Browserslist</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/1920/1*gdoQ1_5OID90wf1eLTFvWw.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;作者：Anny Chang&lt;/p&gt;
&lt;p&gt;此篇介紹如何將 &lt;code&gt;CSS&lt;/code&gt; 、 &lt;code&gt;SASS&lt;/code&gt; 引入 &lt;code&gt;Webpack&lt;/code&gt; 專案中，並使用 &lt;code&gt;postcss&lt;/code&gt; 的 &lt;code&gt;autoprefixer&lt;/code&gt; 自動將 &lt;code&gt;CSS&lt;/code&gt; 加入相對的瀏覽器前綴。&lt;br&gt;
    
    </summary>
    
      <category term="Webpack" scheme="http://annilla.github.io/categories/Webpack/"/>
    
    
      <category term="Webpack" scheme="http://annilla.github.io/tags/Webpack/"/>
    
  </entry>
  
  <entry>
    <title>Webpack 3 Tutorial - HTML Webpack Plugin</title>
    <link href="http://annilla.github.io/2017/06/30/Webpack/Webpack-3-Tutorial-HTML-Webpack-Plugin/"/>
    <id>http://annilla.github.io/2017/06/30/Webpack/Webpack-3-Tutorial-HTML-Webpack-Plugin/</id>
    <published>2017-06-29T16:00:00.000Z</published>
    <updated>2017-06-29T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://cdn-images-1.medium.com/max/1920/1*gdoQ1_5OID90wf1eLTFvWw.png" alt=""></p><p>作者：Anny Chang</p><p>此篇介紹使用 <code>HTML Webpack Plugin</code>，他可以自動生成 <code>html</code> 並將 <code>app.bundle.js</code> 自動加在 <code>html</code> 結尾處。<br><a id="more"></a></p><h2 id="安裝-HTML-Webpack-Plugin"><a href="#安裝-HTML-Webpack-Plugin" class="headerlink" title="安裝 HTML Webpack Plugin"></a>安裝 <code>HTML Webpack Plugin</code></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm i -D html-webpack-plugin</div></pre></td></tr></table></figure><h2 id="設定-webpack-config-js"><a href="#設定-webpack-config-js" class="headerlink" title="設定 webpack.config.js"></a>設定 <code>webpack.config.js</code></h2><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>); <span class="comment">// 引入 html-webpack-plugin</span></div><div class="line"><span class="keyword">var</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</div><div class="line"></div><div class="line"><span class="built_in">module</span>.exports = &#123;</div><div class="line">entry: <span class="string">'./src/app.js'</span>,</div><div class="line">output: &#123;</div><div class="line"></div><div class="line">  path: path.resolve(__dirname, <span class="string">'dist'</span>),</div><div class="line">  <span class="comment">// the target directory for all output files</span></div><div class="line">  <span class="comment">// must be an absolute path (use the Node.js path module)</span></div><div class="line"></div><div class="line">  filename: <span class="string">'app.bundle.js'</span></div><div class="line">  <span class="comment">// the filename template for entry chunks</span></div><div class="line"></div><div class="line">&#125;,</div><div class="line"></div><div class="line">plugins: [<span class="keyword">new</span> HtmlWebpackPlugin()] <span class="comment">// 使用 html-webpack-plugin</span></div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="自動生成-html"><a href="#自動生成-html" class="headerlink" title="自動生成 html"></a>自動生成 <code>html</code></h2><p>執行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm run dev</div></pre></td></tr></table></figure><p>或</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm run prod</div></pre></td></tr></table></figure><p>就可以看到 <code>dist</code> 內生成 <code>index.html</code> 囉～</p><p><img src="http://i965.photobucket.com/albums/ae138/anny09117011/Blog/2017-06-30_1615.png" alt="dist 內生成 index.html" title="dist/index.html"></p><h2 id="撰寫-html-templates"><a href="#撰寫-html-templates" class="headerlink" title="撰寫 html templates"></a>撰寫 html templates</h2><p>如果想要客製化自己的 <code>html</code> 模板要怎麼辦呢？<br>我個人是喜歡用 <code>pug</code> 來寫，<br>不過 <code>HTML Webpack Plugin</code> 有內建模板使用方式，<br>所以就先示範內建的使用方式囉～</p><ol><li>修改 <code>webpack.config.js</code></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">module</span>.exports = &#123;</div><div class="line">  ...</div><div class="line">  plugins: [</div><div class="line">    <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</div><div class="line">      title: <span class="string">'Custom template'</span>, <span class="comment">// 客製化的 html 標題</span></div><div class="line">      template: <span class="string">'./src/index.html'</span> <span class="comment">// 模板的位置</span></div><div class="line">    &#125;)</div><div class="line">  ]</div><div class="line">  ...</div><div class="line">&#125;</div></pre></td></tr></table></figure><ol><li>建立 <code>html</code> 模板</li></ol><p>在 <code>src</code> 資料夾新增 <code>index.html</code>，<br><code>&lt;%= htmlWebpackPlugin.options.title %&gt;</code> 到時候會被 <code>webpack.config.js</code> 內設定的標題取代掉喔。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=utf-8"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">htmlWebpackPlugin.options.title</span> %&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure><ol><li>自動產生客製化 <code>html</code></li></ol><p>執行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm run dev</div></pre></td></tr></table></figure><p>或</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm run prod</div></pre></td></tr></table></figure><p>就可以看到 <code>dist</code> 內新生成的 <code>index.html</code> 囉～</p><p><img src="http://i965.photobucket.com/albums/ae138/anny09117011/Blog/2017-06-30_1655.png" alt="dist 內新客製化 index.html" title="dist/index.html"></p><p>今天的實作檔案在<a href="https://github.com/Annilla/webpack_practice/tree/v1.1.0" target="_blank" rel="external">github</a> 。等前面幾篇基礎的介紹完，之後會介紹 <code>pug</code> 怎麼跟 <code>HTML Webpack Plugin</code> 做結合，敬請期待。</p><h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><ul><li><a href="https://github.com/jantimon/html-webpack-plugin" target="_blank" rel="external">HTML Webpack Plugin</a></li><li><a href="https://webpack.js.org/plugins/html-webpack-plugin/" target="_blank" rel="external">Webpack HtmlWebpackPlugin</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/1920/1*gdoQ1_5OID90wf1eLTFvWw.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;作者：Anny Chang&lt;/p&gt;
&lt;p&gt;此篇介紹使用 &lt;code&gt;HTML Webpack Plugin&lt;/code&gt;，他可以自動生成 &lt;code&gt;html&lt;/code&gt; 並將 &lt;code&gt;app.bundle.js&lt;/code&gt; 自動加在 &lt;code&gt;html&lt;/code&gt; 結尾處。&lt;br&gt;
    
    </summary>
    
      <category term="Webpack" scheme="http://annilla.github.io/categories/Webpack/"/>
    
    
      <category term="Webpack" scheme="http://annilla.github.io/tags/Webpack/"/>
    
  </entry>
  
  <entry>
    <title>Webpack 3 Tutorial - Installation and Config</title>
    <link href="http://annilla.github.io/2017/06/14/Webpack/Webpack-3-Tutorial-Installation-and-Config/"/>
    <id>http://annilla.github.io/2017/06/14/Webpack/Webpack-3-Tutorial-Installation-and-Config/</id>
    <published>2017-06-13T16:00:00.000Z</published>
    <updated>2017-06-29T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://cdn-images-1.medium.com/max/1920/1*gdoQ1_5OID90wf1eLTFvWw.png" alt=""></p><p>作者：Anny Chang</p><h1 id="什麼是-Webpack"><a href="#什麼是-Webpack" class="headerlink" title="什麼是 Webpack ?"></a>什麼是 Webpack ?</h1><p><code>Webpack</code> 是針對所有前端程式的管理整合工具。工程師編寫程式模組（<code>html</code>, <code>css</code>, <code>js</code>, <code>sass</code>, <code>pug</code>, <code>babel</code>, … etc.），使用 <code>webpack</code> 打包輸出靜態資產（assets）,配合<code>Babel</code>, <code>ES6</code>使用，可以寫出乾淨可復用的代碼，做到更好的前端程式管理。這一篇先示範基礎安裝和設定基本描述檔。<br><a id="more"></a></p><h2 id="安裝環境"><a href="#安裝環境" class="headerlink" title="安裝環境"></a>安裝環境</h2><ol><li><p>安裝 <a href="https://nodejs.org/en/" target="_blank" rel="external">Node.js</a></p></li><li><p>開一個專案資料夾，建置 <code>npm</code> 專案</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm init</div></pre></td></tr></table></figure><p>設定 package.json</p><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  <span class="string">"name"</span>: <span class="string">"Your Project Name"</span>,</div><div class="line">  <span class="string">"version"</span>: <span class="string">"1.0.0"</span>,</div><div class="line">  <span class="string">"description"</span>: <span class="string">"Webpack project."</span>,</div><div class="line">  <span class="string">"main"</span>: <span class="string">"index.js"</span>,</div><div class="line">  <span class="string">"scripts"</span>: &#123;</div><div class="line">    <span class="string">"test"</span>: <span class="string">"echo \"Error: no test specified\" &amp;&amp; exit 1"</span>,</div><div class="line">  &#125;,</div><div class="line">  <span class="string">"author"</span>: <span class="string">"Your Name"</span>,</div><div class="line">  <span class="string">"license"</span>: <span class="string">"ISC"</span>,</div><div class="line">&#125;</div></pre></td></tr></table></figure><ol><li>安裝開發端套件 Webpack<br>安裝全域(global)</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm -g i webpack</div></pre></td></tr></table></figure><blockquote><p>只有第一次使用<code>webpack</code>需要安裝全域，裝過一次之後就可以不用再安裝global</p></blockquote><p>專案開發端安裝套件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm i -D webpack</div></pre></td></tr></table></figure><h2 id="組織專案架構"><a href="#組織專案架構" class="headerlink" title="組織專案架構"></a>組織專案架構</h2><p>在專案建立 src 和 dist 資料夾。</p><ul><li>src: 工程師寫的程式放這裡。</li><li>dist: <code>webpack</code> 自動打包出來的檔案會放這裡。</li><li>src/app.js: 建立一支 <code>js</code> 檔案，等會要來測試 <code>webpack</code> 自動打包的功能用。</li></ul><p>app.js 內可以隨意寫 console 來測試</p><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">console</span>.log(<span class="string">'Hello World!'</span>);</div></pre></td></tr></table></figure><h2 id="設定描述檔"><a href="#設定描述檔" class="headerlink" title="設定描述檔"></a>設定描述檔</h2><ol><li>在專案下新增<code>webpack.config.js</code>檔案。</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">module</span>.exports = &#123;</div><div class="line">  entry: <span class="string">'./src/app.js'</span>,</div><div class="line">  output: &#123;</div><div class="line">    filename: <span class="string">'./dist/app.bundle.js'</span></div><div class="line">  &#125;,</div><div class="line">&#125;</div></pre></td></tr></table></figure><ul><li>entry: 開始執行打包的入口</li><li>output: 輸出結果設定<ul><li>filename: 輸出結果的名稱</li></ul></li></ul><ol><li>修改<code>package.json</code>檔案 <code>scripts</code></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  ...</div><div class="line">  <span class="string">"scripts"</span>: &#123;</div><div class="line">    <span class="string">"dev"</span>: <span class="string">"webpack -d --watch"</span>,</div><div class="line">    <span class="string">"prod"</span>: <span class="string">"webpack -p"</span></div><div class="line">  &#125;,</div><div class="line">  ...</div><div class="line">&#125;</div></pre></td></tr></table></figure><ul><li>-d: 開發模式輸出，不會 minify js</li><li>–watch: 監聽程式碼修改，支援即時輸出</li><li>-p: 產品模式輸出，會 minify js</li></ul><h2 id="執行-webpack-打包測試"><a href="#執行-webpack-打包測試" class="headerlink" title="執行 webpack 打包測試"></a>執行 webpack 打包測試</h2><ol><li>執行<code>package.json</code>內<code>script</code>設定的 dev</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm run dev</div></pre></td></tr></table></figure><ul><li>結果：會在 <code>dist</code> 資料夾內產<code>app.bundle.js</code>，沒有 minify</li></ul><ol><li>執行<code>package.json</code>內<code>script</code>設定的 prod</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm run prod</div></pre></td></tr></table></figure><ul><li>結果：會在 <code>dist</code> 資料夾內產<code>app.bundle.js</code>，有 minify</li></ul><p>基本 webpack 練習完成囉～實際操作影片可觀賞 Ihatetomatoes 大大的 YOUTUBE 教學<a href="https://www.youtube.com/watch?v=JdGnYNtuEtE&amp;index=1&amp;list=PLkEZWD8wbltnRp6nRR8kv97RbpcUdNawY" target="_blank" rel="external">Webpack 2 Tutorial - Installation and Config</a>，感謝觀看 :)</p><blockquote><p>更新：2017/06/30 Webpack 版本更新到 3 囉 ！所以直接測試 3，發現無痛接軌沒問題，實作在 <a href="https://github.com/Annilla/webpack_practice/tree/v1.0.0" target="_blank" rel="external">github</a>，之後就直接都用 3 版實作囉。</p></blockquote><h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><ul><li><a href="https://llp0574.github.io/2016/11/29/getting-started-with-webpack2/" target="_blank" rel="external">Webpack 2 入門教程</a></li><li><a href="https://www.youtube.com/watch?v=JdGnYNtuEtE&amp;index=1&amp;list=PLkEZWD8wbltnRp6nRR8kv97RbpcUdNawY" target="_blank" rel="external">Webpack 2 Tutorial - Installation and Config</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/1920/1*gdoQ1_5OID90wf1eLTFvWw.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;作者：Anny Chang&lt;/p&gt;
&lt;h1 id=&quot;什麼是-Webpack&quot;&gt;&lt;a href=&quot;#什麼是-Webpack&quot; class=&quot;headerlink&quot; title=&quot;什麼是 Webpack ?&quot;&gt;&lt;/a&gt;什麼是 Webpack ?&lt;/h1&gt;&lt;p&gt;&lt;code&gt;Webpack&lt;/code&gt; 是針對所有前端程式的管理整合工具。工程師編寫程式模組（&lt;code&gt;html&lt;/code&gt;, &lt;code&gt;css&lt;/code&gt;, &lt;code&gt;js&lt;/code&gt;, &lt;code&gt;sass&lt;/code&gt;, &lt;code&gt;pug&lt;/code&gt;, &lt;code&gt;babel&lt;/code&gt;, … etc.），使用 &lt;code&gt;webpack&lt;/code&gt; 打包輸出靜態資產（assets）,配合&lt;code&gt;Babel&lt;/code&gt;, &lt;code&gt;ES6&lt;/code&gt;使用，可以寫出乾淨可復用的代碼，做到更好的前端程式管理。這一篇先示範基礎安裝和設定基本描述檔。&lt;br&gt;
    
    </summary>
    
      <category term="Webpack" scheme="http://annilla.github.io/categories/Webpack/"/>
    
    
      <category term="Webpack" scheme="http://annilla.github.io/tags/Webpack/"/>
    
  </entry>
  
</feed>
